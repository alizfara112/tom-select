{"version":3,"file":"sifter.js","sources":["../../../src/contrib/sifter.ts"],"sourcesContent":["/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TOptions = {\n \tfields: string|string[],\n \tsort: any[],\n \tscore?: ()=>any,\n \tfilter?: boolean,\n \tlimit?: number,\n \tsort_empty?: any,\n \tnesting?: boolean,\n\trespect_word_boundaries?: boolean,\n\tconjunction?: string,\n }\n\n\ntype TPrepareObj = {\n\toptions: TOptions,\n\tquery: string,\n\ttokens: any,\n\ttotal: number,\n\titems: any[]\n}\n\n\n\n// utilities\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nvar cmp = function(a, b) {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(String(a || ''));\n\tb = asciifold(String(b || ''));\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @param  {Boolean} nesting Handle nesting or not\n * @return {Object}          The resolved property value\n */\nvar getattr = function(obj, name, nesting) {\n    if (!obj || !name) return;\n    if (!nesting) return obj[name];\n    var names = name.split(\".\");\n    while(names.length && (obj = obj[names.shift()]));\n    return obj;\n};\n\nvar escape_regex = function(str) {\n\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n};\n\nvar DIACRITICS = {\n\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t'f': '[fƑƒḞḟ]',\n\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t'x': '[xẌẍẊẋχ]',\n\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n};\n\nvar asciifold = (function() {\n\tvar i, n, k, chunk;\n\tvar foreignletters = '';\n\tvar lookup = {};\n\tfor (k in DIACRITICS) {\n\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\tforeignletters += chunk;\n\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t}\n\t\t}\n\t}\n\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\treturn function(str) {\n\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\treturn lookup[foreignletter];\n\t\t}).toLowerCase();\n\t};\n})();\n\n\nexport default class Sifter{\n\n\tpublic items: []|{};\n\tpublic settings: {diacritics:boolean};\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tconstructor(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\ttokenize(query, options ) {\n\t\tquery = String(query || '').toLowerCase().trim();\n\t\tif (!query || !query.length) return [];\n\n\t\tvar letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/\\s+/);\n\n\t\tconst field_regex = new RegExp( '^('+options.fields.map(escape_regex).join('|')+')\\:(.*)$');\n\n\t\twords.forEach((word) => {\n\t\t\tlet field_match;\n\t\t\tlet field = null;\n\t\t\tlet regex = null;\n\n\t\t\t// look for \"field:query\" tokens\n\t\t\tif( options.fields.length > 1 && (field_match = word.match(field_regex)) ){\n\t\t\t\tfield\t= field_match[1];\n\t\t\t\tword\t= field_match[2];\n\t\t\t}\n\n\t\t\tif( word.length > 0 ){\n\t\t\t\tregex = escape_regex(word);\n\t\t\t\tif (this.settings.diacritics) {\n\t\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (options.respect_word_boundaries) regex = \"\\\\b\"+regex\n\t\t\t\tregex = new RegExp(regex, 'i');\n\t\t\t}\n\n\t\t\ttokens.push({\n\t\t\t\tstring : word,\n\t\t\t\tregex  : regex,\n\t\t\t\tfield  : field,\n\t\t\t});\n\t\t});\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\titerator(object, callback) {\n\t\tvar iterator;\n\t\tif (Array.isArray(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {function}\n\t */\n\tgetScoreFunction(query:string, options?:TOptions ){\n\t\tvar self, fields, tokens, token_count, nesting, search;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(query, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tvar sum = 0;\n\n\t\t\t\t// is the token specific to a field?\n\t\t\t\tif( token.field ){\n\n\t\t\t\t\tconst field = getattr(data, token.field, nesting);\n\n\t\t\t\t\tif( !token.regex && field ){\n\t\t\t\t\t\tsum += 0.1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += scoreValue(field, token);\n\t\t\t\t\t}\n\n\t\t\t\t}else{\n\t\t\t\t\tfields.forEach((field) => {\n\t\t\t\t\t\tsum += scoreValue(getattr(data, field, nesting), token);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(search, options:TOptions) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {string}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string|TPrepareObj, options:TOptions):TPrepareObj {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = Object.assign({},options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !Array.isArray(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !Array.isArray(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !Array.isArray(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query, options),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:TOptions) : TPrepareObj {\n\t\tvar self = this, score, search;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n"],"names":["cmp","a","b","asciifold","String","getattr","obj","name","nesting","names","split","length","shift","escape_regex","str","replace","DIACRITICS","i","n","k","chunk","foreignletters","lookup","hasOwnProperty","substring","charAt","regexp","RegExp","foreignletter","toLowerCase","Sifter","constructor","items","settings","diacritics","tokenize","query","options","trim","letter","tokens","words","field_regex","fields","map","join","forEach","word","field_match","field","regex","match","respect_word_boundaries","push","string","iterator","object","callback","Array","isArray","prototype","key","apply","getScoreFunction","self","token_count","search","prepareSearch","scoreValue","value","token","score","pos","scoreObject","field_count","data","sum","conjunction","getSortFunction","fields_count","multiplier","multipliers","get_field","implicit_score","sort","sort_empty","result","id","unshift","direction","splice","Object","assign","option_fields","option_sort","option_sort_empty","total","fn_sort","fn_score","item","filter","limit","slice"],"mappings":"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"}