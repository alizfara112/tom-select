{"version":3,"file":"tom-select.base.min.js","sources":["../../src/contrib/microevent.js","../../src/contrib/sifter.ts","../../src/contrib/highlight.js","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/vanilla.ts","../../src/tom-select.ts","../../src/contrib/microplugin.js","../../src/getSettings.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events,callback){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events, fct){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events, fct){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events, ...args){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self,args );\n\t\t\t}\n\t\t});\n\t}\n};\n","/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TOptions = {\n \tfields: string|string[],\n \tsort: any[],\n \tscore?: ()=>any,\n \tfilter?: boolean,\n \tlimit?: number,\n \tsort_empty?: any,\n \tnesting?: boolean,\n\trespect_word_boundaries?: boolean,\n\tconjunction?: string,\n }\n\n\ntype TPrepareObj = {\n\toptions: TOptions,\n\tquery: string,\n\ttokens: any,\n\ttotal: number,\n\titems: any[]\n}\n\n\n\n// utilities\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nvar cmp = function(a, b) {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(String(a || ''));\n\tb = asciifold(String(b || ''));\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @param  {Boolean} nesting Handle nesting or not\n * @return {Object}          The resolved property value\n */\nvar getattr = function(obj, name, nesting) {\n    if (!obj || !name) return;\n    if (!nesting) return obj[name];\n    var names = name.split(\".\");\n    while(names.length && (obj = obj[names.shift()]));\n    return obj;\n};\n\nvar escape_regex = function(str) {\n\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n};\n\nvar DIACRITICS = {\n\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t'f': '[fƑƒḞḟ]',\n\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t'x': '[xẌẍẊẋχ]',\n\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n};\n\nvar asciifold = (function() {\n\tvar i, n, k, chunk;\n\tvar foreignletters = '';\n\tvar lookup = {};\n\tfor (k in DIACRITICS) {\n\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\tforeignletters += chunk;\n\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t}\n\t\t}\n\t}\n\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\treturn function(str) {\n\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\treturn lookup[foreignletter];\n\t\t}).toLowerCase();\n\t};\n})();\n\n\nexport default class Sifter{\n\n\tpublic items: []|{};\n\tpublic settings: {diacritics:boolean};\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tconstructor(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\ttokenize(query, options ) {\n\t\tquery = String(query || '').toLowerCase().trim();\n\t\tif (!query || !query.length) return [];\n\n\t\tvar letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/\\s+/);\n\n\t\tconst field_regex = new RegExp( '^('+options.fields.map(escape_regex).join('|')+')\\:(.*)$');\n\n\t\twords.forEach((word) => {\n\t\t\tlet field_match;\n\t\t\tlet field = null;\n\t\t\tlet regex = null;\n\n\t\t\t// look for \"field:query\" tokens\n\t\t\tif( options.fields.length > 1 && (field_match = word.match(field_regex)) ){\n\t\t\t\tfield\t= field_match[1];\n\t\t\t\tword\t= field_match[2];\n\t\t\t}\n\n\t\t\tif( word.length > 0 ){\n\t\t\t\tregex = escape_regex(word);\n\t\t\t\tif (this.settings.diacritics) {\n\t\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (options.respect_word_boundaries) regex = \"\\\\b\"+regex\n\t\t\t\tregex = new RegExp(regex, 'i');\n\t\t\t}\n\n\t\t\ttokens.push({\n\t\t\t\tstring : word,\n\t\t\t\tregex  : regex,\n\t\t\t\tfield  : field,\n\t\t\t});\n\t\t});\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\titerator(object, callback) {\n\t\tvar iterator;\n\t\tif (Array.isArray(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {function}\n\t */\n\tgetScoreFunction(query:string, options?:TOptions ){\n\t\tvar self, fields, tokens, token_count, nesting, search;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(query, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tvar sum = 0;\n\n\t\t\t\t// is the token specific to a field?\n\t\t\t\tif( token.field ){\n\n\t\t\t\t\tconst field = getattr(data, token.field, nesting);\n\n\t\t\t\t\tif( !token.regex && field ){\n\t\t\t\t\t\tsum += 0.1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += scoreValue(field, token);\n\t\t\t\t\t}\n\n\t\t\t\t}else{\n\t\t\t\t\tfields.forEach((field) => {\n\t\t\t\t\t\tsum += scoreValue(getattr(data, field, nesting), token);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(search, options:TOptions) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {string}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string|TPrepareObj, options:TOptions):TPrepareObj {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = Object.assign({},options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !Array.isArray(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !Array.isArray(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !Array.isArray(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query, options),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:TOptions) : TPrepareObj {\n\t\tvar self = this, score, search;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nexport function highlight(element, regex) {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\tvar highlight = function(node) {\n\t\tvar skip = 0;\n\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\tif (node.nodeType === 3) {\n\t\t\tvar pos = node.data.search(regex);\n\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\tspannode.className = 'highlight';\n\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\tskip = 1;\n\n\t\t\t}\n\t\t}\n\t\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t\treturn skip;\n\t};\n\n\thighlight( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport function removeHighlight(el) {\n\tvar elements = document.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el, i){\n\t\tvar parent = el.parentNode;\n\t\tparent.replaceChild(el.firstChild, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport function hash_key(value:string):string|null {\n\tif (typeof value === 'undefined' || value === null) return null;\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport function escape_html(str:string):string {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport function loadDebounce(fn,delay:number){\n\tvar timeout: ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:() => void) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t}\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n}\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport function debounce_events( self:TomSelect, types:string[], fn:() => void ) {\n\tvar type;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport function getSelection(input:HTMLInputElement):{ start: number; length: number } {\n\treturn {\n\t\tstart\t: input.selectionStart,\n\t\tlength\t: input.selectionEnd - input.selectionStart,\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport function preventDefault(evt?:Event, stop:boolean=false):void{\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport function addEvent(target:EventTarget, type:string, callback:EventListener, options?:object):void{\n\ttarget.addEventListener(type,callback,options);\n}\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport function isKeyDown( key_name:keyof (KeyboardEvent|MouseEvent), evt:KeyboardEvent|MouseEvent ){\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport function getId(el:Element,id:string){\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n}\n","\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport function getDom( query:any ):HTMLElement{\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport function escapeQuery(query:string):string{\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport function triggerEvent( dom_el:HTMLElement, event_name:string ):void{\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport function applyCSS( dom_el:HTMLElement, css:{ [key: string]: string|number }):void{\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport function addClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export function removeClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport function classesArray(args:string[]|string[][]):string[]{\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport function castAsArray(arg:any):Array<any>{\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport function parentMatch( target:HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void{\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * < 0 - left (first)\n *\n */\nexport function getTail( list:Array<any>|NodeList, direction:number ):any{\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport function isEmptyObject(obj:object):boolean{\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport function nodeIndex( el:Element, amongst?:string ):number{\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport function setAttr(el:Element,attrs:{ [key: string]: string }){\n\tfor( const attr in attrs ){\n\t\tel.setAttribute(attr, attrs[attr]);\n\t}\n}\n","\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from './contrib/sifter.js';\nimport { TomSettings } from './types/settings';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreBlur\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t: ReturnType<Sifter['search']> = null;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: HTMLElement = null;\n\tpublic activeItems\t\t\t\t: HTMLElement[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tprivate options_i\t\t\t\t: number = 0;\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {'item':{[key:string]:HTMLElement},'option':{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof this.settings.hidePlaceholder !== 'boolean' ){\n\t\t\tthis.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\t\tthis.setup();\n\t}\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n\t/**\n\t * Creates all elements and sets up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\n\t\tvar self = this;\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar input\t\t\t\t\t= self.input;\n\t\tvar control_id: string;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId: string\t\t= self.inputId +'-ts-dropdown';\n\n\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\twrapper.append(control);\n\n\n\t\tdropdown\t\t\t= self.render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t\tdropdown_content\t= getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tdropdown.append(dropdown_content);\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\t\tsetAttr(control_input,{\n\t\t\trole:'combobox',\n\t\t\thaspopup:'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tcontrol_id = getId(control_input,self.inputId + '-tomselected');\n\n\t\tlet query = \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tlet label = document.querySelector(query);\n\t\tif( label ){\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tlet label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\n\t\tself.control\t\t\t= control;\n\t\tself.control_input\t\t= control_input;\n\t\tself.wrapper\t\t\t= wrapper;\n\t\tself.dropdown\t\t\t= dropdown;\n\t\tself.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ){\n\t\t\t\treturn self.onOptionHover( e as MouseEvent, target_match );\n\t\t\t}\n\t\t}, {capture:true});\n\n\t\taddEvent(control,'mousedown', (evt) => {\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\tif (evt.target == control_input) {\n\t\t\t\tself.clearActiveItems();\n\t\t\t\tevt.stopPropagation();\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match ){\n\t\t\t\treturn self.onItemSelect(evt as MouseEvent, target_match);\n\t\t\t}\n\t\t\treturn self.onMouseDown(evt as MouseEvent);\n\t\t});\n\n\t\taddEvent(control,'click', (e) => self.onClick(e as KeyboardEvent) );\n\n\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t(e) => self.onBlur(e as MouseEvent) );\n\t\taddEvent(control_input,'focus',\t\t(e) => { self.ignoreBlur = false; self.onFocus(e as MouseEvent) });\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\t// clicking anywhere in the control should not close the dropdown\n\t\t// clicking on an option should selectit\n\t\tvar doc_mousedown = (e:MouseEvent) => {\n\n\t\t\t// if dropdownParent is set, options may not be within self.wrapper\n\t\t\tvar option = parentMatch(e.target as HTMLElement, '[data-selectable]',self.dropdown);\n\n\t\t\t// outside of this instance\n\t\t\tif( !option && !self.wrapper.contains(e.target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpreventDefault(e,true);\n\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( e, option );\n\t\t\t}\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown',doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tself._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tsetAttr(input,{\thidden:'hidden'});\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\n\t\tself.setValue(settings.items);\n\t\tdelete settings.items;\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.refreshState();\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':(data:TomOption,escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':(data:TomOption,escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick(e:MouseEvent|KeyboardEvent) {\n\t\tvar self = this;\n\n\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t// is ignored unless invoked within a click event)\n\t\t// also necessary to reopen a dropdown that has been closed by\n\t\t// closeAfterSelect\n\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\tself.focus();\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a mouse down event.\n\t *\n\t */\n\tonMouseDown(e:MouseEvent|KeyboardEvent):boolean {\n\t\tvar self = this;\n\n\n\t\tif (self.isFocused) {\n\t\t\tif (self.settings.mode !== 'single') {\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t\tself.open();\n\t\t\treturn false;\n\t\t} else {\n\t\t\t// give control focus\n\t\t\tsetTimeout(() => self.focus(), 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// doc_src select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.isOpen && self.activeOption) {\n\t\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.tab_key = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.setActiveItem();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\n\t\tif (!self.ignoreBlur && document.activeElement === self.dropdown_content) {\n\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\tself.ignoreBlur = true;\n\t\t\tself.onFocus(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t * @deprecated v1.3\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){}\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.settings.hideSelected && evt.type && /mouse/.test(evt.type)) {\n\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:HTMLElement ):boolean{\n\t\tvar self = this;\n\n\t\tif (self.isLocked) return;\n\t\tif (self.settings.mode === 'multi') {\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t}\n\t}\n\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\n\t\tvar self = this;\n\t\tvar fn = self.settings.load;\n\t\tif (!fn) return;\n\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tfn.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback(options:TomOption[], optgroups:TomOption[]){\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\t/**\n\t * @deprecated 1.1\n\t *\n\t */\n\tonSearchChange(value:string):void {\n\t\tthis.load(value);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:HTMLElement, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'mousedown' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as HTMLElement;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'mousedown' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:HTMLElement ){\n\n\t\tvar last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tif( this.activeItems.indexOf(item) == -1 ){\n\t\t\tthis.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:HTMLElement ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:HTMLElement ){\n\t\tvar height_menu, height_item, y;\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\n\t\theight_menu\t\t= this.dropdown_content.clientHeight;\n\t\tlet scrollTop\t= this.dropdown_content.scrollTop || 0;\n\n\t\theight_item\t\t= this.activeOption.offsetHeight;\n\t\ty\t\t\t\t= this.activeOption.getBoundingClientRect().top - this.dropdown_content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.dropdown_content.scrollTop = y - height_menu + height_item;\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.dropdown_content.scrollTop = y;\n\t\t}\n\t}\n\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tthis.activeOption.removeAttribute('aria-selected');\n\t\t}\n\t\tthis.activeOption = null;\n\t\tthis.control_input.removeAttribute('aria-activedescendant');\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( self.settings.controlInput ) return;\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\taddClasses(self.wrapper,'input-hidden');\n\t\t}else{\n\t\t\tself.isInputHidden = false;\n\t\t\tremoveClasses(self.wrapper,'input-hidden');\n\t\t}\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur(null);\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/brianreavis/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar sort;\n\t\tvar settings = this.settings;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar settings = self.settings;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif (settings.score) {\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif (settings.hideSelected) {\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, groups_order, optgroup, optgroups, html, has_create_option;\n\t\tvar active, create;\n\t\tvar groups: {[key:string]:DocumentFragment};\n\n\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_before_hash\t\t= self.activeOption && hash_key(self.activeOption.dataset.value);\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tgroups = {};\n\t\tgroups_order = [];\n\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element, don't re-render if we\n\t\t\tlet option\t\t\t= self.options[results.items[i].id];\n\t\t\tlet opt_value\t\t= hash_key(option[self.settings.valueField]);\n\t\t\tlet option_el\t\t= self.getOption(opt_value);\n\t\t\tif( !option_el ){\n\t\t\t\toption_el = self.render('option', option);\n\t\t\t}\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// a child could only have one parent, so if you have more parents clone the child\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t\toption_el.removeAttribute('aria-selected');\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tgroup_options.append(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\tgroup_options.append(groups[optgroup]);\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\thtml.append(group_html);\n\n\t\t\t} else {\n\t\t\t\thtml.append(groups[optgroup]);\n\t\t\t}\n\t\t}\n\n\t\tself.dropdown_content.innerHTML = '';\n\t\tself.dropdown_content.append(html);\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( self.dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( self.dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:string) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tself.dropdown_content.insertBefore(content, self.dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tactive = active_before_hash && self.getOption(active_before_hash);\n\n\t\t\t\tif( !active || !self.dropdown_content.contains(active)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else{\n\t\t\t\tactive = create;\n\t\t\t}\n\n\t\t\tself.setActiveOption(active);\n\t\t\tif( triggerDropdown && !self.isOpen ){ self.open(); }\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we wan't the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\n\t\tdata.$order\t\t\t= data.$order || ++this.order;\n\t\tdata.$id\t\t\t= this.inputId + '-opt-' + (this.options_i++);\n\t\tthis.options[key]\t= data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tvar self = this;\n\t\tvar item, item_new;\n\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\n\t\tvalue     = hash_key(value);\n\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif (value === null) return;\n\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\torder_old = self.options[value].$order;\n\n\t\t// update references\n\t\tif (value_new !== value) {\n\t\t\tdelete self.options[value];\n\t\t\tindex_item = self.items.indexOf(value);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\t\t}\n\t\tdata.$order = data.$order || order_old;\n\t\tself.options[value_new] = data;\n\n\t\t// invalidate render cache\n\t\tcache_items = self.renderCache['item'];\n\t\tcache_options = self.renderCache['option'];\n\n\t\tif (cache_items) {\n\t\t\tdelete cache_items[value];\n\t\t\tdelete cache_items[value_new];\n\t\t}\n\t\tif (cache_options) {\n\t\t\tdelete cache_options[value];\n\t\t\tdelete cache_options[value_new];\n\t\t}\n\n\t\t// update the item if it's selected\n\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\titem\t\t= self.getItem(value);\n\t\t\titem_new\t= self.render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\titem.parentNode.insertBefore(item_new, item);\n\t\t\titem.remove();\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\n\t\t// update dropdown contents\n\t\tif (self.isOpen) {\n\t\t\tself.refreshOptions(false);\n\t\t}\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tvar self = this;\n\t\tvalue = hash_key(value);\n\n\t\tvar cache_items = self.renderCache['item'];\n\t\tvar cache_options = self.renderCache['option'];\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t * @returns {object}\n\t */\n\tgetOption(value:string):HTMLElement {\n\n\t\t// cached ?\n\t\tif( this.renderCache['option'].hasOwnProperty(value) ){\n\t\t\treturn this.renderCache['option'][value];\n\t\t}\n\n\t\t// from existing dropdown menu dom\n\t\treturn this.getElementWithValue(value, this.selectable());\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|void{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the first element with a \"data-value\" attribute\n\t * that matches the given value.\n\t *\n\t */\n\tgetElementWithValue(value:string, els:HTMLCollection|NodeList|HTMLElement[]):HTMLElement {\n\t\tvalue = hash_key(value);\n\n\t\tif (value !== null) {\n\t\t\tfor( const node of els ){\n\t\t\t\tlet el = node as HTMLElement;\n\t\t\t\tif (el.getAttribute('data-value') === value) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(value:string):HTMLElement {\n\t\treturn this.getElementWithValue(value, this.control.children);\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\t\tself.buffer = document.createDocumentFragment();\n\n\t\tfor( const child of self.control.children ){\n\t\t\tself.buffer.appendChild(child);\n\t\t}\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\n\t\tvar control = self.control;\n\t\tcontrol.insertBefore(self.buffer, control.firstChild);\n\n\t\tself.buffer = null;\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item;\n\t\t\tvar self = this;\n\t\t\tvar inputMode = self.settings.mode;\n\t\t\tvar wasFull;\n\t\t\tvalue = hash_key(value);\n\n\t\t\tif( self.items.indexOf(value) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self.render('item', self.options[value]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tlet option = self.getOption(value);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', value, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( value:string, silent?:boolean ){\n\t\tvar i, idx, self = this;\n\n\t\tvar item\t= self.getItem(value);\n\n\t\tif( !item ) return;\n\n\t\tvalue\t\t= hash_key(item.dataset.value);\n\t\ti\t\t\t= self.items.indexOf(value);\n\n\t\tif (i !== -1) {\n\t\t\titem.remove();\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\t\tself.activeItems.splice(idx, 1);\n\t\t\t\tremoveClasses(item,'active');\n\t\t\t}\n\n\t\t\tself.items.splice(i, 1);\n\t\t\tself.lastQuery = null;\n\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\tself.removeOption(value, silent);\n\t\t\t}\n\n\t\t\tif (i < self.caretPos) {\n\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t}\n\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.positionDropdown();\n\t\t\tself.trigger('item_remove', value, item);\n\t\t}\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input?:string, triggerDropdown:boolean=true, callback?:TomCreateCallback ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (typeof callback !== 'function') callback = () => {};\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data:TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tvar i, value, option, self = this;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\t// remove selected attribute from options whose values are not in self.items\n\t\t\tself.input.querySelectorAll('option[selected]').forEach((option:HTMLOptionElement) => {\n\t\t\t\tif( self.items.indexOf(option.value) == -1 ){\n\t\t\t\t\toption.selected = false;\n\t\t\t\t\toption.removeAttribute('selected');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\tfor( i = self.items.length - 1; i >= 0; i-- ){\n\t\t\t\tvalue = self.items[i];\n\n\t\t\t\tvar option = self.options[value].$option;\n\t\t\t\tif( !option ){\n\t\t\t\t\tconst label = self.options[value][self.settings.labelField] || '';\n\t\t\t\t\toption = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t\t\t\t\tself.options[value].$option = option;\n\t\t\t\t}\n\n\t\t\t\toption.selected = true;\n\t\t\t\tsetAttr(option,{selected:'true'});\n\t\t\t\tself.input.prepend(option);\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\t// before blur() to prevent form onchange event\n\t\tif( setTextboxValue ) self.setTextboxValue();\n\n\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\tself.hideInput();\n\n\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t// See #selectize.js#1164\n\t\t\tif( !self.tab_key ){\n\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tself.clearActiveOption();\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\titem.remove();\n\t\t}\n\n\t\tself.items = [];\n\t\tself.lastQuery = null;\n\t\tself.setCaret(0);\n\t\tself.setActiveItem();\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.showInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.buffer || self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, values, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tvalues = [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\tvalues.push( item.dataset.value );\n\t\t\t}\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\t\twhile (values.length) {\n\t\t\tself.removeItem(values.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if( self.isFocused && !self.activeItems.length ){\n\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t// move caret before or after selected items\n\t\t}else{\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():HTMLElement[]{\n\t\treturn Array.from( this.control.getElementsByClassName(this.settings.itemClass) ) as HTMLElement[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tself.input.removeAttribute('hidden');\n\t\tself.input.required = this.isRequired;\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:string, data?:any ):null|HTMLElement{\n\t\tvar value, id, html;\n\t\tvar self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\n\t\t\t// pull markup from cache if it exists\n\t\t\tif( self.renderCache[templateName].hasOwnProperty(value) ){\n\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t}\n\n\t\t}\n\n\t\tvar template = self.settings.render[templateName];\n\t\tif( typeof template !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = template.call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ){\n\t\tvar self = this;\n\n\t\tif (templateName === void 0) {\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && input.length && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:()=>any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nexport default function MicroPlugin(Interface){\n\n\tInterface.plugins = {};\n\n\n\treturn class mixin extends Interface{\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name, fn){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\trequire(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomSettings } from './types/settings';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings\t\t\t\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element\t\t= {\n\t\t\t\t\t\t\t\t\t\tplaceholder\t: placeholder,\n\t\t\t\t\t\t\t\t\t\toptions\t\t: [],\n\t\t\t\t\t\t\t\t\t\toptgroups\t: [],\n\t\t\t\t\t\t\t\t\t\titems\t\t: [],\n\t\t\t\t\t\t\t\t\t\tmaxItems\t: null,\n\t\t\t\t\t\t\t\t\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el) => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif (!value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar option_data             = readData(option);\n\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\toptionsMap[value] = option_data;\n\t\t\toptions.push(option_data);\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tvar values, option;\n\n\t\tvar data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tvalues = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\toption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","cmp","a","b","asciifold","String","getattr","obj","name","nesting","names","shift","escape_regex","str","replace","DIACRITICS","i","k","chunk","foreignletters","lookup","hasOwnProperty","substring","charAt","regexp","RegExp","foreignletter","toLowerCase","Sifter","items","settings","diacritics","tokenize","query","options","trim","letter","tokens","words","field_regex","fields","map","join","word","field_match","field","regex","match","respect_word_boundaries","string","iterator","object","Array","isArray","prototype","key","getScoreFunction","token_count","search","prepareSearch","field_count","scoreValue","value","token","score","pos","scoreObject","data","sum","conjunction","getSortFunction","fields_count","multiplier","multipliers","get_field","implicit_score","sort","sort_empty","result","id","unshift","direction","option_fields","Object","assign","option_sort","option_sort_empty","total","fn_sort","fn_score","item","filter","limit","slice","highlight","element","node","skip","nodeType","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","escape_html","debounce_events","types","fn","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","target","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","el","existing_id","getAttribute","setAttribute","getDom","jquery","HTMLElement","div","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","selector","wrapper","contains","matches","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","attr","instance_i","TomSelect","Interface","initializePlugins","queue","requested","loaded","require","loadPlugin","plugin","Error","MicroPlugin","input_arg","dir","control_input","dropdown","control","dropdown_content","order","input","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","tab_key","isOpen","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreBlur","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","activeOption","activeItems","options_i","userOptions","renderCache","tomselect","window","getComputedStyle","getPropertyValue","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","optionsMap","group_count","readData","dataset","json","JSON","parse","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","values","data_raw","opt","init_textbox","getSettings","required","setupOptions","setupCallbacks","setupTemplates","setup","inputMode","classes_plugins","control_id","passive_event","passive","listboxId","append","role","haspopup","escapeQuery","label","for","width","multiple","delimiterEscaped","delay","timeout","load","Math","max","clearTimeout","setTimeout","call","e","target_match","onOptionHover","capture","clearActiveItems","inputState","onItemSelect","onMouseDown","onClick","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","blur","onOptionSelect","win_scroll","removeEventListener","revertSettings","hidden","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","disable","onChange","registerOption","registerOptionGroup","templates","escape","callbacks","focus","setActiveItem","open","isFull","pastedText","inputValue","splitInput","piece","createItem","character","fromCharCode","keyCode","which","constants","selectAll","close","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","activeElement","deactivate","setCaret","parentElement","lastQuery","addItem","getOption","loadCallback","bind","clearActiveOption","onSearchChange","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","height_menu","height_item","y","clientHeight","scrollTop","offsetHeight","getBoundingClientRect","top","removeAttribute","controlChildren","getSearchOptions","calculateScore","triggerDropdown","j","groups_order","html","has_create_option","active","groups","elements","results","active_before_hash","show_dropdown","min","opt_value","option_el","toggle","includes","createDocumentFragment","$order","group_options","group_html","querySelectorAll","parent","normalize","tok","add_template","template","content","insertBefore","canCreate","active_index","selectable","dat","$id","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","removeOption","removeItem","clearOptions","getElementWithValue","all","els","buffer","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","keys","checkValidity","invalid","opts","prepend","visibility","display","context","rect","scrollY","left","scrollX","selection","start","selectionStart","selectionEnd","onDelete","pop","adjacent","nextElementSibling","new_pos","from","getElementsByClassName","enable","destroy","templateName","hook","when","method","new_fn","orig_method","result_new"],"mappings":";;;;;AAeA,SAASA,EAAUC,EAAOC,GACzBD,EAAOE,MAAM,OAAOC,SAASC,IAC5BH,EAASG,MAII,MAAMC,EACpBC,mBACMC,QAAU,GAGhBC,GAAGR,EAAQS,GACVV,EAAUC,GAAQI,SACZG,QAAQH,GAASM,KAAKH,QAAQH,IAAU,QACxCG,QAAQH,GAAOO,KAAKF,MAI3BG,IAAIZ,EAAQS,OACPI,EAAIC,UAAUC;AACR,IAANF,EAKJd,EAAUC,GAAQI,OAEP,IAANS,EAAS,cAAcH,KAAKH,QAAQH;AAEpCA,KAASM,KAAKH,UAAY,QACzBA,QAAQH,GAAOY,OAAON,KAAKH,QAAQH,GAAOa,QAAQR,GAAM,WATxDF,QAAU,GAajBW,QAAQlB,KAAWmB,OACdC,EAAOV;AAEXX,EAAUC,GAAQI,OACdA,KAASgB,EAAKb,UAAY,MACxB,IAAIE,KAAOW,EAAKb,QAAQH,GAC5BK,EAAIY,MAAMD,EAAKD,OCbnB,IAAIG,EAAM,SAASC,EAAGC,SACJ,iBAAND,GAA+B,iBAANC,EAC5BD,EAAIC,EAAI,EAAKD,EAAIC,GAAK,EAAI,GAElCD,EAAIE,EAAUC,OAAOH,GAAK,OAC1BC,EAAIC,EAAUC,OAAOF,GAAK,MACR,EACdA,EAAID,GAAW,EACZ,GAUJI,EAAU,SAASC,EAAKC,EAAMC,MACzBF,GAAQC,OACRC,EAAS,OAAOF,EAAIC;QACrBE,EAAQF,EAAK3B,MAAM,KACjB6B,EAAMhB,SAAWa,EAAMA,EAAIG,EAAMC,mBAChCJ,IAGPK,EAAe,SAASC,UACnBA,EAAM,IAAIC,QAAQ,yBAA0B,SAGjDC,EAAa,GACX,uCACA,gBACA,gCACA,wCACA,sEACA,YACA,sBACA,wBACA,mDACA,gBACA,uBACA,uCACA,2CACA,4CACA,iBACA,iBACA,0BACA,4BACA,0BACA,yCACA,kBACA,oBACA,aACA,0BACA,qBAGFX,EAAa,eACZY,EAAGxB,EAAGyB,EAAGC,EACTC,EAAiB,GACjBC,EAAS;IACRH,KAAKF,KACLA,EAAWM,eAAeJ,OAE7BE,GADAD,EAAQH,EAAWE,GAAGK,UAAU,EAAGP,EAAWE,GAAGvB,OAAS,GAErDsB,EAAI,EAAGxB,EAAI0B,EAAMxB,OAAQsB,EAAIxB,EAAGwB,IACpCI,EAAOF,EAAMK,OAAOP,IAAMC;IAIzBO,EAAS,IAAIC,OAAO,IAAON,EAAiB,IAAK;OAC9C,SAASN,UACRA,EAAIC,QAAQU,GAAQ,SAASE,UAC5BN,EAAOM,MACZC,eAjBY;AAsBF,MAAMC,EAcpB3C,YAAY4C,EAAOC,QAZZD,kBACAC,qBAYDD,MAAQA,OACRC,SAAWA,GAAY,CAACC,YAAY,GAU1CC,SAASC,EAAOC,QACfD,EAAQ5B,OAAO4B,GAAS,IAAIN,cAAcQ,UAC3BF,EAAMvC,OAAQ,MAAO;IAEhC0C,EACAC,EAAS,GACTC,EAAQL,EAAMpD,MAAM;MAElB0D,EAAc,IAAId,OAAQ,KAAKS,EAAQM,OAAOC,IAAI7B,GAAc8B,KAAK,KAAK;OAEhFJ,EAAMxD,SAAS6D,QACVC,EACAC,EAAQ,KACRC,EAAQ;GAGRZ,EAAQM,OAAO9C,OAAS,IAAMkD,EAAcD,EAAKI,MAAMR,MAC1DM,EAAQD,EAAY,GACpBD,EAAOC,EAAY,IAGhBD,EAAKjD,OAAS,EAAG,IACpBoD,EAAQlC,EAAa+B,GACjBtD,KAAKyC,SAASC,eACZK,KAAUrB,EACVA,EAAWM,eAAee,KAC7BU,EAAQA,EAAMhC,QAAQ,IAAIW,OAAOW,EAAQ,KAAMrB,EAAWqB;AAIzDF,EAAQc,0BAAyBF,EAAQ,MAAMA,GACnDA,EAAQ,IAAIrB,OAAOqB,EAAO,KAG3BT,EAAO/C,KAAK,CACX2D,OAASN,EACTG,MAASA,EACTD,MAASA,OAIJR,EAcRa,SAASC,EAAQvE,IAEZwE,MAAMC,QAAQF,GACNC,MAAME,UAAUxE,SAAW,SAASF,OACzC,IAAIoC,EAAI,EAAGxB,EAAIH,KAAKK,OAAQsB,EAAIxB,EAAGwB,IACvCpC,EAASS,KAAK2B,GAAIA,EAAG3B,OAIZ,SAAST,OACd,IAAI2E,KAAOlE,KACXA,KAAKgC,eAAekC,IACvB3E,EAASS,KAAKkE,GAAMA,EAAKlE,QAMpBW,MAAMmD,EAAQ,CAACvE,IAWzB4E,iBAAiBvB,EAAcC,OACpBM,EAAQH,EAAQoB,EAAahD,EAASiD;AAGhDA,EADcrE,KACKsE,cAAc1B,EAAOC,GACxCG,EAAcqB,EAAOrB,OACrBG,EAAckB,EAAOxB,QAAQM,OAC7BiB,EAAcpB,EAAO3C,OACrBe,EAAciD,EAAOxB,QAAQzB;IA+BxBmD,EArBDC,EAAa,SAASC,EAAOC,OAC5BC,EAAOC;OAENH,GAGQ,KADbG,GADAH,EAAQzD,OAAOyD,GAAS,KACZJ,OAAOK,EAAMjB,QACF,GACvBkB,EAAQD,EAAMd,OAAOvD,OAASoE,EAAMpE,OACxB,IAARuE,IAAWD,GAAS,IACjBA,GANY,GAiBhBE,GACCN,EAAcpB,EAAO9C,QAKL,IAAhBkE,EACI,SAASG,EAAOI,UACfN,EAAWvD,EAAQ6D,EAAM3B,EAAO,GAAI/B,GAAUsD,IAGhD,SAASA,EAAOI,OAClBC,EAAM;GAGNL,EAAMlB,MAAO,OAEVA,EAAQvC,EAAQ6D,EAAMJ,EAAMlB,MAAOpC;CAEpCsD,EAAMjB,OAASD,EACnBuB,GAAO,GAEPA,GAAOP,EAAWhB,EAAOkB,QAI1BvB,EAAO1D,SAAS+D,IACfuB,GAAOP,EAAWvD,EAAQ6D,EAAMtB,EAAOpC,GAAUsD;OAI5CK,EAAMR,GA3BN,kBAAoB;OA+BxBH,EAGe,IAAhBA,EACI,SAASU,UACRD,EAAY7B,EAAO,GAAI8B,IAIG,QAA/BT,EAAOxB,QAAQmC,YACX,SAASF,WACXH,EACKhD,EAAI,EAAGoD,EAAM,EAAGpD,EAAIyC,EAAazC,IAAK,KAC9CgD,EAAQE,EAAY7B,EAAOrB,GAAImD,KAClB,EAAG,OAAO;AACvBC,GAAOJ,SAEDI,EAAMX,GAGP,SAASU,OACV,IAAInD,EAAI,EAAGoD,EAAM,EAAGpD,EAAIyC,EAAazC,IACzCoD,GAAOF,EAAY7B,EAAOrB,GAAImD;OAExBC,EAAMX,GAvBP,kBAAoB,GAoC7Ba,gBAAgBZ,EAAQxB,OACnBlB,EAAGxB,EAAGO,EAAM8C,EAAOL,EAAQ+B,EAAcC,EAAYC,EAAaC,EAAWC,EAAgBC;GAIjGA,IADAlB,GADA3D,EAASV,MACKsE,cAAcD,EAAQxB,IAClBD,OAASC,EAAQ2C,YAAe3C,EAAQ0C,KAU1DF,EAAY,SAASlE,EAAMsE,SACb,WAATtE,EAA0BsE,EAAOd,MAC9B1D,EAAQP,EAAK8B,MAAMiD,EAAOC,IAAKvE,EAAM0B,EAAQzB,UAIrD+B,EAAS,GACLoC,MACE5D,EAAI,EAAGxB,EAAIoF,EAAKlF,OAAQsB,EAAIxB,EAAGwB,KAC/B0C,EAAOzB,OAA2B,WAAlB2C,EAAK5D,GAAG6B,QAC3BL,EAAOlD,KAAKsF,EAAK5D;GAOhB0C,EAAOzB,MAAO,KACjB0C,GAAiB,EACZ3D,EAAI,EAAGxB,EAAIgD,EAAO9C,OAAQsB,EAAIxB,EAAGwB,OACb,WAApBwB,EAAOxB,GAAG6B,MAAoB,CACjC8B,GAAiB;MAIfA,GACHnC,EAAOwC,QAAQ,CAACnC,MAAO,SAAUoC,UAAW,kBAGxCjE,EAAI,EAAGxB,EAAIgD,EAAO9C,OAAQsB,EAAIxB,EAAGwB,OACb,WAApBwB,EAAOxB,GAAG6B,MAAoB,CACjCL,EAAO7C,OAAOqB,EAAG;UAMpByD,EAAc,GACTzD,EAAI,EAAGxB,EAAIgD,EAAO9C,OAAQsB,EAAIxB,EAAGwB,IACrCyD,EAAYnF,KAA6B,SAAxBkD,EAAOxB,GAAGiE,WAAwB,EAAI;OAIxDV,EAAe/B,EAAO9C,QAGM,IAAjB6E,GACV1B,EAAQL,EAAO,GAAGK,MAClB2B,EAAaC,EAAY,GAClB,SAASvE,EAAGC,UACXqE,EAAavE,EACnByE,EAAU7B,EAAO3C,GACjBwE,EAAU7B,EAAO1C,MAIZ,SAASD,EAAGC,OACda,EAAG8D,EAAQjC;IACV7B,EAAI,EAAGA,EAAIuD,EAAcvD,OAC7B6B,EAAQL,EAAOxB,GAAG6B,MAClBiC,EAASL,EAAYzD,GAAKf,EACzByE,EAAU7B,EAAO3C,GACjBwE,EAAU7B,EAAO1C,IAEN,OAAO2E;OAEb,GArBD,KAgCTnB,cAAc1B,EAA0BC,MAClB,iBAAVD,EAAoB,OAAOA;IAIlCiD,GAFJhD,EAAUiD,OAAOC,OAAO,GAAGlD,IAEKM,OAC5B6C,EAAoBnD,EAAQ0C,KAC5BU,EAAoBpD,EAAQ2C;OAE5BK,IAAkB9B,MAAMC,QAAQ6B,KAAgBhD,EAAQM,OAAS,CAAC0C,IAClEG,IAAgBjC,MAAMC,QAAQgC,KAAcnD,EAAQ0C,KAAO,CAACS,IAC5DC,IAAsBlC,MAAMC,QAAQiC,KAAoBpD,EAAQ2C,WAAa,CAACS,IAE3E,CACNpD,QAAUA,EACVD,MAAU5B,OAAO4B,GAAS,IAAIN,cAC9BU,OAAUhD,KAAK2C,SAASC,EAAOC,GAC/BqD,MAAU,EACV1D,MAAU,IAQZ6B,OAAOzB,EAAcC,OACH8B,EAAON,EACpB8B,EACAC,EAFA1F,EAAOV;OAIXqE,EAAUrE,KAAKsE,cAAc1B,EAAOC,GACpCA,EAAUwB,EAAOxB,QACjBD,EAAUyB,EAAOzB,MAGjBwD,EAAWvD,EAAQ8B,OAASjE,EAAKyD,iBAAiBE,GAG9CzB,EAAMvC,OACTK,EAAKmD,SAASnD,EAAK8B,OAAO,SAAS6D,EAAMX,GACxCf,EAAQyB,EAASC,KACM,IAAnBxD,EAAQyD,QAAoB3B,EAAQ,IACvCN,EAAO7B,MAAMvC,KAAK,OAAU0E,KAAae,OAI3ChF,EAAKmD,SAASnD,EAAK8B,OAAO,SAAS6D,EAAMX,GACxCrB,EAAO7B,MAAMvC,KAAK,OAAU,KAASyF,QAIvCS,EAAUzF,EAAKuE,gBAAgBZ,EAAQxB,KAC1BwB,EAAO7B,MAAM+C,KAAKY,GAG/B9B,EAAO6B,MAAQ7B,EAAO7B,MAAMnC,OACC,iBAAlBwC,EAAQ0D,QAClBlC,EAAO7B,MAAQ6B,EAAO7B,MAAMgE,MAAM,EAAG3D,EAAQ0D,QAGvClC,GCveF,SAASoC,EAAUC,EAASjD,MAEpB,OAAVA,MAGiB,iBAAVA,EAAoB,KAEzBA,EAAMpD,OAAS;AACpBoD,EAAQ,IAAIrB,OAAOqB,EAAO,MAIX,SAAZgD,EAAqBE,OACpBC,EAAO;GAGW,IAAlBD,EAAKE,SAAgB,KACpBjC,EAAM+B,EAAK7B,KAAKT,OAAOZ;GACvBmB,GAAO,GAAK+B,EAAK7B,KAAKzE,OAAS,EAAG,KACjCqD,EAAQiD,EAAK7B,KAAKpB,MAAMD,GACxBqD,EAAWC,SAASC,cAAc;AACtCF,EAASG,UAAY;IACjBC,EAAYP,EAAKQ,UAAUvC;AAC/BsC,EAAUC,UAAUzD,EAAM,GAAGrD;IACzB+G,EAAcF,EAAUG,WAAU;AACtCP,EAASQ,YAAYF,GACrBF,EAAUK,WAAWC,aAAaV,EAAUI,GAC5CN,EAAO,QAMJ,GAAsB,IAAlBD,EAAKE,UAAkBF,EAAKc,aAAe,kBAAkBC,KAAKf,EAAKgB,WAAiC,cAAnBhB,EAAKM,WAA8C,SAAjBN,EAAKgB,aAC/H,IAAIhG,EAAI,EAAGA,EAAIgF,EAAKc,WAAWpH,SAAUsB,EAC7CA,GAAK8E,EAAUE,EAAKc,WAAW9F;OAG1BiF,EAGRH,CAAWC,ICjDL,MAYMkB,EADqC,oBAAdC,WAAoC,MAAMH,KAAKG,UAAUC,WACvD,UAAY;MCXnC,CACdjF,QAAS,GACTkF,UAAW,GAEXC,QAAS,GACTC,UAAW,IACXC,QAAS,KACTC,SAAS,EACTzF,YAAY,EACZ0F,OAAQ,KACRC,cAAc,EACdC,aAAc,KACd7B,WAAW,EACX8B,aAAa,EACbC,WAAY,KACZC,WAAY,GACZC,SAAU,KACVC,aAAc,KACdC,YAAY,EACZC,eAAe,EACfC,aAAa,EACbC,QAAS,KACTC,kBAAkB,EAClBC,kBAAkB,EAElBC,aAAc,IACdC,aAAc,UAEdC,SAAU,KACVC,cAAe,WACfC,WAAY,QACZC,WAAY,OACZC,cAAe,WACfC,mBAAoB,QACpBC,mBAAoB,QACpBC,mBAAmB,EAEnBC,UAAW,SACXC,YAAa,CAAC,QACdC,kBAAmB,MAEnBC,KAAM,KACNC,aAAc,aACdC,WAAY,WACZC,cAAe,cACfC,qBAAsB,sBACtBC,UAAW,OACXC,YAAa,SAEbC,eAAgB,KAChBC,aAAc,KAEdC,uBAAuB,EAEvBC,YAAa,KACbC,gBAAiB,KAEjBC,WAAY,SAAS/H,UACbA,EAAMvC,OAAS,GAuBvBuK,OAAQ;ACjEF,SAASC,EAASpG,UACpB,MAAOA,EAAgD,KACtC,kBAAVA,EAA4BA,EAAQ,IAAM,IAC9CA,EAAQ,GAOT,SAASqG,EAAYtJ,UACnBA,EAAM,IACZC,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UAgCV,SAASsJ,EAAiBrK,EAAgBsK,EAAgBC,OAC5DC,EACA1K,EAAUE,EAAKF,QACf2K,EAAoC;IAiBnCD,KAdLxK,EAAKF,QAAU,eACV0K,EAAO9K,UAAU;IACQ,IAAzB4K,EAAMzK,QAAQ2K,UAGV1K,EAAQG,MAAMD,EAAMN;AAF3B+K,EAAWD,GAAQ9K,WAOrB6K,EAAGtK,MAAMD,EAAM,IACfA,EAAKF,QAAUA,EAGF2K,EACZ3K,EAAQG,MAAMD,EAAMyK,EAAWD,IAwB1B,SAASE,EAAeC,EAAYC,GAAa,GACnDD,IACHA,EAAID,iBACAE,GACHD,EAAIE,mBAUA,SAASC,EAASC,EAAoBP,EAAa3L,EAAwBsD,GACjF4I,EAAOC,iBAAiBR,EAAK3L,EAASsD,GAUhC,SAAS8I,EAAWC,EAA2CP,WAEhEA,MAIAA,EAAIO,IAMK,KAFDP,EAAIQ,OAAO,EAAE,IAAMR,EAAIS,QAAQ,EAAE,IAAMT,EAAIU,SAAS,EAAE,IAAMV,EAAIW,QAAQ,EAAE,IAejF,SAASC,EAAMC,EAAWxG,SAC1ByG,EAAcD,EAAGE,aAAa;OAChCD,IAIJD,EAAGG,aAAa,KAAK3G,GACdA,GC/JD,SAAS4G,EAAQ1J,MAEnBA,EAAM2J,cACF3J,EAAM;GAGVA,aAAiB4J,mBACb5J;GAGJA,EAAMrC,QAAQ,MAAQ,EAAG,KACxBkM,EAAM1F,SAASC,cAAc;OACjCyF,EAAIC,UAAY9J,EAAME,OACf2J,EAAIE,kBAGL5F,SAAS6F,cAAchK,GAWxB,SAASiK,EAAcC,EAAoBC,OAC7CrN,EAAQqH,SAASiG,YAAY;AACjCtN,EAAMuN,UAAUF,GAAY,GAAM,GAClCD,EAAOI,cAAcxN,GAOf,SAASyN,EAAUL,EAAoBM,GAC7CtH,OAAOC,OAAO+G,EAAOO,MAAOD,GAQtB,SAASE,EAAYC,KAAoCC,OAE3DC,EAAgBC,EAAaF,IACjCD,EAAWI,EAAYJ,IAEjBnK,KAAK8I,IACVuB,EAAarK,KAAKwK,IACjB1B,EAAG2B,UAAUC,IAAKF,SASb,SAASG,EAAeR,KAAoCC,OAE9DC,EAAgBC,EAAaF,IAClCD,EAAWI,EAAYJ,IAEjBnK,KAAK8I,IACVuB,EAAarK,KAAIwK,IACf1B,EAAG2B,UAAUG,OAAQJ,SAUlB,SAASF,EAAajN,OACxB+M,EAAmB;IAClB,IAAIS,KAAYxN,EACI,iBAAbwN,IACVA,EAAWA,EAASnL,OAAOtD,MAAM,sBAE9BuE,MAAMC,QAAQiK,KACjBT,EAAUA,EAAQU,OAAOD;OAIpBT,EAAQlH,OAAO6H,SAQhB,SAASR,EAAYS,UACtBrK,MAAMC,QAAQoK,KACjBA,EAAM,CAACA,IAEFA,EASD,SAASC,EAAa5C,EAAoB6C,EAAiBC,OAE7DA,GAAYA,EAAQC,SAAS/C,QAI1BA,GAAUA,EAAOgD,SAAS,IAE5BhD,EAAOgD,QAAQH,UACX7C;AAGRA,EAASA,EAAOlE,YAYX,SAASmH,EAASC,EAA0B/I,UAE9CA,EAAY,EACR+I,EAAKA,EAAKtO,OAAO,GAGlBsO,EAAK,GAgBN,SAASC,EAAW1C,EAAY2C,OACjC3C,EAAI,OAAQ;AAEjB2C,EAAUA,GAAW3C,EAAG4C;QAEpBnN,EAAI,EACDuK,EAAKA,EAAG6C,wBAEV7C,EAAGuC,QAAQI,IACdlN;OAGKA,EAQD,SAASqN,EAAQ9C,EAAW+C,OAC7B,MAAMC,KAAQD,EAClB/C,EAAGG,aAAa6C,EAAMD,EAAMC,ICvJ9B,IAAIC,EAAa;AAEF,MAAMC,UCrBN,SAAqBC,UAEnCA,EAAUrH,QAAU,GAGb,cAAoBqH,gBAQZlO,EAAM8J,GACnBoE,EAAUrH,QAAQ7G,GAAQ,MAChBA,KACA8J,GAmBXqE,kBAAkBtH,OACbrG,EAAGxB,EAAG+D,EACNxD,EAAQV,KACRuP,EAAQ;GAEZ7O,EAAKsH,QAAU,CACd3G,MAAY,GACZoB,SAAY,GACZ+M,UAAY,GACZC,OAAY,IAGT1L,MAAMC,QAAQgE,OACZrG,EAAI,EAAGxB,EAAI6H,EAAQ3H,OAAQsB,EAAIxB,EAAGwB,IACZ,iBAAfqG,EAAQrG,GAClB4N,EAAMtP,KAAK+H,EAAQrG,KAEnBjB,EAAKsH,QAAQvF,SAASuF,EAAQrG,GAAGR,MAAQ6G,EAAQrG,GAAGkB,QACpD0M,EAAMtP,KAAK+H,EAAQrG,GAAGR;KAGlB,GAAI6G,MACL9D,KAAO8D,EACPA,EAAQhG,eAAekC,KAC1BxD,EAAKsH,QAAQvF,SAASyB,GAAO8D,EAAQ9D,GACrCqL,EAAMtP,KAAKiE;KAKPqL,EAAMlP,QACZK,EAAKgP,QAAQH,EAAMjO,SAIrBqO,WAAWxO,OACNT,EAAUV,KACVgI,EAAUtH,EAAKsH,QACf4H,EAAUP,EAAUrH,QAAQ7G;IAE3BkO,EAAUrH,QAAQhG,eAAeb,SAC/B,IAAI0O,MAAM,mBAAsB1O,EAAO;AAG9C6G,EAAQwH,UAAUrO,IAAQ,EAC1B6G,EAAQyH,OAAOtO,GAAQyO,EAAO3E,GAAGtK,MAAMD,EAAM,CAACA,EAAKsH,QAAQvF,SAAStB,IAAS,KAC7E6G,EAAQ3G,MAAMpB,KAAKkB,GAQpBuO,QAAQvO,OACHT,EAAOV,KACPgI,EAAUtH,EAAKsH;IAEdtH,EAAKsH,QAAQyH,OAAOzN,eAAeb,GAAO,IAC1C6G,EAAQwH,UAAUrO,SACf,IAAI0O,MAAM,oCAAsC1O,EAAO;AAE9DT,EAAKiP,WAAWxO,UAGV6G,EAAQyH,OAAOtO,KD/Ec2O,CAAYnQ,IAkDlDC,YAAamQ,EAA4BtN,OAKpCuN;aArDEC,0BACA1B,oBACA2B,qBACAC,oBACAC,6BAEAC,MAAqB,OACrB5N,qBACA6N,kBACAC,qBACAC,0BACAC,gBACCC,oBAEAC,qBACDC,mBAGAC,SAAwB,OACxBC,QAAuB,OACvBC,YAA0B,OAC1BC,uBACAC,WAAyB,OACzBC,UAAyB,OACzBC,WAAyB,OACzBC,eAA4B,OAC5BC,SAAwB,OACxBC,aAA2B,OAC3BC,YAA0B,OAC1BC,YAA0B,OAC1BC,eAAkD,UAClDC,UAAwB,QACxBC,SAAwB,OACxBC,QAAuB,OACvBC,eAAgD,QAEhDC,aAAgC,UAChCC,YAAiC,QAEjChK,UAA4B,QAC5BlF,QAA2B,QAC1BmP,UAAwB,OACzBC,YAA0C,QAC1CzP,MAAuB,QACvB0P,YAA2F,MAAQ,UAAY,IAOrH/C;IAGImB,EAAWhE,EAAQyD;GAEnBO,EAAM6B,gBACH,IAAItC,MAAM;AAIjBS,EAAM6B,UAAcnS,KAKpBgQ,GADqBoC,OAAOC,kBAAoBD,OAAOC,iBAAiB/B,EAAO,OACtDgC,iBAAiB,kBAGrC7P,SExGQ,SAAsB6N,EAAwBiC,OACxD9P,EAAcqD,OAAOC,OAAO,GAAIyM,EAAUD,GAE1CE,EAAehQ,EAAS2G,SACxBsJ,EAAiBjQ,EAAS8G,WAC1BoJ,EAAiBlQ,EAAS6G,WAC1BsJ,EAAmBnQ,EAAS+G,cAC5BqJ,EAAmBpQ,EAAS4G,cAC5ByJ,EAAuBrQ,EAASgH,mBAChCsJ,EAAuBtQ,EAASiH,mBAEhCsJ,EAAc1C,EAAM3I,QAAQrF,cAC5BmI,EAAiB6F,EAAMlE,aAAa,gBAAkBkE,EAAMlE,aAAa;IAExE3B,IAAgBhI,EAASuG,iBAAkB,KAC3CiK,EAAU3C,EAAM1D,cAAc;AAC9BqG,IACHxI,EAAcwI,EAAOC,iBAKnBC,EAAoB,CACf1I,YAAcA,EACd5H,QAAW,GACXkF,UAAY,GACZvF,MAAS,GACTkG,SAAW;MA6HH,WAAbsK,EArHc,UACbrL,EACA9E,EAAUsQ,EAAiBtQ,QAC3BuQ,EAAa,GACbC,EAAc,EAEdC,EAAYpH,QAEXpH,EAAOgB,OAAOC,OAAO,GAAGmG,EAAGqH,SAC3BC,EAAOf,GAAa3N,EAAK2N;MAET,iBAATe,GAAqBA,EAAKnT,SACpCyE,EAAOgB,OAAOC,OAAOjB,EAAK2O,KAAKC,MAAMF,KAG/B1O,GAGJ6O,EAAY,CAACV,EAAQW,SAEpBnP,EAAQoG,EAASoI,EAAOxO;GACvBA,GAAUhC,EAASuG,oBAMpBoK,EAAWpR,eAAeyC,OACzBmP,EAAO,KACNC,EAAMT,EAAW3O,GAAOoO;AACvBgB,EAEO9P,MAAMC,QAAQ6P,GAGzBA,EAAI5T,KAAK2T,GAFTR,EAAW3O,GAAOoO,GAAkB,CAACgB,EAAKD,GAF1CR,EAAW3O,GAAOoO,GAAkBe,YAUnCE,EAA0BR,EAASL;AACvCa,EAAYpB,GAAkBoB,EAAYpB,IAAgBO,EAAOC,YACjEY,EAAYnB,GAAkBmB,EAAYnB,IAAgBlO,EAC1DqP,EAAYlB,GAAkBkB,EAAYlB,IAAmBK,EAAOc,SACpED,EAAYjB,GAAkBiB,EAAYjB,IAAmBe,EAC7DE,EAAYE,QAAYf,EAExBG,EAAW3O,GAASqP,EACpBjR,EAAQ5C,KAAK6T,GAETb,EAAOgB,UACVd,EAAiB3Q,MAAMvC,KAAKwE,KAI1ByP,EAAaC,QACZzO,EAAI0O,GAERA,EAAsBd,EAASa,IACjBrB,GAAyBsB,EAActB,IAAyBqB,EAAS/H,aAAa,UAAY,GAChHgI,EAAcrB,GAAyBqB,EAAcrB,IAAyBM,IAC9Ee,EAAcxB,GAAoBwB,EAAcxB,IAAmBuB,EAASJ,SAC5EZ,EAAiBpL,UAAU9H,KAAKmU,GAEhC1O,EAAK0O,EAAcrB;IAEd,MAAME,KAAUkB,EAASE,SAC7BV,EAAUV,EAAQvN;AAKpByN,EAAiBzK,SAAW4H,EAAMgE,aAAa,YAAc,KAAO;IAE/D,MAAMC,KAASjE,EAAM+D,SAET,cADhB1M,EAAU4M,EAAM5M,QAAQrF,eAEvB4R,EAASK,GACa,WAAZ5M,GACVgM,EAAUY,IAsCZC,GA3BkB,UACdC,EAAQxB,EAERyB,EAAWpE,EAAMlE,aAAaqG;GAE7BiC,EAYE,CACNvB,EAAiBtQ,QAAU4Q,KAAKC,MAAMgB;IACjC,MAAMC,KAAOxB,EAAiBtQ,QAClCsQ,EAAiB3Q,MAAMvC,KAAK0U,EAAIhC,QAfnB,KACVlO,EAAQ6L,EAAM7L,MAAM3B,QAAU;IAC7BL,EAASuG,mBAAqBvE,EAAMpE,OAAQ;AACjDoU,EAAShQ,EAAMjF,MAAMiD,EAASwF;IAEzB,MAAMxD,KAASgQ,GACnBxB,EAAS,IACFP,GAAejO,EACtBwO,EAAON,GAAelO,EACtB0O,EAAiBtQ,QAAQ5C,KAAKgT;AAE/BE,EAAiB3Q,MAAQiS,IAa1BG,GAGM9O,OAAOC,OAAQ,GAAIyM,EAAUW,EAAkBZ,GFtDnCsC,CAAavE,EAAO7N,QACjC6N,MAAWA,OACXC,SAAaD,EAAMC,UAAY,OAC/BC,cAAiD,WAAhCF,EAAM3I,QAAQrF,mBAC/BmO,IAAS,OAAO/I,KAAKsI,QACrBU,QAAYzE,EAAMqE,EAAO,aAAanB,QACtC6B,WAAeV,EAAMwE,cAIrBlE,OAAS,IAAIrO,EAAOvC,KAAK6C,QAAS,CAACH,WAAY1C,KAAKyC,SAASC,kBAE7DqS,aAAa/U,KAAKyC,SAASI,QAAQ7C,KAAKyC,SAASsF,kBAC/C/H,KAAKyC,SAASsF,iBACd/H,KAAKyC,SAASI,aAIhBJ,SAASsH,KAAO/J,KAAKyC,SAASsH,OAAoC,IAA3B/J,KAAKyC,SAASiG,SAAiB,SAAW,SAC5C,kBAA/B1I,KAAKyC,SAASkG,oBACnBlG,SAASkG,aAAsC,UAAvB3I,KAAKyC,SAASsH,MAGC,kBAAlC/J,KAAKyC,SAASiI,uBACnBjI,SAASiI,gBAAyC,UAAvB1K,KAAKyC,SAASsH;IAI3CzD,EAAStG,KAAKyC,SAAS6F;AACL,mBAAXhC,IAEY,iBAAXA,IACVA,EAAS,IAAIlE,OAAOkE,IAGjBA,aAAkBlE,YAChBK,SAAS6F,aAAgBgI,GAAWhK,EAAkBoB,KAAK4I,QAE3D7N,SAAS6F,aAAe,KAAM,QAKhCgH,kBAAkBtP,KAAKyC,SAASuF,cAChCgN,sBACAC,sBACAC,QAYNA,YAKK3G,EACA4B,EACAF,EACAC,EACAE,EACA+E,EACA3H,EACA4H,EAEAC,EAXA3U,EAAOV,KACPyC,EAAuB/B,EAAK+B,SAS5B6N,EAAY5P,EAAK4P;MAEfgF,EAAkB,CAAEC,SAAS,GAC7BC,EAAqB9U,EAAKgQ,QAAS;GAIzCyE,EAAczU,EAAK+B,SAASsH,KAC5ByD,EAAa8C,EAAMlE,aAAa,UAAY,GAG5CkB,EADAiB,EAAajC,EAAO,SACC7J,EAASuH,aAAcwD,EAAS2H,GAIrD7H,EADA6C,EAAa7D,EAAO,uBACD7J,EAASwH,YAC5BsE,EAAQkH,OAAOtF,GAIf7C,EADA4C,EAAaxP,EAAKkK,OAAO,YACJnI,EAASyH,cAAeiL,GAG7C7H,EADA8C,EAAmB9D,EAAQ,2BAA0BkJ,qBACxB/S,EAAS0H,sBACtC+F,EAASuF,OAAOrF,GAEhB9D,EAAQ7J,EAAS6H,gBAAkBiE,GAAUjH,YAAa4I,GAEtDzN,EAAS8H,aACZ0F,EAAiB3D,EAAQ7J,EAAS8H;IAC9B,CACJ0F,EAAiB3D,EAAO;IAInB,MAAM4C,IADC,CAAC,cAAc,iBAAiB,gBAEvCoB,EAAMlE,aAAa8C,IACtBF,EAAQiB,EAAc,EAAEf,GAAMoB,EAAMlE,aAAa8C,KAK/CzM,EAAS8H,eACb0F,EAAcM,SAAWD,EAAMyD,UAAY,EAAIrT,EAAK6P,SACpDJ,EAAQ7I,YAAa2I,IAItBjB,EAAQiB,EAAc,CACrByF,KAAK,WACLC,SAAS,0BACO,wBACAH,IAGjBH,EAAapJ,EAAMgE,EAAcvP,EAAKgQ,QAAU;IAE5C9N,EAAQ,cDlNP,SAAqBA,UACpBA,EAAMnB,QAAQ,UAAW,QCiNLmU,CAAYlV,EAAKgQ,SAAS,KAChDmF,EAAQ9O,SAAS6F,cAAchK;GAC/BiT,EAAO,CACV7G,EAAQ6G,EAAM,CAACC,IAAIT,IAEnBrG,EAAQoB,EAAiB,mBADVnE,EAAM4J,EAAMnV,EAAKgQ,QAAQ,kBAKtChQ,EAAK+B,SAAS+H,uBAChB8C,EAAY4C,EAAU1C,GAGvBe,EAAQlB,MAAM0I,MAAQzF,EAAMjD,MAAM0I,MAE9BrV,EAAKsH,QAAQ3G,MAAMhB,SACtB+U,EAAkB,UAAY1U,EAAKsH,QAAQ3G,MAAMgC,KAAK,YACtDiK,EAAY,CAACiB,EAAQ2B,GAAWkF,KAGN,OAAtB3S,EAASiG,UAAqBjG,EAASiG,SAAW,IAAMhI,EAAK8P,eACjExB,EAAQsB,EAAM,CAAC0F,SAAS,aAGrBtV,EAAK+B,SAASgI,aACjBuE,EAAQiB,EAAc,CAACxF,YAAYhI,EAASgI,eAIxC/J,EAAK+B,SAASyF,SAAWxH,EAAK+B,SAASwF,UAAW,KAClDgO,EAAmBvV,EAAK+B,SAASwF,UAAUxG,QAAQ,yBAA0B;AACjFf,EAAK+B,SAASyF,QAAU,IAAI9F,OAAO,OAAS6T,EAAmB,SFnO3D,IAAsBhL,EAAGiL,EAC3BC;AEuOCnW,KAAKyC,SAAS2T,MAAQpW,KAAKyC,SAASyG,oBAClCzG,SAAS2T,MFzOYnL,EEyOQjL,KAAKyC,SAAS2T,KFzOnBF,EEyOwBlW,KAAKyC,SAASyG,aFvO9D,SAAyBzE,EAAalF,OACxCmB,EAAOV;AAEPmW,IACHzV,EAAKkR,QAAUyE,KAAKC,IAAI5V,EAAKkR,QAAU,EAAG,IAE3C2E,aAAaJ,GACbA,EAAUK,YAAW,WACpBL,EAAU,KACVzV,EAAKmR,eAAepN,IAAS,EAC7BwG,EAAGwL,KAAK/V,EAAM+D,EAAOlF,KAEnB2W,ME+NHxV,EAAKyP,QAAYA,EACjBzP,EAAKuP,cAAiBA,EACtBvP,EAAK6N,QAAYA,EACjB7N,EAAKwP,SAAaA,EAClBxP,EAAK0P,iBAAmBA,EAExB1P,EAAKuP,cAAc/E,KAAOoF,EAAMpF,KAEhCM,EAAS0E,EAAS,cAAewG,QAE5BC,EAAetI,EAAYqI,EAAEjL,OAAuB,oBAAqByE;GACzEyG,SACIjW,EAAKkW,cAAeF,EAAiBC,KAE3C,CAACE,SAAQ,IAEZrL,EAAS2E,EAAQ,aAAc9E,OAK1BA,EAAII,QAAUwE,SACjBvP,EAAKoW,mBACLzL,EAAIE,uBACJ7K,EAAKqW;IAIFJ,EAAetI,EAAahD,EAAII,OAAuB,IAAI/K,EAAK+B,SAAS2H,UAAW+F;OACpFwG,EACIjW,EAAKsW,aAAa3L,EAAmBsL,GAEtCjW,EAAKuW,YAAY5L,MAGzBG,EAAS2E,EAAQ,SAAUuG,GAAMhW,EAAKwW,QAAQR,KAG9ClL,EAASyE,EAAc,WAAYyG,GAAMhW,EAAKyW,UAAUT,KACxDlL,EAASyE,EAAc,SAAWyG,GAAMhW,EAAK0W,QAAQV,KACrDlL,EAASyE,EAAc,YAAayG,GAAMhW,EAAK2W,WAAWX,KAC1DlL,EAASyE,EAAc,UAAU,IAAMvP,EAAK4W,oBAAoBhC,GAChE9J,EAASyE,EAAc,QAAUyG,GAAMhW,EAAK6W,OAAOb,KACnDlL,EAASyE,EAAc,SAAWyG,IAAQhW,EAAK6Q,YAAa,EAAO7Q,EAAK8W,QAAQd,MAChFlL,EAASyE,EAAc,SAAWyG,GAAMhW,EAAK+W,QAAQf;IAKjDgB,EAAiBhB,QAGhBzD,EAAS5E,EAAYqI,EAAEjL,OAAuB,oBAAoB/K,EAAKwP;IAGtE+C,IAAWvS,EAAK6N,QAAQC,SAASkI,EAAEjL,eACnC/K,EAAKyQ,WACRzQ,EAAKiX,YAENjX,EAAKqW;AAIN3L,EAAesL,GAAE,GAEbzD,GACHvS,EAAKkX,eAAgBlB,EAAGzD,IAItB4E,EAAa,KACZnX,EAAKoQ,QACRpQ,EAAK4W;AAKP9L,EAASzE,SAAS,YAAY2Q,GAC9BlM,EAAS4G,OAAO,QAASyF,EAAYvC,GACrC9J,EAAS4G,OAAO,SAAUyF,EAAYvC,GAEtC5U,EAAKiQ,SAAW,KACf5J,SAAS+Q,oBAAoB,YAAYJ,GACzCtF,OAAO0F,oBAAoB,QAAQD,GACnCzF,OAAO0F,oBAAoB,SAASD,SAKhCE,eAAiB,CACrBrL,UAAY4D,EAAM5D,UAClB6D,SAAWD,EAAMC,UAIlBD,EAAMC,UAAY,EAClBvB,EAAQsB,EAAM,CAAE0H,OAAO,WACvB1H,EAAM2H,sBAAsB,WAAYvX,EAAK6N,SAG7C7N,EAAKwX,SAASzV,EAASD,cAChBC,EAASD,MAEhBgJ,EAAS8E,EAAM,WAAYoG,IAC1BtL,EAAesL,GACVhW,EAAKuQ,YACTvQ,EAAKuQ,WAAY,EACjBvQ,EAAKyX,mBAIPzX,EAAK0X,sBACL1X,EAAK2X,eACL3X,EAAKyX,eACLzX,EAAKqW,aACLrW,EAAK2Q,SAAU,EAEXf,EAAMyD,UACTrT,EAAK4X,UAGN5X,EAAKZ,GAAG,SAAUE,KAAKuY,UAEvBjL,EAAWgD,EAAM,eACjB5P,EAAKF,QAAQ,eAGY,IAArBiC,EAASsG,SACZrI,EAAK0V,KAAK,IAUZrB,aAAalS,EAAsB,GAAIkF,EAAwB,QAGzD,MAAMkL,KAAUpQ,OACf2V,eAAevF;IAKhB,MAAMkB,KAAYpM,OACjB0Q,oBAAoBtE,GAO3Bc,qBACKvU,EAAOV,KACP0S,EAAchS,EAAK+B,SAAS8G,WAC5BsJ,EAAiBnS,EAAK+B,SAASgH,mBAE/BiP,EAAY,UACH,CAAC5T,EAAgB6T,SACxBxE,EAAWpN,SAASC,cAAc;OACtCmN,EAASlN,UAAY,WACrBkN,EAAS7M,YAAYxC,EAAKjC,SACnBsR,mBAGW,CAACrP,EAAgB6T,IAC5B,gCAAkCA,EAAO7T,EAAK+N,IAAmB,gBAE/D,CAAC/N,EAAgB6T,IACnB,QAAUA,EAAO7T,EAAK4N,IAAgB,cAEtC,CAAC5N,EAAgB6T,IACjB,QAAUA,EAAO7T,EAAK4N,IAAgB,uBAE7B,CAAC5N,EAAgB6T,IAC1B,mCAAqCA,EAAO7T,EAAKwL,OAAS,qCAErD,CAACxL,EAAe6T,IACrB,yDAEE,CAAC7T,EAAe6T,IAClB,0CAEM,gBACH,IACH;AAKTjY,EAAK+B,SAASmI,OAAS9E,OAAOC,OAAO,GAAI2S,EAAWhY,EAAK+B,SAASmI,QAOnEoK,qBACK9Q,EAAK+G,EACL2N,EAAkC,YACjB,sBACA,oBACA,wBACA,qBACA,qBACA,4BACA,8BACA,6BACA,mCACA,qCACA,mCACA,gCACA,uBACA,cACA,eACA,eACA;IAGhB1U,KAAO0U,GAEX3N,EAAKjL,KAAKyC,SAASmW,EAAU1U,MACrBlE,KAAKF,GAAGoE,EAAK+G,GAUvBiM,QAAQR,OACHhW,EAAOV;AAMNU,EAAKyQ,WAAczQ,EAAKoQ,SAC5BpQ,EAAKmY,QACLzN,EAAesL,IASjBO,YAAYP,OACPhW,EAAOV;GAGPU,EAAKyQ,gBACmB,WAAvBzQ,EAAK+B,SAASsH,MACjBrJ,EAAKoY,gBAENpY,EAAKqY,QACE;AAGPvC,YAAW,IAAM9V,EAAKmY,SAAS,GASjCN,WACC1L,EAAa7M,KAAKsQ,MAAO,SACzBzD,EAAa7M,KAAKsQ,MAAO,UAO1BmH,QAAQf,OACHhW,EAAOV;AAEPU,EAAKsY,UAAYtY,EAAK0Q,eAAiB1Q,EAAKwQ,SAC/C9F,EAAesL,GAMZhW,EAAK+B,SAASyF,SAGjBsO,YAAW,SACNyC,EAAavY,EAAKwY;GAClBD,EAAWvV,MAAMhD,EAAK+B,SAASyF,cAE/BiR,EAAaF,EAAWnW,OAAOtD,MAAMkB,EAAK+B,SAASyF;IAClD,MAAMkR,KAASD,EACnBzY,EAAK2Y,WAAWD,MAEf,GAQL/B,WAAWX,OACNhW,EAAOV;IACRU,EAAKwQ,cAIJoI,EAAYtY,OAAOuY,aAAa7C,EAAE8C,SAAW9C,EAAE+C;OAC/C/Y,EAAK+B,SAAS2F,QAAiC,UAAvB1H,EAAK+B,SAASsH,MAAoBuP,IAAc5Y,EAAK+B,SAASwF,WACzFvH,EAAK2Y,kBACLjO,EAAesL,WANftL,EAAesL,GAejBS,UAAUT,OACLhW,EAAOV;GAEPU,EAAKwQ,SJzlBc,II0lBlBwF,EAAE8C,SACLpO,EAAesL;YAKTA,EAAE8C,cJzmBY,MI6mBhB7N,EAAU+N,EAAuBhD,eACpChW,EAAKiZ;;KJ5mBe,UImnBjBjZ,EAAKoQ,SACR1F,EAAesL,GAAE,GACjBhW,EAAKkZ,cAENlZ,EAAKoW;KJnnBiB,OIwnBjBpW,EAAKoQ,QAAUpQ,EAAK8Q,WACxB9Q,EAAKqY;KACC,GAAIrY,EAAKoR,aAAc,KACzB+H,EAAOnZ,EAAKoZ,YAAYpZ,EAAKoR,aAAc;AAC3C+H,GAAMnZ,EAAKqZ,gBAAgBF,eAEhCzO,EAAesL;KJhoBM,MIqoBjBhW,EAAKoR,aAAc,KAClBkI,EAAOtZ,EAAKoZ,YAAYpZ,EAAKoR,cAAe;AAC5CkI,GAAMtZ,EAAKqZ,gBAAgBC,eAEhC5O,EAAesL;KJ5oBS,eIipBpBhW,EAAKoQ,QAAUpQ,EAAKoR,cACvBpR,EAAKkX,eAAelB,EAAEhW,EAAKoR,cAC3B1G,EAAesL,IAGNhW,EAAK+B,SAAS2F,QAAU1H,EAAK2Y,cACtCjO,EAAesL;KJrpBM,eI2pBtBhW,EAAKuZ,kBAAkB,EAAGvD;KJzpBH,eI8pBvBhW,EAAKuZ,iBAAiB,EAAGvD;KJ1pBJ,cI+pBjBhW,EAAK+B,SAASqG,cACbpI,EAAKoQ,QAAUpQ,EAAKoR,eACvBpR,EAAKmQ,SAAU,EACfnQ,EAAKkX,eAAelB,EAAEhW,EAAKoR,cAI3B1G,EAAesL,GACfhW,EAAKmQ,SAAU,GAEZnQ,EAAK+B,SAAS2F,QAAU1H,EAAK2Y,cAChCjO,EAAesL;KJ5qBS,OACF,eImrBxBhW,EAAKwZ,gBAAgBxD,GAKnBhW,EAAK0Q,gBAAkBzF,EAAU+N,EAAuBhD,IAC3DtL,EAAesL,IAQjBU,QAAQV,OACHhW,EAAOV;GAEPU,EAAKwQ,SACR9F,EAAesL;SAIZjS,EAAQ/D,EAAKwY;AACbxY,EAAKgR,YAAcjN,IACtB/D,EAAKgR,UAAYjN,EAEb/D,EAAK+B,SAASkI,WAAW8L,KAAK/V,EAAK+D,IACtC/D,EAAK0V,KAAK3R,GAGX/D,EAAKyZ,iBACLzZ,EAAKF,QAAQ,OAAQiE,KASvB+S,QAAQd,OACHhW,EAAOV,KACPoa,EAAa1Z,EAAKyQ;GAElBzQ,EAAKqQ,kBACRrQ,EAAKiX,YACLvM,EAAesL;AAIZhW,EAAK4Q,cACT5Q,EAAKyQ,WAAY,EACa,UAA1BzQ,EAAK+B,SAASsG,SAAqBrI,EAAK0V,KAAK,IAE5CgE,GAAY1Z,EAAKF,QAAQ,SAEzBE,EAAKqR,YAAY1R,SACrBK,EAAK2Z,YACL3Z,EAAKoY,gBACLpY,EAAKyZ,iBAAiBzZ,EAAK+B,SAAS8F,cAGrC7H,EAAKyX,gBAONZ,OAAOb,OACFhW,EAAOV;GACNU,EAAKyQ,cACVzQ,EAAKyQ,WAAY,EACjBzQ,EAAK4Q,aAAc,GAGd5Q,EAAK6Q,YAAcxK,SAASuT,gBAAkB5Z,EAAK0P,wBAEvD1P,EAAK6Q,YAAa,OAClB7Q,EAAK8W,QAAQd;IAIV6D,EAAa,KAChB7Z,EAAKkZ,QACLlZ,EAAKoY,gBACLpY,EAAK8Z,SAAS9Z,EAAK8B,MAAMnC,QACzBK,EAAKF,QAAQ;AAGVE,EAAK+B,SAAS2F,QAAU1H,EAAK+B,SAAS4F,aACzC3H,EAAK2Y,WAAW,MAAM,EAAOkB,GAE7BA,KASF3D,cAAevL,EAA8B4H,IAO7C2E,eAAgBvM,EAA8B4H,OACzCxO,EAAO/D,EAAOV;AAEbiT,IAKDA,EAAOwH,eAAiBxH,EAAOwH,cAAchM,QAAQ,qBAKrDwE,EAAOpF,UAAUW,SAAS,UAC7B9N,EAAK2Y,WAAW,MAAM,GAAM,KACvB3Y,EAAK+B,SAASwG,kBACjBvI,EAAKkZ,gBAKc,KADrBnV,EAAQwO,EAAOM,QAAQ9O,SAEtB/D,EAAKga,UAAY,KACjBha,EAAKia,QAAQlW,GACT/D,EAAK+B,SAASwG,iBACjBvI,EAAKkZ,SACMlZ,EAAK+B,SAASkG,cAAgB0C,EAAIH,MAAQ,QAAQxD,KAAK2D,EAAIH,OACtExK,EAAKqZ,gBAAgBrZ,EAAKka,UAAUnW,OAYxCuS,aAAc3L,EAAiBhF,OAC1B3F,EAAOV;AAEPU,EAAKwQ,UACkB,UAAvBxQ,EAAK+B,SAASsH,OACjBqB,EAAeC,GACf3K,EAAKoY,cAAczS,EAAMgF,IAS3B+K,KAAK3R,OAEA/D,EAAOV,KACPiL,EAAKvK,EAAK+B,SAAS2T;IAClBnL,EAAI;GACLvK,EAAKmR,eAAe7P,eAAeyC,GAAQ;AAE/C6I,EAAW5M,EAAK6N,QAAQ7N,EAAK+B,SAAS0G,cACtCzI,EAAKkR;MAECrS,EAAWmB,EAAKma,aAAaC,KAAKpa;AACxCuK,EAAGwL,KAAK/V,EAAM+D,EAAOlF,GAOtBsb,aAAahY,EAAqBkF,SAC3BrH,EAAOV;AACbU,EAAKkR,QAAUyE,KAAKC,IAAI5V,EAAKkR,QAAU,EAAG,GAC1ClR,EAAKga,UAAY,KAEjBha,EAAKqa,oBACLra,EAAKqU,aAAalS,EAAQkF,GAE1BrH,EAAKyZ,eAAezZ,EAAKyQ,YAAczQ,EAAK0Q,eAEvC1Q,EAAKkR,SACT7D,EAAcrN,EAAK6N,QAAQ7N,EAAK+B,SAAS0G,cAG1CzI,EAAKF,QAAQ,OAAQqC,EAASkF,GAO/BiT,eAAevW,QACT2R,KAAK3R,GAQXwW,gBAAgBxW,EAAe,QAC1B6L,EAAQtQ,KAAKiQ;AACHK,EAAM7L,QAAUA,IAE7B6L,EAAM7L,MAAQA,EACdoI,EAAayD,EAAM,eACdoB,UAAYjN,GAWnByW,kBAEKlb,KAAKwQ,eAAiBxQ,KAAKsQ,MAAMgE,aAAa,YAC1CtU,KAAKwC,MAGNxC,KAAKwC,MAAMa,KAAKrD,KAAKyC,SAASwF,WAOtCiQ,SAAUzT,EAAuB0W,GAGhCpQ,EAAgB/K,KAFHmb,EAAS,GAAK,CAAC,WAEC,UACvBC,MAAMD,QACNE,SAAS5W,EAAO0W,MASvBG,YAAY7W,GACE,IAAVA,IAAaA,EAAQ,WACnBhC,SAASiG,SAAWjE,OACpB0T,eAONW,cAAezS,EAAmBqQ,OAE7B6E,EACA5Z,EAAG6Z,EAAOC,EAAKC,EACfC,EAHAjb,EAAOV;GAKgB,WAAvBU,EAAK+B,SAASsH,UAGb1D,SACJ3F,EAAKoW,wBACDpW,EAAKyQ,WACRzQ,EAAK2Z;GAQW,eAFlBkB,EAAY7E,GAAKA,EAAExL,KAAK5I,gBAESqJ,EAAU,WAAW+K,IAAMhW,EAAKqR,YAAY1R,OAAQ,KACpFsb,EAAOjb,EAAKkb,iBACZJ,EAAQzX,MAAME,UAAU1D,QAAQkW,KAAK/V,EAAKyP,QAAQkE,SAAUsH,KAC5DF,EAAO1X,MAAME,UAAU1D,QAAQkW,KAAK/V,EAAKyP,QAAQkE,SAAUhO,MAG1DqV,EAAQF,EACRA,EAAQC,EACRA,EAAQC,GAEJ/Z,EAAI6Z,EAAO7Z,GAAK8Z,EAAK9Z,IACzB0E,EAAO3F,EAAKyP,QAAQkE,SAAS1S,IACW,IAApCjB,EAAKqR,YAAYxR,QAAQ8F,IAC5B3F,EAAKmb,mBAAmBxV;AAG1B+E,EAAesL,OACU,cAAd6E,GAA6B5P,EAAU+N,EAAuBhD,IAAuB,YAAd6E,GAA2B5P,EAAU,WAAW+K,GAC9HrQ,EAAKwH,UAAUW,SAAS,UAC3B9N,EAAKob,iBAAkBzV,GAEvB3F,EAAKmb,mBAAmBxV,IAGzB3F,EAAKoW,mBACLpW,EAAKmb,mBAAmBxV;AAIzB3F,EAAKqb,YACArb,EAAKyQ,WACTzQ,EAAKmY,SAQPgD,mBAAoBxV,OAEf2V,EAAchc,KAAKmQ,QAAQvD,cAAc;AACzCoP,GAAcjO,EAAciO,EAA2B,eAE3D1O,EAAWjH,EAAK,uBACuB,GAAnCrG,KAAK+R,YAAYxR,QAAQ8F,SACvB0L,YAAY9R,KAAMoG,GAQzByV,iBAAkBzV,OACb4V,EAAMjc,KAAK+R,YAAYxR,QAAQ8F;KAC9B0L,YAAYzR,OAAO2b,EAAK,GAC7BlO,EAAc1H,EAAK,UAOpByQ,mBACC/I,EAAc/N,KAAK+R,YAAY,eAC1BA,YAAc,GAQpBgI,gBAAiB9G,OACZiJ,EAAaC,EAAaC;GAE1BnJ,IAAWjT,KAAK8R;QAIfiJ,qBACA9H,EAAS;KAETnB,aAAemB,EACpBjE,EAAQhP,KAAKiQ,cAAc,yBAAyBgD,EAAO7G,aAAa,QACxE4C,EAAQiE,EAAO,iBAAiB,SAChC3F,EAAW2F,EAAO,UAElBiJ,EAAelc,KAAKoQ,iBAAiBiM;IACjCC,EAAYtc,KAAKoQ,iBAAiBkM,WAAa;AAEnDH,EAAenc,KAAK8R,aAAayK,cACjCH,EAAOpc,KAAK8R,aAAa0K,wBAAwBC,IAAMzc,KAAKoQ,iBAAiBoM,wBAAwBC,IAAMH,GAEnGH,EAAcD,EAAcI,OAC9BlM,iBAAiBkM,UAAYF,EAAIF,EAAcC,EAE1CC,EAAIE,SACTlM,iBAAiBkM,UAAYF,GASpCrB,oBACK/a,KAAK8R,eACR/D,EAAc/N,KAAK8R,aAAa,eAC3BA,aAAa4K,gBAAgB,uBAE9B5K,aAAe,UACf7B,cAAcyM,gBAAgB,yBAOpC/C,YAE4B,WAAvB3Z,KAAKyC,SAASsH,YAEbgI,YAAc/R,KAAK2c,kBAEpB3c,KAAK+R,YAAY1R,SACpBiN,EAAYtN,KAAK+R,YAAa,eAEzBgK,iBACAnC,cAEDf,SAON9B,iBACKrW,EAAOV;AAEPU,EAAK+B,SAAS8H,eAEd7J,EAAKqR,YAAY1R,OAAS,IAAOK,EAAKyQ,WAAanR,KAAKyC,SAASiI,iBAAmBhK,EAAK8B,MAAMnC,OAAS,GAC3GK,EAAKua,kBACLva,EAAK0Q,eAAgB,EACrB9D,EAAW5M,EAAK6N,QAAQ,kBAExB7N,EAAK0Q,eAAgB,EACrBrD,EAAcrN,EAAK6N,QAAQ,kBAS7BwN,iBACMhF,aAONsD,iBACMtD,aAMNmC,oBACQlZ,KAAKiQ,cAAcxL,MAAM3B,OAMjC+V,YACKnY,EAAOV;AACPU,EAAKqQ,aAETrQ,EAAK4Q,aAAc,EACnB5Q,EAAKuP,cAAc4I,QACnBrC,YAAW,KACV9V,EAAK4Q,aAAc,EACnB5Q,EAAK8W,YACH,IAOJG,YACM1H,cAAc0H,YAEdJ,OAAO,MAUbpT,iBAAiBvB,UACT5C,KAAK4Q,OAAOzM,iBAAiBvB,EAAO5C,KAAK4c,oBAUjDA,uBACKrX,EACA9C,EAAWzC,KAAKyC;MACc,iBAAvBA,EAASmH,YACnBrE,EAAO,CAAC,CAAC/B,MAAOf,EAASmH,aAGnB,CACNzG,OAAcV,EAASoH,YACvB7E,YAAcvC,EAASqH,kBACvBvE,KAAcA,EACdnE,QAAcqB,EAASrB,SASzBiD,OAAOzB,OACFjB,EAAG8D,EAAQoX,EACXnc,EAAWV,KACXyC,EAAW/B,EAAK+B,SAChBI,EAAW7C,KAAK4c;GAGhBna,EAASkC,OAEkB,mBAD9BkY,EAAiBnc,EAAK+B,SAASkC,MAAM8R,KAAK/V,EAAKkC,UAExC,IAAIiN,MAAM;GAKdjN,IAAUlC,EAAKga,WAClBha,EAAKga,UAAc9X,EACnB6C,EAAa/E,EAAKkQ,OAAOvM,OAAOzB,EAAOkD,OAAOC,OAAOlD,EAAS,CAAC8B,MAAOkY,KACtEnc,EAAK+Q,eAAkBhM,GAEvBA,EAAaK,OAAOC,OAAQ,GAAIrF,EAAK+Q,gBAIlChP,EAASkG,iBACPhH,EAAI8D,EAAOjD,MAAMnC,OAAS,EAAGsB,GAAK,EAAGA,KACiB,IAAtDjB,EAAK8B,MAAMjC,QAAQsK,EAASpF,EAAOjD,MAAMb,GAAG+D,MAC/CD,EAAOjD,MAAMlC,OAAOqB,EAAG;OAKnB8D,EAQR0U,eAAgB2C,GAA0B,OACrCnb,EAAGob,EAAGnb,EAAGzB,EAAG6c,EAAc7I,EAAUpM,EAAWkV,EAAMC,EACrDC,EAAQ/U,EACRgV,EL5rCDC,EK+rCC3c,EAAWV,KACX4C,EAAYlC,EAAKwY,aACjBoE,EAAc5c,EAAK2D,OAAOzB,GAC1B2a,EAAsB7c,EAAKoR,cAAgBjH,EAASnK,EAAKoR,aAAayB,QAAQ9O,OAC9E+Y,EAAkB9c,EAAK+B,SAAS+F,aAAc;IAIlDrI,EAAImd,EAAQ9a,MAAMnC,OACsB,iBAA7BK,EAAK+B,SAASgG,aACxBtI,EAAIkW,KAAKoH,IAAItd,EAAGO,EAAK+B,SAASgG,aAG3BtI,EAAI,IACPqd,GAAgB,GAIjBJ,EAAS,GACTJ,EAAe,GAEVrb,EAAI,EAAGA,EAAIxB,EAAGwB,IAAK,KAGnBsR,EAAWvS,EAAKmC,QAAQya,EAAQ9a,MAAMb,GAAG+D,IACzCgY,EAAa7S,EAASoI,EAAOvS,EAAK+B,SAAS6G,aAC3CqU,EAAajd,EAAKka,UAAU8C;IAC3BC,IACJA,EAAYjd,EAAKkK,OAAO,SAAUqI,IAI9BvS,EAAK+B,SAASkG,cAClBgV,EAAU9P,UAAU+P,OAAO,WAAYld,EAAK8B,MAAMqb,SAASH,IAG5DvJ,EAAclB,EAAOvS,EAAK+B,SAAS4G,gBAAkB,GAGhD0T,EAAI,EAAGnb,GAFZmG,EAAchE,MAAMC,QAAQmQ,GAAYA,EAAW,CAACA,KAEvBpM,EAAU1H,OAAQ0c,EAAInb,EAAGmb,IACrD5I,EAAWpM,EAAUgV,GAChBrc,EAAKqH,UAAU/F,eAAemS,KAClCA,EAAW,IAEPiJ,EAAOpb,eAAemS,KAC1BiJ,EAAOjJ,GAAYpN,SAAS+W,yBAC5Bd,EAAa/c,KAAKkU,IAIf4I,EAAI,IACPY,EAAYA,EAAUtW,WAAU,GAChC0G,EAAc4P,EAAU,UACxBA,EAAUjB,gBAAgB,kBAG3BU,EAAOjJ,GAAU7M,YAAYqW,OAe1BxJ,KAVDnU,KAAKyC,SAASkH,mBACjBqT,EAAazX,MAAK,CAAC1E,EAAGC,KACPJ,EAAKqH,UAAUlH,IAAMH,EAAKqH,UAAUlH,GAAGkd,QAAU,IACjDrd,EAAKqH,UAAUjH,IAAMJ,EAAKqH,UAAUjH,GAAGid,QAAU,KAMjEd,EAAOlW,SAAS+W,yBACCd,MACZtc,EAAKqH,UAAU/F,eAAemS,IAAaiJ,EAAOjJ,GAAUE,SAAShU,OAAQ,KAE5E2d,EAAgBjX,SAAS+W;AAC7BE,EAAcvI,OAAO/U,EAAKkK,OAAO,kBAAmBlK,EAAKqH,UAAUoM,KACnE6J,EAAcvI,OAAO2H,EAAOjJ;IAExB8J,EAAavd,EAAKkK,OAAO,WAAY,CAACgJ,MAAMlT,EAAKqH,UAAUoM,GAAUtR,QAAQmb;AAEjFf,EAAKxH,OAAOwI,QAGZhB,EAAKxH,OAAO2H,EAAOjJ;GAIrBzT,EAAK0P,iBAAiB1D,UAAY,GAClChM,EAAK0P,iBAAiBqF,OAAOwH,GAGzBvc,EAAK+B,SAASgE,YACA/F,EAAK0P,iBL3xCpBiN,EAAWtW,SAASmX,iBAAiB,kBACzCna,MAAME,UAAUxE,QAAQgX,KAAK4G,GAAU,SAASnR,EAAIvK,OAC/Cwc,EAASjS,EAAG3E;AAChB4W,EAAO3W,aAAa0E,EAAGS,WAAYT,GACnCiS,EAAOC,eKwxCFd,EAAQ1a,MAAMvC,QAAUid,EAAQta,OAAO3C,YACrC,MAAMge,KAAOf,EAAQta,OACzByD,EAAW/F,EAAK0P,iBAAkBiO,EAAI5a;IAMrC6a,EAAgBC,QACfC,EAAU9d,EAAKkK,OAAO2T,EAAS,CAACjO,MAAM1N;OACtC4b,IACHhB,GAAgB,EAChB9c,EAAK0P,iBAAiBqO,aAAaD,EAAS9d,EAAK0P,iBAAiBzD,aAE5D6R;GAIH9d,EAAK+B,SAASkI,WAAW8L,KAAK/V,EAAKkC,GAI9BlC,EAAKkR,QACd0M,EAAa,WAGqB,IAAzBhB,EAAQ9a,MAAMnC,QACvBie,EAAa,cARbA,EAAa,gBAedpB,EAAoBxc,EAAKge,UAAU9b,MAElCwF,EAASkW,EAAa,kBAKvB5d,EAAK8Q,WAAa8L,EAAQ9a,MAAMnC,OAAS,GAAK6c,EAC1CM,EAAe,IAEdF,EAAQ9a,MAAMnC,OAAS,QAE1B8c,EAASI,GAAsB7c,EAAKka,UAAU2C,MAE9B7c,EAAK0P,iBAAiB5B,SAAS2O,GAAU,KAEpDwB,EAAe;AACfvW,IAAW1H,EAAK+B,SAASoG,gBAC5B8V,EAAe,GAEhBxB,EAASzc,EAAKke,aAAaD,SAI5BxB,EAAS/U;AAGV1H,EAAKqZ,gBAAgBoD,GACjBL,IAAoBpc,EAAKoQ,QAAUpQ,EAAKqY,YAG5CrY,EAAKqa,oBACD+B,GAAmBpc,EAAKoQ,QAC3BpQ,EAAKkZ,OAAM,GASdgF,oBACQ5e,KAAKoQ,iBAAiB8N,iBAAiB,qBAgB/CvK,UAAU7O,OACLL,EAAO/D,EAAOV;GAEd+D,MAAMC,QAAQc,OACZ,MAAM+Z,KAAO/Z,EACjBpE,EAAKiT,UAAUkL;KAKbpa,EAAQ/D,EAAK8X,eAAe1T,MAC/BpE,EAAKuR,YAAYxN,IAAS,EAC1B/D,EAAKga,UAAY,KACjBha,EAAKF,QAAQ,aAAciE,EAAOK,IAQpC0T,eAAe1T,OACVZ,EAAM2G,EAAS/F,EAAK9E,KAAKyC,SAAS6G;OACzB,OAARpF,IAAgBlE,KAAK6C,QAAQb,eAAekC,KAEjDY,EAAKiZ,OAAWjZ,EAAKiZ,UAAY/d,KAAKqQ,MACtCvL,EAAKga,IAAQ9e,KAAK0Q,QAAU,QAAW1Q,KAAKgS,iBACvCnP,QAAQqB,GAAOY,EACbZ,GAQRuU,oBAAoB3T,OACfZ,EAAM2G,EAAS/F,EAAK9E,KAAKyC,SAASiH;OAEzB,OAARxF,IAELY,EAAKiZ,OAASjZ,EAAKiZ,UAAY/d,KAAKqQ,WAC/BtI,UAAU7D,GAAOY,EACfZ,GAQR6a,eAAerZ,EAAWZ,OACrBka;AACJla,EAAK9E,KAAKyC,SAASiH,oBAAsBhE,GAErCsZ,EAAYhf,KAAKyY,oBAAoB3T,UACnCtE,QAAQ,eAAgBwe,EAAWla,GAQ1Cma,kBAAkBvZ,GACb1F,KAAK+H,UAAU/F,eAAe0D,YAC1B1F,KAAK+H,UAAUrC,QACjBwZ,kBACA1e,QAAQ,kBAAmBkF,IAOlCyZ,yBACMpX,UAAY,QACZmX,kBACA1e,QAAQ,kBASd4e,aAAa3a,EAAcK,OAEtBuB,EAAMgZ,EACNC,EAAWC,EAAYC,EAAaC,EAAeC,EAFnDhf,EAAOV;GAIXyE,EAAYoG,EAASpG,GACrB6a,EAAYzU,EAAS/F,EAAKpE,EAAK+B,SAAS6G,aAG1B,OAAV7E,GACC/D,EAAKmC,QAAQb,eAAeyC,OACR,iBAAd6a,EAAwB,MAAM,IAAIzP,MAAM;AAEnD6P,EAAYhf,EAAKmC,QAAQ4B,GAAOsZ,OAG5BuB,IAAc7a,WACV/D,EAAKmC,QAAQ4B,IAEA,KADpB8a,EAAa7e,EAAK8B,MAAMjC,QAAQkE,KAE/B/D,EAAK8B,MAAMlC,OAAOif,EAAY,EAAGD,IAGnCxa,EAAKiZ,OAASjZ,EAAKiZ,QAAU2B,EAC7Bhf,EAAKmC,QAAQyc,GAAaxa,EAG1B0a,EAAc9e,EAAKwR,YAAL,KACduN,EAAgB/e,EAAKwR,YAAL,OAEZsN,WACIA,EAAY/a,UACZ+a,EAAYF,IAEhBG,WACIA,EAAchb,UACdgb,EAAcH,KAIiB,IAAnC5e,EAAK8B,MAAMjC,QAAQ+e,KACtBjZ,EAAQ3F,EAAKif,QAAQlb,GACrB4a,EAAW3e,EAAKkK,OAAO,OAAQ9F,GAE3BuB,EAAKwH,UAAUW,SAAS,WAAYlB,EAAW+R,EAAS,UAE5DhZ,EAAKkB,WAAWkX,aAAaY,EAAUhZ,GACvCA,EAAK2H,UAINtN,EAAKga,UAAY,KAGbha,EAAKoQ,QACRpQ,EAAKyZ,gBAAe,IAQtByF,aAAanb,EAAc0W,OACtBza,EAAOV;AACXyE,EAAQoG,EAASpG;IAEb+a,EAAc9e,EAAKwR,YAAL,KACduN,EAAgB/e,EAAKwR,YAAL;AAChBsN,UAAoBA,EAAY/a,GAChCgb,UAAsBA,EAAchb,UAEjC/D,EAAKuR,YAAYxN,UACjB/D,EAAKmC,QAAQ4B,GACpB/D,EAAKga,UAAY,KACjBha,EAAKF,QAAQ,gBAAiBiE,GAC9B/D,EAAKmf,WAAWpb,EAAO0W,GAMxB2E,oBAEMjO,eAAkB,QAClBI,YAAe,QACfiN;IACDjL,EAAsB;IACrB,IAAI/P,KAAOlE,KAAK6C,QACb7C,KAAK6C,QAAQb,eAAekC,IAAQlE,KAAKwC,MAAMjC,QAAQ2D,IAAQ,IACrE+P,EAAS/P,GAAOlE,KAAK6C,QAAQqB;KAI1BrB,QAAU7C,KAAK4Q,OAAOpO,MAAQyR,OAC9ByG,UAAY,UACZla,QAAQ,gBASdoa,UAAUnW,UAGLzE,KAAKkS,YAAL,OAA2BlQ,eAAeyC,GACtCzE,KAAKkS,YAAL,OAA2BzN,GAI5BzE,KAAK+f,oBAAoBtb,EAAOzE,KAAK4e,cAQ7C9E,YAAa7G,EAAoBrN,EAAkBsF,EAAc,cAC/C8U;GAEZ/M,GAKJ+M,EADW,QAAR9U,EANOlL,KAOG2c,kBAPH3c,KASGoQ,iBAAiB8N,iBAAiB;IAG3C,IAAIvc,EAAI,EAAGA,EAAIqe,EAAI3f,OAAQsB,OAC3Bqe,EAAIre,IAAMsR,SAIVrN,EAAY,EACRoa,EAAIre,EAAE,GAGPqe,EAAIre,EAAE,IASfoe,oBAAoBtb,EAAcwb,MAGnB,QAFdxb,EAAQoG,EAASpG,QAGX,MAAMkC,KAAQsZ,EAAK,KACnB/T,EAAKvF;GACLuF,EAAGE,aAAa,gBAAkB3H,SAC9ByH,GAWXyT,QAAQlb,UACAzE,KAAK+f,oBAAoBtb,EAAOzE,KAAKmQ,QAAQkE,UAQrDgH,SAAU5G,EAAwB0G,OAC7Bza,EAAOV;AACXU,EAAKwf,OAASnZ,SAAS+W;IAElB,MAAMvJ,KAAS7T,EAAKyP,QAAQkE,SAChC3T,EAAKwf,OAAO5Y,YAAYiN;IAGrB/R,EAAQuB,MAAMC,QAAQyQ,GAAUA,EAAS,CAACA;IAEzC,IAAI9S,EAAI,EAAGxB,GADhBqC,EAAQA,EAAM8D,QAAO6Z,IAAgC,IAA3Bzf,EAAK8B,MAAMjC,QAAQ4f,MACnB9f,OAAQsB,EAAIxB,EAAGwB,IACxCjB,EAAK0f,UAAaze,EAAIxB,EAAI,EAC1BO,EAAKia,QAAQnY,EAAMb,GAAIwZ;IAGpBhL,EAAUzP,EAAKyP;AACnBA,EAAQsO,aAAa/d,EAAKwf,OAAQ/P,EAAQxD,YAE1CjM,EAAKwf,OAAS,KAQfvF,QAASlW,EAAc0W,GAGtBpQ,EAAgB/K,KAFHmb,EAAS,GAAK,CAAC,WAEE,SACzB9U,EAGAga,EAFA3f,EAAOV,KACPmV,EAAYzU,EAAK+B,SAASsH;GAE9BtF,EAAQoG,EAASpG,KAEkB,IAA/B/D,EAAK8B,MAAMjC,QAAQkE,KAEJ,WAAd0Q,GACHzU,EAAKkZ,QAGY,WAAdzE,GAA2BzU,EAAK+B,SAASmG,cAKzClI,EAAKmC,QAAQb,eAAeyC,KACf,WAAd0Q,GAAwBzU,EAAK0a,MAAMD,GACrB,UAAdhG,IAAyBzU,EAAKsY,cAElC3S,EAAO3F,EAAKkK,OAAO,OAAQlK,EAAKmC,QAAQ4B,IAEpC/D,EAAKyP,QAAQ3B,SAASnI,KACzBA,EAAOA,EAAKgB,WAAU,IAGvBgZ,EAAU3f,EAAKsY,SACftY,EAAK8B,MAAMlC,OAAOI,EAAKiR,SAAU,EAAGlN,GACpC/D,EAAK4f,cAAcja,GAEf3F,EAAK2Q,QAAS,KACbxO,EAAUnC,EAAKke;IAGdle,EAAK0f,UAAW,KAChBnN,EAASvS,EAAKka,UAAUnW,GACxBoV,EAAOnZ,EAAKoZ,YAAY7G,EAAQ;AACpCvS,EAAKyZ,eAAezZ,EAAKyQ,WAA2B,WAAdgE,GAClC0E,GACHnZ,EAAKqZ,gBAAgBF,IAKjBhX,EAAQxC,QAAUK,EAAKsY,SAC5BtY,EAAKkZ,QACMlZ,EAAK0f,WAChB1f,EAAK4W,mBAGN5W,EAAKF,QAAQ,WAAYiE,EAAO4B,GAE3B3F,EAAK0f,WACT1f,EAAK0X,oBAAoB,CAAC+C,OAAQA,MAI/Bza,EAAK0f,YAAeC,GAAW3f,EAAKsY,WACxCtY,EAAKyX,mBAWR0H,WAAYpb,EAAc0W,OACrBxZ,EAAGsa,EAAKvb,EAAOV,KAEfqG,EAAO3F,EAAKif,QAAQlb;AAEnB4B,IAEL5B,EAASoG,EAASxE,EAAKkN,QAAQ9O,QAGpB,KAFX9C,EAAMjB,EAAK8B,MAAMjC,QAAQkE,MAGxB4B,EAAK2H,SACD3H,EAAKwH,UAAUW,SAAS,YAC3ByN,EAAMvb,EAAKqR,YAAYxR,QAAQ8F,GAC/B3F,EAAKqR,YAAYzR,OAAO2b,EAAK,GAC7BlO,EAAc1H,EAAK,WAGpB3F,EAAK8B,MAAMlC,OAAOqB,EAAG,GACrBjB,EAAKga,UAAY,MACZha,EAAK+B,SAAS0F,SAAWzH,EAAKuR,YAAYjQ,eAAeyC,IAC7D/D,EAAKkf,aAAanb,EAAO0W,GAGtBxZ,EAAIjB,EAAKiR,UACZjR,EAAK8Z,SAAS9Z,EAAKiR,SAAW,GAG/BjR,EAAK0X,oBAAoB,CAAC+C,OAAQA,IAClCza,EAAKyX,eACLzX,EAAK4W,mBACL5W,EAAKF,QAAQ,cAAeiE,EAAO4B,KAarCgT,WAAY/I,EAAewM,GAAwB,EAAMvd,OAGpDghB,EAFA7f,EAAQV,KACRwgB,EAAQ9f,EAAKiR;GAEjBrB,EAAQA,GAAS5P,EAAKwY,aAEE,mBAAb3Z,IAAyBA,EAAW,SAE1CmB,EAAKge,UAAUpO,UACnB/Q,KACO;AAGRmB,EAAK+f;IAEDC,GAAU,EACVtY,EAAUtD,OACbpE,EAAKigB,UAEA7b,GAAwB,iBAATA,EAAmB,OAAOvF;IAC1CkF,EAAQoG,EAAS/F,EAAKpE,EAAK+B,SAAS6G;GACnB,iBAAV7E,SACHlF;AAGRmB,EAAKua,kBACLva,EAAKiT,UAAU7O,GACfpE,EAAK8Z,SAASgG,GACd9f,EAAKia,QAAQlW,GACb/D,EAAKyZ,eAAe2C,GAA0C,WAAvBpc,EAAK+B,SAASsH,MACrDxK,EAASuF,GACT4b,GAAU;OAIVH,EADmC,mBAAzB7f,EAAK+B,SAAS2F,OACf1H,EAAK+B,SAAS2F,OAAOqO,KAAKzW,KAAMsQ,EAAOlI,GAEvC,EACP1H,EAAK+B,SAAS8G,YAAa+G,GAC3B5P,EAAK+B,SAAS6G,YAAagH,GAIzBoQ,GACJtY,EAAOmY,IAGD,EAMRlI,mBACK3X,EAAOV;AACXU,EAAKga,UAAY,KAEbha,EAAK2Q,SACR3Q,EAAK2a,SAAS3a,EAAK8B,OAGpB9B,EAAK0X,sBACL1X,EAAKyX,eAONA,mBACKzX,EAAWV;AAEfU,EAAKkgB;IAED5H,EAAWtY,EAAKsY,SAEhB9H,EAAWxQ,EAAKwQ;AAEpBxQ,EAAK6N,QAAQV,UAAU+P,OAAO,MAAMld,EAAK+P;ID/vDbvP,ECiwDxB2M,EAAYnN,EAAKyP,QAAQtC;AAE7BA,EAAU+P,OAAO,QAASld,EAAKyQ,WAC/BtD,EAAU+P,OAAO,WAAYld,EAAKqQ,YAClClD,EAAU+P,OAAO,WAAYld,EAAKsQ,YAClCnD,EAAU+P,OAAO,UAAWld,EAAKuQ,WACjCpD,EAAU+P,OAAO,SAAU1M,GAC3BrD,EAAU+P,OAAO,OAAQ5E,GACzBnL,EAAU+P,OAAO,YAAa5E,GAC9BnL,EAAU+P,OAAO,eAAgBld,EAAKyQ,YAAczQ,EAAK0Q,eACzDvD,EAAU+P,OAAO,kBAAmBld,EAAKoQ,QACzCjD,EAAU+P,OAAO,eD5wDW1c,EC4wDkBR,EAAKmC,QD3wDhB,IAA5BiD,OAAO+a,KAAK3f,GAAKb,SC4wDxBwN,EAAU+P,OAAO,YAAald,EAAK8B,MAAMnC,OAAS,GAanDugB,2BACKlgB,EAAOV;GAENU,EAAK4P,MAAMwQ,eAKZ9gB,KAAKgR,aACRtQ,EAAK4P,MAAMwE,UAAW;IAGnBiM,GAAWrgB,EAAK4P,MAAMwQ;AAE1BpgB,EAAKuQ,UAAY8P,EACjBrgB,EAAKuP,cAAc6E,SAAWiM,EAE1B/gB,KAAKgR,aACRtQ,EAAK4P,MAAMwE,UAAYiM,IAUzB/H,gBACmC,OAA3BhZ,KAAKyC,SAASiG,UAAqB1I,KAAKwC,MAAMnC,QAAUL,KAAKyC,SAASiG,SAQ9E0P,oBAAqB4I,EAAoB,QACpCrf,EAAG8C,EAAe/D,EAAOV;GAEzBU,EAAK8P,kBAGR9P,EAAK4P,MAAM4N,iBAAiB,oBAAoBze,SAASwT,KACf,GAArCvS,EAAK8B,MAAMjC,QAAQ0S,EAAOxO,SAC7BwO,EAAOgB,UAAW,EAClBhB,EAAOyJ,gBAAgB,gBAKpB/a,EAAIjB,EAAK8B,MAAMnC,OAAS,EAAGsB,GAAK,EAAGA,IAAK,KAGxCsR;GAFJxO,EAAQ/D,EAAK8B,MAAMb,KAEfsR,EAASvS,EAAKmC,QAAQ4B,GAAOuP,SACpB,OACN6B,EAAQnV,EAAKmC,QAAQ4B,GAAO/D,EAAK+B,SAAS8G,aAAe;AAC/D0J,EAAS3G,EAAO,kBAAoBxB,EAAYrG,GAAS,KAAOqG,EAAY+K,GAAS,aACrFnV,EAAKmC,QAAQ4B,GAAOuP,QAAUf,EAG/BA,EAAOgB,UAAW,EAClBjF,EAAQiE,EAAO,CAACgB,SAAS,SACzBvT,EAAK4P,MAAM2Q,QAAQhO,QAIpBvS,EAAK4P,MAAM7L,MAAQ/D,EAAKwa;AAGrBxa,EAAK2Q,UACH2P,EAAK7F,QACTza,EAAKF,QAAQ,SAAUE,EAAKwa,aAS/BnC,WACKrY,EAAOV;AAEPU,EAAKwQ,UAAYxQ,EAAKoQ,QAAkC,UAAvBpQ,EAAK+B,SAASsH,MAAoBrJ,EAAKsY,WAC5EtY,EAAKoQ,QAAS,EACd9B,EAAQtO,EAAKuP,cAAc,iBAAkB,SAC7CvP,EAAKyX,eACLhL,EAASzM,EAAKwP,SAAS,CAACgR,WAAY,SAAUC,QAAS,UACvDzgB,EAAK4W,mBACLnK,EAASzM,EAAKwP,SAAS,CAACgR,WAAY,UAAWC,QAAS,UACxDzgB,EAAKmY,QACLnY,EAAKF,QAAQ,gBAAiBE,EAAKwP,WAMpC0J,MAAMqB,GAAgB,OACjBva,EAAOV,KACPQ,EAAUE,EAAKoQ;AAGfmK,GAAkBva,EAAKua,kBAEA,WAAvBva,EAAK+B,SAASsH,MAAqBrJ,EAAK8B,MAAMnC,SACjDK,EAAKqb,YAKArb,EAAKmQ,SACTnQ,EAAKiX,QAIPjX,EAAKoQ,QAAS,EACd9B,EAAQtO,EAAKuP,cAAc,iBAAkB,UAC7C9C,EAASzM,EAAKwP,SAAS,CAACiR,QAAS,SACjCzgB,EAAKqa,oBACLra,EAAKyX,eAED3X,GAASE,EAAKF,QAAQ,iBAAkBE,EAAKwP,UAQlDoH,sBAEsC,SAAjCtX,KAAKyC,SAAS6H,oBAId8W,EAAYphB,KAAKmQ,QACjBkR,EAASD,EAAQ5E,wBACjBC,EAAS2E,EAAQ7E,aAAe8E,EAAK5E,IAAOrK,OAAOkP,QACnDC,EAASF,EAAKE,KAAOnP,OAAOoP;AAGhCrU,EAASnN,KAAKkQ,SAAS,CACtB6F,MAAQsL,EAAKtL,MAAQ,KACrB0G,IAAQA,EAAM,KACd8E,KAAQA,EAAO,QAUjBnG,MAAMD,OACDza,EAAOV;GAENU,EAAK8B,MAAMnC,YAEZmC,EAAQ9B,EAAKic;IACZ,MAAMtW,KAAQ7D,EAClB6D,EAAK2H;AAGNtN,EAAK8B,MAAQ,GACb9B,EAAKga,UAAY,KACjBha,EAAK8Z,SAAS,GACd9Z,EAAKoY,gBACLpY,EAAK0X,oBAAoB,CAAC+C,OAAQA,IAClCza,EAAKyX,eACLzX,EAAK2Z,YACL3Z,EAAKF,QAAQ,UAQd8f,cAAcpU,OACTxL,EAAOV,KACPwgB,EAAQnK,KAAKoH,IAAI/c,EAAKiR,SAAUjR,EAAK8B,MAAMnC,QAC3CoL,EAAS/K,EAAKwf,QAAUxf,EAAKyP;AAEnB,IAAVqQ,EACH/U,EAAOgT,aAAavS,EAAIT,EAAOkB,YAE/BlB,EAAOgT,aAAavS,EAAIT,EAAO4I,SAASmM,IAGzC9f,EAAK8Z,SAASgG,EAAQ,GAOvBtG,gBAAgBxD,OACX9Q,EAAW6b,EAAWhN,EAAQ+L,EF3hEPlQ,EE4hEvB5P,EAAOV;GAEX4F,EAAa8Q,GJxnEe,IIwnEVA,EAAE8C,SAAwC,EAAI,EAChEiI,EF9hEM,CACNC,OAF2BpR,EE+hEF5P,EAAKuP,eF7hEhB0R,eACdthB,OAASiQ,EAAMsR,aAAetR,EAAMqR,gBEgiEpClN,EAAS,GAEL/T,EAAKqR,YAAY1R,OAAQ,CAG5BmgB,EAAQ5R,EADDF,EAAQhO,EAAKqR,YAAanM,IAG7BA,EAAY,GAAK4a;IAEhB,MAAMna,KAAQ3F,EAAKqR,YACvB0C,EAAOxU,KAAMoG,EAAKkN,QAAQ9O,YAGhB/D,EAAKyQ,WAAoC,WAAvBzQ,EAAK+B,SAASsH,OAAsBrJ,EAAK8B,MAAMnC,SACxEuF,EAAY,GAAyB,IAApB6b,EAAUC,OAAoC,IAArBD,EAAUphB,OACvDoU,EAAOxU,KAAKS,EAAK8B,MAAM9B,EAAKiR,SAAW,IAC7B/L,EAAY,GAAK6b,EAAUC,QAAUhhB,EAAKwY,aAAa7Y,QACjEoU,EAAOxU,KAAKS,EAAK8B,MAAM9B,EAAKiR;IAKzB8C,EAAOpU,QAA6C,mBAA3BK,EAAK+B,SAASof,WAA0E,IAA/CnhB,EAAK+B,SAASof,SAASpL,KAAK/V,EAAK+T,EAAOiC,UACvG;IAGRtL,EAAesL,GAAE,QAGI,IAAV8J,GACV9f,EAAK8Z,SAASgG,GAER/L,EAAOpU,QACbK,EAAKmf,WAAWpL,EAAOqN;OAGxBphB,EAAK2Z,YACL3Z,EAAK4W,mBACL5W,EAAKyZ,gBAAe,IAEb,EAURF,iBAAiBrU,EAAkB8Q,OAC9BuF,EAAKD,EAAa+F,EAAUrhB,EAAOV;AAEnCU,EAAK+P,MAAK7K,IAAc,GACxBlF,EAAKwY,aAAa7Y,SAIlBsL,EAAU+N,EAAuBhD,IAAM/K,EAAU,WAAW+K,IAQ7DqL,GANF/F,EAAgBtb,EAAKkb,cAAchW,IAG7BoW,EAAYnO,UAAUW,SAAS,UAGtB9N,EAAKoZ,YAAYkC,EAAYpW,EAAU,QAFvCoW,EAMLpW,EAAY,EACRlF,EAAKuP,cAAc+R,mBAEnBthB,EAAKuP,cAAclB,0BAK5BgT,EAASlU,UAAUW,SAAS,WAC/B9N,EAAKob,iBAAiBE,GAEvBtb,EAAKmb,mBAAmBkG,IAIhBrhB,EAAKyQ,YAAczQ,EAAKqR,YAAY1R,OAE7CK,EAAK8Z,SAAS9Z,EAAKiR,SAAW/L,IAK9BoW,EAAetb,EAAKkb,cAAchW,MAEjCqW,EAAMrN,EAAUoN,GAChBtb,EAAK8Z,SAAS5U,EAAY,EAAIqW,EAAM,EAAGA,GACvCvb,EAAKoY,kBAUR8C,cAAchW,OAEToW,EAAchc,KAAKmQ,QAAQvD,cAAc;GACzCoP,SACIA;IAIJvW,EAASzF,KAAKmQ,QAAQ+N,iBAAiB;OACvCzY,EACIiJ,EAAQjJ,EAAOG,UAaxB4U,SAASyH,OACJvhB,EAAOV;AAEgB,WAAvBU,EAAK+B,SAASsH,MAAqBrJ,EAAK+B,SAAS8H,aACpD0X,EAAUvhB,EAAK8B,MAAMnC,QAErB4hB,EAAU5L,KAAKC,IAAI,EAAGD,KAAKoH,IAAI/c,EAAK8B,MAAMnC,OAAQ4hB,MAEnCvhB,EAAKiR,UAAajR,EAAK0f,WAErC1f,EAAKic,kBAAkBld,SAAQ,CAAC8U,EAAMwI,KACjCA,EAAIkF,EACPvhB,EAAKuP,cAAcgI,sBAAsB,cAAe1D,GAExD7T,EAAKyP,QAAQ7I,YAAaiN,MAM9B7T,EAAKiR,SAAWsQ,EAOjBtF,yBACQ5Y,MAAMme,KAAMliB,KAAKmQ,QAAQgS,uBAAuBniB,KAAKyC,SAAS2H,YAOtEqW,YACM7G,aACA1I,UAAW,OACXiH,eAMNwI,cACMzP,UAAW,OACXiH,eAONG,cACK5X,EAAOV;AACXU,EAAK4P,MAAMyD,UAAc,EACzBrT,EAAKuP,cAAc8D,UAAY,EAC/BrT,EAAKuP,cAAcM,UAAa,EAChC7P,EAAKqQ,YAAiB,EACtBrQ,EAAK+f,OAON2B,aACK1hB,EAAOV;AACXU,EAAK4P,MAAMyD,UAAc,EACzBrT,EAAKuP,cAAc8D,UAAY,EAC/BrT,EAAKuP,cAAcM,SAAY7P,EAAK6P,SACpC7P,EAAKqQ,YAAiB,EACtBrQ,EAAKigB,SAQN0B,cACK3hB,EAAOV,KACP+X,EAAiBrX,EAAKqX;AAE1BrX,EAAKF,QAAQ,WACbE,EAAKR,MACLQ,EAAK6N,QAAQP,SACbtN,EAAKwP,SAASlC,SAEdtN,EAAK4P,MAAM5D,UAAYqL,EAAerL,UACtChM,EAAK4P,MAAMC,SAAWwH,EAAexH,SAErCxC,EAAcrN,EAAK4P,MAAM,eACzB5P,EAAK4P,MAAMoM,gBAAgB,UAC3Bhc,EAAK4P,MAAMwE,SAAW9U,KAAKgR,WAE3BtQ,EAAKiQ,kBAEEjQ,EAAK4P,MAAM6B,UAQnBvH,OAAQ0X,EAAqBxd,OACxBL,EAAWwY,EACXvc,EAAOV;IAEU,WAAjBsiB,GAA8C,SAAjBA,KAChC7d,EAAQoG,EAAS/F,EAAKpE,EAAK+B,SAAS6G,aAGhC5I,EAAKwR,YAAYoQ,GAActgB,eAAeyC,WAC1C/D,EAAKwR,YAAYoQ,GAAc7d;IAKpC8Z,EAAW7d,EAAK+B,SAASmI,OAAO0X;MACZ,mBAAb/D,EACH,MAIRtB,EAAOsB,EAAS9H,KAAKzW,KAAM8E,EAAMgG,KAMjCmS,EAAO3Q,EAAQ2Q,GAGM,WAAjBqF,GAA8C,kBAAjBA,EAE5Bxd,EAAKpE,EAAK+B,SAAS+G,eACtBwF,EAAQiO,EAAK,iBAAiB,SAE9BjO,EAAQiO,EAAK,mBAAoB,KAGR,aAAjBqF,IAETtT,EAAQiO,EAAK,cADRnY,EAAK8O,MAAMlT,EAAK+B,SAASiH,sBAE3B5E,EAAK8O,MAAMlT,EAAK+B,SAAS+G,gBAC3BwF,EAAQiO,EAAK,iBAAkB,MAIZ,WAAjBqF,GAA8C,SAAjBA,IAChCtT,EAAQiO,EAAK,cAAexY,IAIP,SAAjB6d,EACHhV,EAAW2P,EAAKvc,EAAK+B,SAAS2H,YAE9BkD,EAAW2P,EAAKvc,EAAK+B,SAAS4H,aAC9B2E,EAAQiO,EAAK,CACZvH,KAAK,SACLhQ,GAAGZ,EAAKga,OAKVpe,EAAKwR,YAAYoQ,GAAc7d,GAASwY,GAIlCA,GA1CCA,EAmDTiC,WAAYoD,QAGU,IAAjBA,EAFOtiB,KAGLkS,YAAc,MAAQ,UAAY,IAH7BlS,KAKLkS,YAAYoQ,GAAgB,GASnC5D,UAAWpO,UACHtQ,KAAKyC,SAAS2F,QAAUkI,EAAMjQ,QAAWL,KAAKyC,SAAS6F,aAAkCmO,KAAKzW,KAAMsQ,GAW5GiS,KAAMC,EAAaC,EAAeC,OAC7BhiB,EAAOV,KACP2iB,EAAcjiB,EAAK+hB;AAGvB/hB,EAAK+hB,GAAU,eACVhd,EAAQmd;MAEC,UAATJ,IACH/c,EAASkd,EAAYhiB,MAAMD,EAAMN,YAGlCwiB,EAAaF,EAAO/hB,MAAMD,EAAMN,WAEnB,YAAToiB,EACII,GAGK,WAATJ,IACH/c,EAASkd,EAAYhiB,MAAMD,EAAMN,YAG3BqF;"}