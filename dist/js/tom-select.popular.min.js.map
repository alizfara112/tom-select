{"version":3,"file":"tom-select.popular.min.js","sources":["../../src/contrib/microevent.js","../../node_modules/@orchidjs/sifter/dist/esm/diacritics.js","../../node_modules/@orchidjs/sifter/dist/esm/utils.js","../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","../../src/contrib/highlight.js","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/vanilla.ts","../../src/tom-select.ts","../../src/contrib/microplugin.js","../../src/getSettings.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events,callback){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events, fct){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events, fct){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events, ...args){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self,args );\n\t\t\t}\n\t\t});\n\t}\n};\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\n\nvar code_points = [[67, 67], [160, 160], [192, 438], [452, 652], [961, 961], [1019, 1019], [1083, 1083], [1281, 1289], [1984, 1984], [5095, 5095], [7429, 7441], [7545, 7549], [7680, 7935], [8580, 8580], [9398, 9449], [11360, 11391], [42792, 42793], [42802, 42851], [42873, 42897], [42912, 42922], [64256, 64260], [65313, 65338], [65345, 65370]];\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\n\nfunction asciifold(str) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD').toLowerCase();\n}\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\n\n\nfunction generateDiacritics() {\n  var latin_convert = {\n    'l·': 'l',\n    'ʼn': 'n',\n    'æ': 'ae',\n    'ø': 'o',\n    'aʾ': 'a',\n    'dž': 'dz'\n  };\n  var diacritics = {}; //var no_latin\t= [];\n\n  code_points.forEach(code_range => {\n    for (let i = code_range[0]; i <= code_range[1]; i++) {\n      let diacritic = String.fromCharCode(i);\n      let latin = diacritic.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD');\n\n      if (latin == diacritic) {\n        //no_latin.push(diacritic);\n        continue;\n      }\n\n      latin = latin.toLowerCase();\n\n      if (latin in latin_convert) {\n        latin = latin_convert[latin];\n      }\n\n      if (!(latin in diacritics)) {\n        diacritics[latin] = latin + latin.toUpperCase();\n      }\n\n      diacritics[latin] += diacritic;\n    }\n  }); //console.log('no_latin',JSON.stringify(no_latin));\n\n  return diacritics;\n}\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\n\nvar diacritics = null;\nfunction diacriticRegexPoints(regex) {\n  if (diacritics === null) {\n    diacritics = generateDiacritics();\n  }\n\n  for (let latin in diacritics) {\n    if (diacritics.hasOwnProperty(latin)) {\n      regex = regex.replace(new RegExp(latin, 'g'), '[' + diacritics[latin] + ']');\n    }\n  }\n\n  return regex;\n}\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * rollup will bundle this function (and the DIACRITICS constant) unless commented out\n *\nvar diacriticRegex = (function() {\n\n\tvar list = [];\n\tfor( let letter in DIACRITICS ){\n\n\t\tif( letter.toLowerCase() != letter && letter.toLowerCase() in DIACRITICS ){\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( DIACRITICS.hasOwnProperty(letter) ){\n\n\t\t\tvar replace = letter + DIACRITICS[letter];\n\t\t\tif( letter.toUpperCase() in DIACRITICS ){\n\t\t\t\treplace += letter.toUpperCase() + DIACRITICS[letter.toUpperCase()];\n\t\t\t}\n\n\t\t\tlist.push({let:letter,pat:'['+replace+']'});\n\t\t}\n\t}\n\n\treturn function(regex:string):string{\n\t\tlist.forEach((item)=>{\n\t\t\tregex = regex.replace( new RegExp(item.let,'g'),item.pat);\n\t\t});\n\t\treturn regex;\n\t}\n})();\n*/\n\nexport { asciifold, diacriticRegexPoints, generateDiacritics };\n//# sourceMappingURL=diacritics.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from './diacritics.js';\n\n// @ts-ignore\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nfunction getAttr(obj, name) {\n  if (!obj) return;\n  return obj[name];\n}\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nfunction getAttrNesting(obj, name) {\n  if (!obj) return;\n  var names = name.split(\".\");\n\n  while (names.length && (obj = obj[names.shift()]));\n\n  return obj;\n}\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n * @param {object} token\n * @return {number}\n */\n\nfunction scoreValue(value, token, weight) {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n}\nfunction escape_regex(str) {\n  return (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nfunction propToArray(obj, key) {\n  var value = obj[key];\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n}\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n * @param {array|object} object\n */\n\nfunction iterate(object, callback) {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n}\nfunction cmp(a, b) {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n}\n\nexport { cmp, escape_regex, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { escape_regex, iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nimport { diacriticRegexPoints, asciifold } from './diacritics.js';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\nclass Sifter {\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   * @constructor\n   * @param {array|object} items\n   * @param {object} items\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        regex = escape_regex(word);\n\n        if (this.settings.diacritics) {\n          regex = diacriticRegexPoints(regex);\n        }\n\n        if (respect_word_boundaries) regex = \"\\\\b\" + regex;\n        regex = new RegExp(regex, 'i');\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {function}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     * @param {TToken} token\n     * @param {object} data\n     * @return {number}\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field]);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var i = 0,\n            score,\n            sum = 0;\n\n        for (; i < token_count; i++) {\n          score = scoreObject(tokens[i], data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var i, n, sort_fld, sort_flds_count, multiplier, implicit_score;\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty || options.sort,\n          sort_flds = [],\n          multipliers = [];\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     * @param  {string} name\n     * @param  {object} result\n     * @return {string}\n     */\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (i = 0, n = sort.length; i < n; i++) {\n        if (search.query || sort[i].field !== '$score') {\n          sort_flds.push(sort[i]);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (i = 0, n = sort_flds.length; i < n; i++) {\n        if (sort_flds[i].field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      }\n    } else {\n      for (i = 0, n = sort_flds.length; i < n; i++) {\n        if (sort_flds[i].field === '$score') {\n          sort_flds.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    for (i = 0, n = sort_flds.length; i < n; i++) {\n      multipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n    } // build function\n\n\n    sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    } else if (sort_flds_count === 1) {\n      sort_fld = sort_flds[0].field;\n      multiplier = multipliers[0];\n      return function (a, b) {\n        return multiplier * cmp(get_field(sort_fld, a), get_field(sort_fld, b));\n      };\n    } else {\n      return function (a, b) {\n        var i, result, field;\n\n        for (i = 0; i < sort_flds_count; i++) {\n          field = sort_flds[i].field;\n          result = multipliers[i] * cmp(get_field(field, a), get_field(field, b));\n          if (result) return result;\n        }\n\n        return 0;\n      };\n    }\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n\n      if (Array.isArray(options.fields) && typeof options.fields[0] !== 'object') {\n        var fields = [];\n        options.fields.forEach(fld_name => {\n          fields.push({\n            field: fld_name\n          });\n        });\n        options.fields = fields;\n      }\n\n      options.fields.forEach(field_params => {\n        weights[field_params.field] = 'weight' in field_params ? field_params.weight : 1;\n      });\n    }\n\n    query = asciifold(query + '').toLowerCase().trim();\n    return {\n      options: options,\n      query: query,\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    var fn_sort;\n    var fn_score;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (item, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    fn_sort = self._getSortFunction(search);\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport default Sifter;\n//# sourceMappingURL=sifter.js.map\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nexport function highlight(element, regex) {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\tvar highlight = function(node) {\n\t\tvar skip = 0;\n\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\tif (node.nodeType === 3) {\n\t\t\tvar pos = node.data.search(regex);\n\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\tspannode.className = 'highlight';\n\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\tskip = 1;\n\n\t\t\t}\n\t\t}\n\t\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t\treturn skip;\n\t};\n\n\thighlight( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport function removeHighlight(el) {\n\tvar elements = document.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el, i){\n\t\tvar parent = el.parentNode;\n\t\tparent.replaceChild(el.firstChild, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport function hash_key(value:string):string|null {\n\tif (typeof value === 'undefined' || value === null) return null;\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport function escape_html(str:string):string {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport function loadDebounce(fn,delay:number){\n\tvar timeout: ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:() => void) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t}\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n}\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport function debounce_events( self:TomSelect, types:string[], fn:() => void ) {\n\tvar type;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport function getSelection(input:HTMLInputElement):{ start: number; length: number } {\n\treturn {\n\t\tstart\t: input.selectionStart,\n\t\tlength\t: input.selectionEnd - input.selectionStart,\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport function preventDefault(evt?:Event, stop:boolean=false):void{\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport function addEvent(target:EventTarget, type:string, callback:EventListener, options?:object):void{\n\ttarget.addEventListener(type,callback,options);\n}\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport function isKeyDown( key_name:keyof (KeyboardEvent|MouseEvent), evt:KeyboardEvent|MouseEvent ){\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport function getId(el:Element,id:string){\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n}\n","\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport function getDom( query:any ):HTMLElement{\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport function escapeQuery(query:string):string{\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport function triggerEvent( dom_el:HTMLElement, event_name:string ):void{\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport function applyCSS( dom_el:HTMLElement, css:{ [key: string]: string|number }):void{\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport function addClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export function removeClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport function classesArray(args:string[]|string[][]):string[]{\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport function castAsArray(arg:any):Array<any>{\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport function parentMatch( target:HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void{\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * < 0 - left (first)\n *\n */\nexport function getTail( list:Array<any>|NodeList, direction:number ):any{\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport function isEmptyObject(obj:object):boolean{\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport function nodeIndex( el:Element, amongst?:string ):number{\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport function setAttr(el:Element,attrs:{ [key: string]: string }){\n\tfor( const attr in attrs ){\n\t\tel.setAttribute(attr, attrs[attr]);\n\t}\n}\n","\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from '@orchidjs/sifter/dist/esm/sifter.js';\nimport { TomSettings } from './types/settings';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreBlur\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t: ReturnType<Sifter['search']> = null;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: HTMLElement = null;\n\tpublic activeItems\t\t\t\t: HTMLElement[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {'item':{[key:string]:HTMLElement},'option':{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof this.settings.hidePlaceholder !== 'boolean' ){\n\t\t\tthis.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\t\tthis.setup();\n\t}\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n\t/**\n\t * Creates all elements and sets up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\n\t\tvar self = this;\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar input\t\t\t\t\t= self.input;\n\t\tvar control_id: string;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId: string\t\t= self.inputId +'-ts-dropdown';\n\n\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\twrapper.append(control);\n\n\n\t\tdropdown\t\t\t= self.render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t\tdropdown_content\t= getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tdropdown.append(dropdown_content);\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\t\tsetAttr(control_input,{\n\t\t\trole:'combobox',\n\t\t\thaspopup:'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tcontrol_id = getId(control_input,self.inputId + '-tomselected');\n\n\t\tlet query = \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tlet label = document.querySelector(query);\n\t\tif( label ){\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tlet label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\n\t\tself.control\t\t\t= control;\n\t\tself.control_input\t\t= control_input;\n\t\tself.wrapper\t\t\t= wrapper;\n\t\tself.dropdown\t\t\t= dropdown;\n\t\tself.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ){\n\t\t\t\treturn self.onOptionHover( e as MouseEvent, target_match );\n\t\t\t}\n\t\t}, {capture:true});\n\n\t\taddEvent(control,'mousedown', (evt) => {\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\tif (evt.target == control_input) {\n\t\t\t\tself.clearActiveItems();\n\t\t\t\tevt.stopPropagation();\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match ){\n\t\t\t\treturn self.onItemSelect(evt as MouseEvent, target_match);\n\t\t\t}\n\t\t\treturn self.onMouseDown(evt as MouseEvent);\n\t\t});\n\n\t\taddEvent(control,'click', (e) => self.onClick(e as KeyboardEvent) );\n\n\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t(e) => self.onBlur(e as MouseEvent) );\n\t\taddEvent(control_input,'focus',\t\t(e) => { self.ignoreBlur = false; self.onFocus(e as MouseEvent) });\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\t// clicking anywhere in the control should not close the dropdown\n\t\t// clicking on an option should selectit\n\t\tvar doc_mousedown = (e:MouseEvent) => {\n\n\t\t\t// if dropdownParent is set, options may not be within self.wrapper\n\t\t\tvar option = parentMatch(e.target as HTMLElement, '[data-selectable]',self.dropdown);\n\n\t\t\t// outside of this instance\n\t\t\tif( !option && !self.wrapper.contains(e.target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpreventDefault(e,true);\n\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( e, option );\n\t\t\t}\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown',doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tself._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tsetAttr(input,{\thidden:'hidden'});\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\n\t\tself.setValue(settings.items);\n\t\tdelete settings.items;\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.refreshState();\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':(data:TomOption,escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':(data:TomOption,escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick(e:MouseEvent|KeyboardEvent) {\n\t\tvar self = this;\n\n\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t// is ignored unless invoked within a click event)\n\t\t// also necessary to reopen a dropdown that has been closed by\n\t\t// closeAfterSelect\n\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\tself.focus();\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a mouse down event.\n\t *\n\t */\n\tonMouseDown(e:MouseEvent|KeyboardEvent):boolean {\n\t\tvar self = this;\n\n\n\t\tif (self.isFocused) {\n\t\t\tif (self.settings.mode !== 'single') {\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t\tself.open();\n\t\t\treturn false;\n\t\t} else {\n\t\t\t// give control focus\n\t\t\tsetTimeout(() => self.focus(), 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// doc_src select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.isOpen && self.activeOption) {\n\t\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.tab_key = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.setActiveItem();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\n\t\tif (!self.ignoreBlur && document.activeElement === self.dropdown_content) {\n\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\tself.ignoreBlur = true;\n\t\t\tself.onFocus(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t * @deprecated v1.3\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){}\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.settings.hideSelected && evt.type && /mouse/.test(evt.type)) {\n\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:HTMLElement ):boolean{\n\t\tvar self = this;\n\n\t\tif (self.isLocked) return;\n\t\tif (self.settings.mode === 'multi') {\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t}\n\t}\n\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\n\t\tvar self = this;\n\t\tvar fn = self.settings.load;\n\t\tif (!fn) return;\n\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tfn.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback(options:TomOption[], optgroups:TomOption[]){\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\t/**\n\t * @deprecated 1.1\n\t *\n\t */\n\tonSearchChange(value:string):void {\n\t\tthis.load(value);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:HTMLElement, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'mousedown' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as HTMLElement;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'mousedown' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:HTMLElement ){\n\n\t\tvar last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tif( this.activeItems.indexOf(item) == -1 ){\n\t\t\tthis.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:HTMLElement ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:HTMLElement ){\n\t\tvar height_menu, height_item, y;\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\n\t\theight_menu\t\t= this.dropdown_content.clientHeight;\n\t\tlet scrollTop\t= this.dropdown_content.scrollTop || 0;\n\n\t\theight_item\t\t= this.activeOption.offsetHeight;\n\t\ty\t\t\t\t= this.activeOption.getBoundingClientRect().top - this.dropdown_content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.dropdown_content.scrollTop = y - height_menu + height_item;\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.dropdown_content.scrollTop = y;\n\t\t}\n\t}\n\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tthis.activeOption.removeAttribute('aria-selected');\n\t\t}\n\t\tthis.activeOption = null;\n\t\tthis.control_input.removeAttribute('aria-activedescendant');\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( self.settings.controlInput ) return;\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\taddClasses(self.wrapper,'input-hidden');\n\t\t}else{\n\t\t\tself.isInputHidden = false;\n\t\t\tremoveClasses(self.wrapper,'input-hidden');\n\t\t}\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur(null);\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar settings = self.settings;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif (settings.score) {\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif (settings.hideSelected) {\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, groups_order, optgroup, optgroups, html, has_create_option;\n\t\tvar active, create;\n\t\tvar groups: {[key:string]:DocumentFragment};\n\n\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_before_hash\t\t= self.activeOption && hash_key(self.activeOption.dataset.value);\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tgroups = {};\n\t\tgroups_order = [];\n\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element, don't re-render if we\n\t\t\tlet option\t\t\t= self.options[results.items[i].id];\n\t\t\tlet opt_value\t\t= hash_key(option[self.settings.valueField]);\n\t\t\tlet option_el\t\t= self.getOption(opt_value);\n\t\t\tif( !option_el ){\n\t\t\t\toption_el = self.render('option', option);\n\t\t\t}\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// a child could only have one parent, so if you have more parents clone the child\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t\toption_el.removeAttribute('aria-selected');\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tgroup_options.append(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\tgroup_options.append(groups[optgroup]);\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\thtml.append(group_html);\n\n\t\t\t} else {\n\t\t\t\thtml.append(groups[optgroup]);\n\t\t\t}\n\t\t}\n\n\t\tself.dropdown_content.innerHTML = '';\n\t\tself.dropdown_content.append(html);\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( self.dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( self.dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:string) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tself.dropdown_content.insertBefore(content, self.dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tactive = active_before_hash && self.getOption(active_before_hash);\n\n\t\t\t\tif( !active || !self.dropdown_content.contains(active)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else{\n\t\t\t\tactive = create;\n\t\t\t}\n\n\t\t\tself.setActiveOption(active);\n\t\t\tif( triggerDropdown && !self.isOpen ){ self.open(); }\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we wan't the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\n\t\tdata.$order\t\t\t= data.$order || ++this.order;\n\t\tdata.$id\t\t\t= this.inputId + '-opt-' + data.$order;\n\t\tthis.options[key]\t= data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tvar self = this;\n\t\tvar item, item_new;\n\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\n\t\tvalue     = hash_key(value);\n\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif (value === null) return;\n\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\torder_old = self.options[value].$order;\n\n\t\t// update references\n\t\tif (value_new !== value) {\n\t\t\tdelete self.options[value];\n\t\t\tindex_item = self.items.indexOf(value);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\t\t}\n\t\tdata.$order = data.$order || order_old;\n\t\tself.options[value_new] = data;\n\n\t\t// invalidate render cache\n\t\tcache_items = self.renderCache['item'];\n\t\tcache_options = self.renderCache['option'];\n\n\t\tif (cache_items) {\n\t\t\tdelete cache_items[value];\n\t\t\tdelete cache_items[value_new];\n\t\t}\n\t\tif (cache_options) {\n\t\t\tdelete cache_options[value];\n\t\t\tdelete cache_options[value_new];\n\t\t}\n\n\t\t// update the item if it's selected\n\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\titem\t\t= self.getItem(value);\n\t\t\titem_new\t= self.render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\titem.parentNode.insertBefore(item_new, item);\n\t\t\titem.remove();\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\n\t\t// update dropdown contents\n\t\tif (self.isOpen) {\n\t\t\tself.refreshOptions(false);\n\t\t}\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tvar self = this;\n\t\tvalue = hash_key(value);\n\n\t\tvar cache_items = self.renderCache['item'];\n\t\tvar cache_options = self.renderCache['option'];\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t * @returns {object}\n\t */\n\tgetOption(value:string):HTMLElement {\n\n\t\t// cached ?\n\t\tif( this.renderCache['option'].hasOwnProperty(value) ){\n\t\t\treturn this.renderCache['option'][value];\n\t\t}\n\n\t\t// from existing dropdown menu dom\n\t\treturn this.getElementWithValue(value, this.selectable());\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|void{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the first element with a \"data-value\" attribute\n\t * that matches the given value.\n\t *\n\t */\n\tgetElementWithValue(value:string, els:HTMLCollection|NodeList|HTMLElement[]):HTMLElement {\n\t\tvalue = hash_key(value);\n\n\t\tif (value !== null) {\n\t\t\tfor( const node of els ){\n\t\t\t\tlet el = node as HTMLElement;\n\t\t\t\tif (el.getAttribute('data-value') === value) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(value:string):HTMLElement {\n\t\treturn this.getElementWithValue(value, this.control.children);\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\t\tself.buffer = document.createDocumentFragment();\n\n\t\tfor( const child of self.control.children ){\n\t\t\tself.buffer.appendChild(child);\n\t\t}\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\n\t\tvar control = self.control;\n\t\tcontrol.insertBefore(self.buffer, control.firstChild);\n\n\t\tself.buffer = null;\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item;\n\t\t\tvar self = this;\n\t\t\tvar inputMode = self.settings.mode;\n\t\t\tvar wasFull;\n\t\t\tvalue = hash_key(value);\n\n\t\t\tif( self.items.indexOf(value) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self.render('item', self.options[value]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tlet option = self.getOption(value);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', value, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( value:string, silent?:boolean ){\n\t\tvar i, idx, self = this;\n\n\t\tvar item\t= self.getItem(value);\n\n\t\tif( !item ) return;\n\n\t\tvalue\t\t= hash_key(item.dataset.value);\n\t\ti\t\t\t= self.items.indexOf(value);\n\n\t\tif (i !== -1) {\n\t\t\titem.remove();\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\t\tself.activeItems.splice(idx, 1);\n\t\t\t\tremoveClasses(item,'active');\n\t\t\t}\n\n\t\t\tself.items.splice(i, 1);\n\t\t\tself.lastQuery = null;\n\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\tself.removeOption(value, silent);\n\t\t\t}\n\n\t\t\tif (i < self.caretPos) {\n\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t}\n\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.positionDropdown();\n\t\t\tself.trigger('item_remove', value, item);\n\t\t}\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input?:string, triggerDropdown:boolean=true, callback?:TomCreateCallback ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (typeof callback !== 'function') callback = () => {};\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data:TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tvar i, value, option, self = this;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\t// remove selected attribute from options whose values are not in self.items\n\t\t\tself.input.querySelectorAll('option[selected]').forEach((option:HTMLOptionElement) => {\n\t\t\t\tif( self.items.indexOf(option.value) == -1 ){\n\t\t\t\t\toption.selected = false;\n\t\t\t\t\toption.removeAttribute('selected');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\tfor( i = self.items.length - 1; i >= 0; i-- ){\n\t\t\t\tvalue = self.items[i];\n\n\t\t\t\tvar option = self.options[value].$option;\n\t\t\t\tif( !option ){\n\t\t\t\t\tconst label = self.options[value][self.settings.labelField] || '';\n\t\t\t\t\toption = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t\t\t\t\tself.options[value].$option = option;\n\t\t\t\t}\n\n\t\t\t\toption.selected = true;\n\t\t\t\tsetAttr(option,{selected:'true'});\n\t\t\t\tself.input.prepend(option);\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #selectize.js#1164\n\t\t\t\tif( !self.tab_key ){\n\t\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tself.clearActiveOption();\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\titem.remove();\n\t\t}\n\n\t\tself.items = [];\n\t\tself.lastQuery = null;\n\t\tself.setCaret(0);\n\t\tself.setActiveItem();\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.showInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.buffer || self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, values, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tvalues = [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\tvalues.push( item.dataset.value );\n\t\t\t}\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\t\twhile (values.length) {\n\t\t\tself.removeItem(values.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if( self.isFocused && !self.activeItems.length ){\n\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t// move caret before or after selected items\n\t\t}else{\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():HTMLElement[]{\n\t\treturn Array.from( this.control.getElementsByClassName(this.settings.itemClass) ) as HTMLElement[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tself.input.removeAttribute('hidden');\n\t\tself.input.required = this.isRequired;\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:string, data?:any ):null|HTMLElement{\n\t\tvar value, id, html;\n\t\tvar self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\n\t\t\t// pull markup from cache if it exists\n\t\t\tif( self.renderCache[templateName].hasOwnProperty(value) ){\n\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t}\n\n\t\t}\n\n\t\tvar template = self.settings.render[templateName];\n\t\tif( typeof template !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = template.call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ){\n\t\tvar self = this;\n\n\t\tif (templateName === void 0) {\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && input.length && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:()=>any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nexport default function MicroPlugin(Interface){\n\n\tInterface.plugins = {};\n\n\n\treturn class mixin extends Interface{\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name, fn){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\trequire(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomSettings } from './types/settings';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings\t\t\t\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element\t\t= {\n\t\t\t\t\t\t\t\t\t\tplaceholder\t: placeholder,\n\t\t\t\t\t\t\t\t\t\toptions\t\t: [],\n\t\t\t\t\t\t\t\t\t\toptgroups\t: [],\n\t\t\t\t\t\t\t\t\t\titems\t\t: [],\n\t\t\t\t\t\t\t\t\t\tmaxItems\t: null,\n\t\t\t\t\t\t\t\t\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el) => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif (!value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar option_data             = readData(option);\n\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\toptionsMap[value] = option_data;\n\t\t\toptions.push(option_data);\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tvar values, option;\n\n\t\tvar data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tvalues = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\toption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { getDom, setAttr } from '../../vanilla';\nimport { addEvent } from '../../utils';\n\n\nTomSelect.define('dropdown_input',function() {\n\tvar self = this;\n\n\tvar input = self.settings.controlInput || '<input type=\"text\" autocomplete=\"off\" class=\"dropdown-input\" />';\n\tinput = getDom( input );\n\n\tif (self.settings.placeholder) {\n\t\tsetAttr(input,{placeholder:self.settings.placeholder});\n\t}\n\n\tself.settings.controlInput = input;\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('after','setup',()=>{\n\n\t\t// set tabIndex on wrapper\n\t\tsetAttr(self.wrapper,{tabindex:self.input.disabled ? '-1' : self.tabIndex});\n\n\n\t\t// keyboard navigation\n\t\taddEvent(self.wrapper,'keypress',(evt:KeyboardEvent) => {\n\n\t\t\tif( self.control.contains(evt.target) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( self.dropdown.contains(evt.target) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// open dropdown on enter when wrapper is tab-focused\n\t\t\tswitch (evt.keyCode) {\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tself.onClick(evt);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t});\n\n\t\tlet div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.appendChild(input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_backspace_delete', function() {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\n\tthis.hook('instead','deleteSelection',function(){\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.apply(self, arguments);\n\t\t}\n\n\t\treturn false;\n\t});\n\n});\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\n\nTomSelect.define('remove_button',function(options) {\n\n\toptions = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, options);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = function(){\n\n\t\t\tvar rendered = getDom(orig_render_item.apply(self, arguments));\n\n\t\t\tvar close_button = getDom(html);\n\t\t\trendered.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\tvar value = rendered.dataset.value;\n\t\t\t\tself.removeItem(value);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t});\n\n\t\t\treturn rendered;\n\t\t};\n\n\t});\n\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext:(option:TomOption)=>string,\n};\n\nTomSelect.define('restore_on_backspace',function(options:TPluginOptions) {\n\tvar self = this;\n\n\toptions.text = options.text || function(option:TomOption){\n\t\treturn option[self.settings.labelField];\n\t};\n\n\tself.on('item_remove',function(value){\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n});\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","code_points","asciifold","str","normalize","replace","toLowerCase","diacritics","diacriticRegexPoints","regex","latin_convert","l·","ʼn","æ","ø","aʾ","dž","code_range","i","diacritic","String","fromCharCode","latin","toUpperCase","generateDiacritics","hasOwnProperty","RegExp","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","key","Array","isArray","iterate","object","cmp","a","b","Sifter","[object Object]","items","settings","query","respect_word_boundaries","weights","tokens","words","field_regex","Object","keys","map","join","word","field_match","field","match","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","_getSortFunction","sort_fld","sort_flds_count","multiplier","implicit_score","sort","sort_empty","sort_flds","multipliers","get_field","result","id","unshift","direction","optsUser","assign","fld_name","field_params","trim","tokenize","total","nesting","fn_sort","fn_score","item","filter","limit","slice","highlight","element","node","skip","nodeType","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","escape_html","debounce_events","types","fn","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","target","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","el","existing_id","getAttribute","setAttribute","getDom","jquery","HTMLElement","div","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","selector","wrapper","contains","matches","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","attr","instance_i","TomSelect","Interface","initializePlugins","queue","requested","loaded","require","loadPlugin","plugin","Error","MicroPlugin","input_arg","dir","control_input","dropdown","control","dropdown_content","order","input","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","tab_key","isOpen","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreBlur","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","activeOption","activeItems","userOptions","renderCache","tomselect","window","getComputedStyle","getPropertyValue","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","optionsMap","group_count","readData","dataset","json","JSON","parse","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","values","data_raw","opt","init_textbox","getSettings","required","setupOptions","setupCallbacks","setupTemplates","setup","inputMode","classes_plugins","control_id","passive_event","passive","listboxId","append","role","haspopup","escapeQuery","label","for","width","multiple","delimiterEscaped","delay","timeout","load","Math","max","clearTimeout","setTimeout","call","e","target_match","onOptionHover","capture","clearActiveItems","inputState","onItemSelect","onMouseDown","onClick","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","blur","onOptionSelect","win_scroll","removeEventListener","revertSettings","hidden","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","disable","onChange","registerOption","registerOptionGroup","templates","escape","callbacks","focus","setActiveItem","open","isFull","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","constants","selectAll","close","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","activeElement","deactivate","setCaret","parentElement","lastQuery","addItem","getOption","loadCallback","bind","clearActiveOption","onSearchChange","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","height_menu","height_item","y","clientHeight","scrollTop","offsetHeight","getBoundingClientRect","top","removeAttribute","controlChildren","getScoreFunction","getSearchOptions","calculateScore","triggerDropdown","j","k","groups_order","html","has_create_option","active","groups","elements","results","active_before_hash","show_dropdown","min","opt_value","option_el","toggle","includes","createDocumentFragment","$order","group_options","group_html","querySelectorAll","parent","tok","add_template","template","content","insertBefore","canCreate","active_index","selectable","dat","$id","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","removeOption","removeItem","clearOptions","getElementWithValue","all","els","buffer","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","checkValidity","invalid","opts","prepend","visibility","display","context","rect","scrollY","left","scrollX","selection","start","selectionStart","selectionEnd","onDelete","pop","adjacent","nextElementSibling","new_pos","from","getElementsByClassName","enable","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","define","tabindex","orig_deleteSelection","title","orig_render_item","rendered","close_button","text"],"mappings":"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"}