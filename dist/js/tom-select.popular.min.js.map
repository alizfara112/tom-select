{"version":3,"file":"tom-select.popular.min.js","sources":["../../src/contrib/microevent.js","../../src/contrib/sifter.ts","../../src/contrib/highlight.js","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/vanilla.ts","../../src/tom-select.ts","../../src/contrib/microplugin.js","../../src/getSettings.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events,callback){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events, fct){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events, fct){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events, ...args){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self,args );\n\t\t\t}\n\t\t});\n\t}\n};\n","/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TOptions = {\n \tfields: string|string[],\n \tsort: any[],\n \tscore?: ()=>any,\n \tfilter?: boolean,\n \tlimit?: number,\n \tsort_empty?: any,\n \tnesting?: boolean,\n\trespect_word_boundaries?: boolean,\n\tconjunction?: string,\n }\n\n\ntype TPrepareObj = {\n\toptions: TOptions,\n\tquery: string,\n\ttokens: any,\n\ttotal: number,\n\titems: any[]\n}\n\n\n\n// utilities\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nvar cmp = function(a, b) {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(String(a || ''));\n\tb = asciifold(String(b || ''));\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @param  {Boolean} nesting Handle nesting or not\n * @return {Object}          The resolved property value\n */\nvar getattr = function(obj, name, nesting) {\n    if (!obj || !name) return;\n    if (!nesting) return obj[name];\n    var names = name.split(\".\");\n    while(names.length && (obj = obj[names.shift()]));\n    return obj;\n};\n\nvar escape_regex = function(str) {\n\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n};\n\nvar DIACRITICS = {\n\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t'f': '[fƑƒḞḟ]',\n\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t'x': '[xẌẍẊẋχ]',\n\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n};\n\nvar asciifold = (function() {\n\tvar i, n, k, chunk;\n\tvar foreignletters = '';\n\tvar lookup = {};\n\tfor (k in DIACRITICS) {\n\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\tforeignletters += chunk;\n\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t}\n\t\t}\n\t}\n\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\treturn function(str) {\n\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\treturn lookup[foreignletter];\n\t\t}).toLowerCase();\n\t};\n})();\n\n\nexport default class Sifter{\n\n\tpublic items: []|{};\n\tpublic settings: {diacritics:boolean};\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tconstructor(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\ttokenize(query, respect_word_boundaries) {\n\t\tquery = String(query || '').toLowerCase().trim();\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (respect_word_boundaries) regex = \"\\\\b\"+regex\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\titerator(object, callback) {\n\t\tvar iterator;\n\t\tif (Array.isArray(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {function}\n\t */\n\tgetScoreFunction(query:string, options?:TOptions ){\n\t\tvar self, fields, tokens, token_count, nesting, search;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(query, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(search, options:TOptions) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {string}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string|TPrepareObj, options:TOptions):TPrepareObj {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = Object.assign({},options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !Array.isArray(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !Array.isArray(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !Array.isArray(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query, options.respect_word_boundaries),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:TOptions) : TPrepareObj {\n\t\tvar self = this, score, search;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nexport function highlight(element, pattern) {\n\tif (typeof pattern === 'string' && !pattern.length) return;\n\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\n\tvar highlight = function(node) {\n\t\tvar skip = 0;\n\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\tif (node.nodeType === 3) {\n\t\t\tvar pos = node.data.search(regex);\n\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\tspannode.className = 'highlight';\n\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\tskip = 1;\n\n\t\t\t}\n\t\t}\n\t\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t\treturn skip;\n\t};\n\n\thighlight( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport function removeHighlight(el) {\n\tvar elements = document.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el, i){\n\t\tvar parent = el.parentNode;\n\t\tparent.replaceChild(el.firstChild, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport function hash_key(value:string):string|null {\n\tif (typeof value === 'undefined' || value === null) return null;\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport function escape_html(str:string):string {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport function loadDebounce(fn,delay:number){\n\tvar timeout: ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:() => void) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t}\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n}\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport function debounce_events( self:TomSelect, types:string[], fn:() => void ) {\n\tvar type;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport function getSelection(input:HTMLInputElement):{ start: number; length: number } {\n\treturn {\n\t\tstart\t: input.selectionStart,\n\t\tlength\t: input.selectionEnd - input.selectionStart,\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport function preventDefault(evt?:Event, stop:boolean=false):void{\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport function addEvent(target:EventTarget, type:string, callback:EventListener, options?:object):void{\n\ttarget.addEventListener(type,callback,options);\n}\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport function isKeyDown( key_name:keyof (KeyboardEvent|MouseEvent), evt:KeyboardEvent|MouseEvent ){\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport function getId(el:Element,id:string){\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n}\n","\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport function getDom( query:any ):HTMLElement{\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport function escapeQuery(query:string):string{\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport function triggerEvent( dom_el:HTMLElement, event_name:string ):void{\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport function applyCSS( dom_el:HTMLElement, css:{ [key: string]: string|number }):void{\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport function addClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export function removeClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport function classesArray(args:string[]|string[][]):string[]{\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport function castAsArray(arg:any):Array<any>{\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport function parentMatch( target:HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void{\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * < 0 - left (first)\n *\n */\nexport function getTail( list:Array<any>|NodeList, direction:number ):any{\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport function isEmptyObject(obj:object):boolean{\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport function nodeIndex( el:Element, amongst?:string ):number{\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport function setAttr(el:Element,attrs:{ [key: string]: string }){\n\tfor( const attr in attrs ){\n\t\tel.setAttribute(attr, attrs[attr]);\n\t}\n}\n","\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from './contrib/sifter.js';\nimport { TomSettings } from './types/settings';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreBlur\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t: ReturnType<Sifter['search']> = null;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: HTMLElement = null;\n\tpublic activeItems\t\t\t\t: HTMLElement[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tprivate options_i\t\t\t\t: number = 0;\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {'item':{[key:string]:HTMLElement},'option':{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof this.settings.hidePlaceholder !== 'boolean' ){\n\t\t\tthis.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\t\tthis.setup();\n\t}\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n\t/**\n\t * Creates all elements and sets up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\n\t\tvar self = this;\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar input\t\t\t\t\t= self.input;\n\t\tvar control_id: string;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId: string\t\t= self.inputId +'-ts-dropdown';\n\n\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\twrapper.append(control);\n\n\n\t\tdropdown\t\t\t= self.render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t\tdropdown_content\t= getDom(`<div style=\"scroll-behavior: smooth;\" role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tdropdown.append(dropdown_content);\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\t\tsetAttr(control_input,{\n\t\t\trole:'combobox',\n\t\t\thaspopup:'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tcontrol_id = getId(control_input,self.inputId + '-tomselected');\n\n\t\tlet query = \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tlet label = document.querySelector(query);\n\t\tif( label ){\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tlet label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t}\n\n\n\n\t\tself.control\t\t\t= control;\n\t\tself.control_input\t\t= control_input;\n\t\tself.wrapper\t\t\t= wrapper;\n\t\tself.dropdown\t\t\t= dropdown;\n\t\tself.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ){\n\t\t\t\treturn self.onOptionHover( e as MouseEvent, target_match );\n\t\t\t}\n\t\t}, {capture:true});\n\n\t\taddEvent(control,'mousedown', (evt) => {\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\tif (evt.target == control_input) {\n\t\t\t\tself.clearActiveItems();\n\t\t\t\tevt.stopPropagation();\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match ){\n\t\t\t\treturn self.onItemSelect(evt as MouseEvent, target_match);\n\t\t\t}\n\t\t\treturn self.onMouseDown(evt as MouseEvent);\n\t\t});\n\n\t\taddEvent(control,'click', (e) => self.onClick(e as KeyboardEvent) );\n\n\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t(e) => self.onBlur(e as MouseEvent) );\n\t\taddEvent(control_input,'focus',\t\t(e) => { self.ignoreBlur = false; self.onFocus(e as MouseEvent) });\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\t// clicking anywhere in the control should not close the dropdown\n\t\t// clicking on an option should selectit\n\t\tvar doc_mousedown = (e:MouseEvent) => {\n\n\t\t\t// if dropdownParent is set, options may not be within self.wrapper\n\t\t\tvar option = parentMatch(e.target as HTMLElement, '[data-selectable]',self.dropdown);\n\n\t\t\t// outside of this instance\n\t\t\tif( !option && !self.wrapper.contains(e.target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpreventDefault(e,true);\n\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( e, option );\n\t\t\t}\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown',doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tself._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tsetAttr(input,{\thidden:'hidden'});\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\n\t\tself.setValue(settings.items);\n\t\tdelete settings.items;\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.refreshState();\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':(data:TomOption,escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':(data:TomOption,escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div style=\"display:none\"></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick(e:MouseEvent|KeyboardEvent) {\n\t\tvar self = this;\n\n\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t// is ignored unless invoked within a click event)\n\t\t// also necessary to reopen a dropdown that has been closed by\n\t\t// closeAfterSelect\n\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\tself.focus();\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a mouse down event.\n\t *\n\t */\n\tonMouseDown(e:MouseEvent|KeyboardEvent):boolean {\n\t\tvar self = this;\n\n\n\t\tif (self.isFocused) {\n\t\t\tif (self.settings.mode !== 'single') {\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t\tself.open();\n\t\t\treturn false;\n\t\t} else {\n\t\t\t// give control focus\n\t\t\tsetTimeout(() => self.focus(), 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// doc_src select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.activeOption) {\n\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\tself.tab_key = false;\n\t\t\t\t}\n\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.setActiveItem();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\n\t\tif (!self.ignoreBlur && document.activeElement === self.dropdown_content) {\n\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\tself.ignoreBlur = true;\n\t\t\tself.onFocus(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t * @deprecated v1.3\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){}\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.settings.hideSelected && evt.type && /mouse/.test(evt.type)) {\n\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:HTMLElement ):boolean{\n\t\tvar self = this;\n\n\t\tif (self.isLocked) return;\n\t\tif (self.settings.mode === 'multi') {\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t}\n\t}\n\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\n\t\tvar self = this;\n\t\tvar fn = self.settings.load;\n\t\tif (!fn) return;\n\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\n\t\tfn.call(self, value, function(options:TomOption[], optgroups:TomOption[]){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tself.lastQuery = null;\n\n\t\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\t\tself.setupOptions(options,optgroups);\n\n\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\t\tif (!self.loading) {\n\t\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t\t}\n\n\t\t\tself.trigger('load', options, optgroups);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.1\n\t *\n\t */\n\tonSearchChange(value:string):void {\n\t\tthis.load(value);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:HTMLElement, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'mousedown' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as HTMLElement;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'mousedown' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:HTMLElement ){\n\n\t\tvar last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tif( this.activeItems.indexOf(item) == -1 ){\n\t\t\tthis.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:HTMLElement ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:HTMLElement ){\n\t\tvar height_menu, height_item, y;\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\n\t\theight_menu\t\t= this.dropdown_content.clientHeight;\n\t\tlet scrollTop\t= this.dropdown_content.scrollTop || 0;\n\n\t\theight_item\t\t= this.activeOption.offsetHeight;\n\t\ty\t\t\t\t= this.activeOption.getBoundingClientRect().top - this.dropdown_content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.dropdown_content.scrollTop = y - height_menu + height_item;\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.dropdown_content.scrollTop = y;\n\t\t}\n\t}\n\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tthis.activeOption.removeAttribute('aria-selected');\n\t\t}\n\t\tthis.activeOption = null;\n\t\tthis.control_input.removeAttribute('aria-activedescendant');\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( self.settings.controlInput ) return;\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\taddClasses(self.wrapper,'input-hidden');\n\t\t}else{\n\t\t\tself.isInputHidden = false;\n\t\t\tremoveClasses(self.wrapper,'input-hidden');\n\t\t}\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur(null);\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/brianreavis/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar sort;\n\t\tvar settings = this.settings;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar settings = self.settings;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif (settings.score) {\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif (settings.hideSelected) {\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, groups_order, optgroup, optgroups, html, has_create_option;\n\t\tvar active, create;\n\t\tvar groups: {[key:string]:DocumentFragment};\n\n\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_before_hash\t\t= self.activeOption && hash_key(self.activeOption.dataset.value);\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tgroups = {};\n\t\tgroups_order = [];\n\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element, don't re-render if we\n\t\t\tlet option\t\t\t= self.options[results.items[i].id];\n\t\t\tlet opt_value\t\t= hash_key(option[self.settings.valueField]);\n\t\t\tlet option_el\t\t= self.getOption(opt_value);\n\t\t\tif( !option_el ){\n\t\t\t\toption_el = self.render('option', option);\n\t\t\t}\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// a child could only have one parent, so if you have more parents clone the child\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t\toption_el.removeAttribute('aria-selected');\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tgroup_options.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\tgroup_options.appendChild(groups[optgroup]);\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\thtml.appendChild(group_html);\n\n\t\t\t} else {\n\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t}\n\t\t}\n\n\t\tself.dropdown_content.innerHTML = '';\n\t\tself.dropdown_content.appendChild(html);\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( self.dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( self.dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:string) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tself.dropdown_content.insertBefore(content, self.dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tactive = active_before_hash && self.getOption(active_before_hash);\n\n\t\t\t\tif( !active || !self.dropdown_content.contains(active)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else{\n\t\t\t\tactive = create;\n\t\t\t}\n\n\t\t\tself.setActiveOption(active);\n\t\t\tif( triggerDropdown && !self.isOpen ){ self.open(); }\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){ self.close(); }\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\n\t\tdata.$order\t\t\t= data.$order || ++this.order;\n\t\tdata.$id\t\t\t= this.inputId + '-opt-' + (this.options_i++);\n\t\tthis.options[key]\t= data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tvar self = this;\n\t\tvar item, item_new;\n\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\n\t\tvalue     = hash_key(value);\n\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif (value === null) return;\n\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\torder_old = self.options[value].$order;\n\n\t\t// update references\n\t\tif (value_new !== value) {\n\t\t\tdelete self.options[value];\n\t\t\tindex_item = self.items.indexOf(value);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\t\t}\n\t\tdata.$order = data.$order || order_old;\n\t\tself.options[value_new] = data;\n\n\t\t// invalidate render cache\n\t\tcache_items = self.renderCache['item'];\n\t\tcache_options = self.renderCache['option'];\n\n\t\tif (cache_items) {\n\t\t\tdelete cache_items[value];\n\t\t\tdelete cache_items[value_new];\n\t\t}\n\t\tif (cache_options) {\n\t\t\tdelete cache_options[value];\n\t\t\tdelete cache_options[value_new];\n\t\t}\n\n\t\t// update the item if it's selected\n\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\titem\t\t= self.getItem(value);\n\t\t\titem_new\t= self.render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\titem.parentNode.insertBefore(item_new, item);\n\t\t\titem.remove();\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\n\t\t// update dropdown contents\n\t\tif (self.isOpen) {\n\t\t\tself.refreshOptions(false);\n\t\t}\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tvar self = this;\n\t\tvalue = hash_key(value);\n\n\t\tvar cache_items = self.renderCache['item'];\n\t\tvar cache_options = self.renderCache['option'];\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t * @returns {object}\n\t */\n\tgetOption(value:string):HTMLElement {\n\n\t\t// cached ?\n\t\tif( this.renderCache['option'].hasOwnProperty(value) ){\n\t\t\treturn this.renderCache['option'][value];\n\t\t}\n\n\t\t// from existing dropdown menu dom\n\t\treturn this.getElementWithValue(value, this.selectable());\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|void{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the first element with a \"data-value\" attribute\n\t * that matches the given value.\n\t *\n\t */\n\tgetElementWithValue(value:string, els:HTMLCollection|NodeList|HTMLElement[]):HTMLElement {\n\t\tvalue = hash_key(value);\n\n\t\tif (value !== null) {\n\t\t\tfor( const node of els ){\n\t\t\t\tlet el = node as HTMLElement;\n\t\t\t\tif (el.getAttribute('data-value') === value) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(value:string):HTMLElement {\n\t\treturn this.getElementWithValue(value, this.control.children);\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\t\tself.buffer = document.createDocumentFragment();\n\n\t\tfor( const child of self.control.children ){\n\t\t\tself.buffer.appendChild(child);\n\t\t}\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\n\t\tvar control = self.control;\n\t\tcontrol.insertBefore(self.buffer, control.firstChild);\n\n\t\tself.buffer = null;\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item;\n\t\t\tvar self = this;\n\t\t\tvar inputMode = self.settings.mode;\n\t\t\tvar wasFull;\n\t\t\tvalue = hash_key(value);\n\n\t\t\tif( self.items.indexOf(value) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self.render('item', self.options[value]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tlet option = self.getOption(value);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', value, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( value:string, silent?:boolean ){\n\t\tvar i, idx, self = this;\n\n\t\tvar item\t= self.getItem(value);\n\n\t\tif( !item ) return;\n\n\t\tvalue\t\t= hash_key(item.dataset.value);\n\t\ti\t\t\t= self.items.indexOf(value);\n\n\t\tif (i !== -1) {\n\t\t\titem.remove();\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\t\tself.activeItems.splice(idx, 1);\n\t\t\t\tremoveClasses(item,'active');\n\t\t\t}\n\n\t\t\tself.items.splice(i, 1);\n\t\t\tself.lastQuery = null;\n\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\tself.removeOption(value, silent);\n\t\t\t}\n\n\t\t\tif (i < self.caretPos) {\n\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t}\n\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.positionDropdown();\n\t\t\tself.trigger('item_remove', value, item);\n\t\t}\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input?:string, triggerDropdown:boolean=true, callback?:TomCreateCallback ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (typeof callback !== 'function') callback = () => {};\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data:TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tvar i, value, option, self = this;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\t// remove selected attribute from options whose values are not in self.items\n\t\t\tself.input.querySelectorAll('option[selected]').forEach((option:HTMLOptionElement) => {\n\t\t\t\tif( self.items.indexOf(option.value) == -1 ){\n\t\t\t\t\toption.removeAttribute('selected');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\tfor( i = self.items.length - 1; i >= 0; i-- ){\n\t\t\t\tvalue = self.items[i];\n\n\t\t\t\tvar option = self.options[value].$option;\n\t\t\t\tif( !option ){\n\t\t\t\t\tconst label = self.options[value][self.settings.labelField] || '';\n\t\t\t\t\toption = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t\t\t\t\tself.options[value].$option = option;\n\t\t\t\t}\n\n\t\t\t\tsetAttr(option,{selected:'true'});\n\t\t\t\tself.input.prepend(option);\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose() {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\tself.hideInput();\n\n\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t// See #selectize.js#1164\n\t\t\tif( !self.tab_key ){\n\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tself.clearActiveOption();\n\t\tself.refreshState();\n\t\tself.setTextboxValue();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\titem.remove();\n\t\t}\n\n\t\tself.items = [];\n\t\tself.lastQuery = null;\n\t\tself.setCaret(0);\n\t\tself.setActiveItem();\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.showInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.buffer || self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, values, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tvalues = [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\tvalues.push( item.dataset.value );\n\t\t\t}\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\t\twhile (values.length) {\n\t\t\tself.removeItem(values.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if( self.isFocused && !self.activeItems.length ){\n\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t// move caret before or after selected items\n\t\t}else{\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(i:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\ti = self.items.length;\n\t\t} else {\n\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\n\t\t\tif( i != self.caretPos && !self.isPending ){\n\t\t\t\tvar j, children = self.controlChildren();\n\n\t\t\t\tfor( j in children ){\n\t\t\t\t\tif( j < i ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', children[j] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( children[j] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = i;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():HTMLElement[]{\n\t\treturn Array.from( this.control.getElementsByClassName(this.settings.itemClass) ) as HTMLElement[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tself.input.removeAttribute('hidden');\n\t\tself.input.required = this.isRequired;\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:string, data?:any ):null|HTMLElement{\n\t\tvar value, id, html;\n\t\tvar self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\n\t\t\t// pull markup from cache if it exists\n\t\t\tif( self.renderCache[templateName].hasOwnProperty(value) ){\n\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t}\n\n\t\t}\n\n\t\tvar template = self.settings.render[templateName];\n\t\tif( typeof template !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = template.call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ){\n\t\tvar self = this;\n\n\t\tif (templateName === void 0) {\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && input.length && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:()=>any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nexport default function MicroPlugin(Interface){\n\n\tInterface.plugins = {};\n\n\n\treturn class mixin extends Interface{\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name, fn){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\trequire(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomSettings } from './types/settings';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings\t\t\t\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element\t\t= {\n\t\t\t\t\t\t\t\t\t\tplaceholder\t: placeholder,\n\t\t\t\t\t\t\t\t\t\toptions\t\t: [],\n\t\t\t\t\t\t\t\t\t\toptgroups\t: [],\n\t\t\t\t\t\t\t\t\t\titems\t\t: [],\n\t\t\t\t\t\t\t\t\t\tmaxItems\t: null,\n\t\t\t\t\t\t\t\t\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el) => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif (!value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar option_data             = readData(option);\n\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\toptionsMap[value] = option_data;\n\t\t\toptions.push(option_data);\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tvar values, option;\n\n\t\tvar data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tvalues = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\toption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { getDom, setAttr } from '../../vanilla';\nimport { addEvent } from '../../utils';\n\n\nTomSelect.define('dropdown_input',function() {\n\tvar self = this;\n\n\tvar input = self.settings.controlInput || '<input type=\"text\" autocomplete=\"off\" class=\"dropdown-input\" />';\n\tinput = getDom( input );\n\n\tif (self.settings.placeholder) {\n\t\tsetAttr(input,{placeholder:self.settings.placeholder});\n\t}\n\n\tself.settings.controlInput = input;\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('after','setup',()=>{\n\n\t\t// set tabIndex on wrapper\n\t\tsetAttr(self.wrapper,{tabindex:self.input.disabled ? '-1' : self.tabIndex});\n\n\n\t\t// keyboard navigation\n\t\taddEvent(self.wrapper,'keypress',(evt:KeyboardEvent) => {\n\n\t\t\tif( self.control.contains(evt.target) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( self.dropdown.contains(evt.target) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// open dropdown on enter when wrapper is tab-focused\n\t\t\tswitch (evt.keyCode) {\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tself.onClick(evt);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t});\n\n\t\tlet div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.appendChild(input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_backspace_delete', function() {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\n\tthis.hook('instead','deleteSelection',function(){\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.apply(self, arguments);\n\t\t}\n\n\t\treturn false;\n\t});\n\n});\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\n\nTomSelect.define('remove_button',function(options) {\n\n\toptions = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, options);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = function(){\n\n\t\t\tvar rendered = getDom(orig_render_item.apply(self, arguments));\n\n\t\t\tvar close_button = getDom(html);\n\t\t\trendered.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\tvar value = rendered.dataset.value;\n\t\t\t\tself.removeItem(value);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t});\n\n\t\t\treturn rendered;\n\t\t};\n\n\t});\n\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext:(option:TomOption)=>string,\n};\n\nTomSelect.define('restore_on_backspace',function(options:TPluginOptions) {\n\tvar self = this;\n\n\toptions.text = options.text || function(option:TomOption){\n\t\treturn option[self.settings.labelField];\n\t};\n\n\tself.on('item_remove',function(value){\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n});\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","cmp","a","b","asciifold","String","getattr","obj","name","nesting","names","shift","DIACRITICS","i","k","chunk","foreignletters","lookup","hasOwnProperty","substring","charAt","regexp","RegExp","str","replace","foreignletter","toLowerCase","Sifter","items","settings","diacritics","tokenize","query","respect_word_boundaries","trim","regex","letter","tokens","words","string","iterator","object","Array","isArray","prototype","key","getScoreFunction","options","fields","token_count","search","prepareSearch","field_count","scoreValue","value","token","score","pos","scoreObject","data","sum","conjunction","getSortFunction","field","fields_count","multiplier","multipliers","get_field","implicit_score","sort","sort_empty","result","id","unshift","direction","option_fields","Object","assign","option_sort","option_sort_empty","total","fn_sort","fn_score","item","filter","limit","slice","highlight","element","pattern","node","skip","nodeType","match","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","escape_html","debounce_events","types","fn","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","target","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","el","existing_id","getAttribute","setAttribute","getDom","jquery","HTMLElement","div","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","map","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","selector","wrapper","contains","matches","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","attr","instance_i","TomSelect","Interface","initializePlugins","queue","requested","loaded","require","loadPlugin","plugin","Error","MicroPlugin","input_arg","dir","control_input","dropdown","control","dropdown_content","order","input","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","tab_key","isOpen","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreBlur","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","activeOption","activeItems","options_i","userOptions","renderCache","delay","timeout","tomselect","window","getComputedStyle","getPropertyValue","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","optionsMap","group_count","readData","dataset","json","JSON","parse","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","values","data_raw","opt","init_textbox","getSettings","required","load","Math","max","clearTimeout","setTimeout","call","setupOptions","setupCallbacks","setupTemplates","setup","inputMode","classes_plugins","control_id","passive_event","passive","listboxId","append","role","haspopup","escapeQuery","label","for","width","join","multiple","delimiterEscaped","e","target_match","onOptionHover","capture","clearActiveItems","inputState","onItemSelect","onMouseDown","onClick","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","blur","onOptionSelect","win_scroll","removeEventListener","revertSettings","hidden","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","disable","onChange","registerOption","registerOptionGroup","templates","escape","callbacks","focus","setActiveItem","open","isFull","pastedText","inputValue","splitInput","piece","createItem","character","fromCharCode","keyCode","which","constants","selectAll","close","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","activeElement","deactivate","setCaret","parentElement","lastQuery","addItem","getOption","clearActiveOption","onSearchChange","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","height_menu","height_item","y","clientHeight","scrollTop","offsetHeight","getBoundingClientRect","top","removeAttribute","controlChildren","getSearchOptions","calculateScore","triggerDropdown","j","groups_order","html","has_create_option","active","groups","elements","results","active_before_hash","show_dropdown","min","opt_value","option_el","toggle","includes","createDocumentFragment","$order","group_options","group_html","querySelectorAll","parent","normalize","tok","add_template","template","content","insertBefore","canCreate","active_index","selectable","dat","$id","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","removeOption","removeItem","clearOptions","getElementWithValue","all","els","buffer","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","keys","checkValidity","invalid","opts","prepend","visibility","display","context","rect","scrollY","left","scrollX","selection","start","selectionStart","selectionEnd","onDelete","pop","adjacent","nextElementSibling","from","getElementsByClassName","enable","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","define","tabindex","orig_deleteSelection","title","orig_render_item","rendered","close_button","text"],"mappings":"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"}