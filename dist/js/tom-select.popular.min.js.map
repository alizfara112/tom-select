{"version":3,"file":"tom-select.popular.min.js","sources":["../../src/contrib/microevent.js","../../node_modules/@orchidjs/sifter/dist/esm/diacritics.js","../../node_modules/@orchidjs/sifter/dist/esm/utils.js","../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","../../src/contrib/highlight.js","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/vanilla.ts","../../src/tom-select.ts","../../src/contrib/microplugin.js","../../src/getSettings.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events,callback){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events, fct){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events, fct){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events, ...args){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self,args );\n\t\t\t}\n\t\t});\n\t}\n};\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\n\nvar code_points = [[67, 67], [160, 160], [192, 438], [452, 652], [961, 961], [1019, 1019], [1083, 1083], [1281, 1289], [1984, 1984], [5095, 5095], [7429, 7441], [7545, 7549], [7680, 7935], [8580, 8580], [9398, 9449], [11360, 11391], [42792, 42793], [42802, 42851], [42873, 42897], [42912, 42922], [64256, 64260], [65313, 65338], [65345, 65370]];\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\n\nfunction asciifold(str) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD').toLowerCase();\n}\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\n\n\nfunction generateDiacritics() {\n  var latin_convert = {\n    'l·': 'l',\n    'ʼn': 'n',\n    'æ': 'ae',\n    'ø': 'o',\n    'aʾ': 'a',\n    'dž': 'dz'\n  };\n  var diacritics = {}; //var no_latin\t= [];\n\n  code_points.forEach(code_range => {\n    for (let i = code_range[0]; i <= code_range[1]; i++) {\n      let diacritic = String.fromCharCode(i);\n      let latin = diacritic.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD');\n\n      if (latin == diacritic) {\n        //no_latin.push(diacritic);\n        continue;\n      }\n\n      latin = latin.toLowerCase();\n\n      if (latin in latin_convert) {\n        latin = latin_convert[latin];\n      }\n\n      if (!(latin in diacritics)) {\n        diacritics[latin] = latin + latin.toUpperCase();\n      }\n\n      diacritics[latin] += diacritic;\n    }\n  }); //console.log('no_latin',JSON.stringify(no_latin));\n\n  return diacritics;\n}\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\n\nvar diacritics = null;\nfunction diacriticRegexPoints(regex) {\n  if (diacritics === null) {\n    diacritics = generateDiacritics();\n  }\n\n  for (let latin in diacritics) {\n    if (diacritics.hasOwnProperty(latin)) {\n      regex = regex.replace(new RegExp(latin, 'g'), '[' + diacritics[latin] + ']');\n    }\n  }\n\n  return regex;\n}\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * rollup will bundle this function (and the DIACRITICS constant) unless commented out\n *\nvar diacriticRegex = (function() {\n\n\tvar list = [];\n\tfor( let letter in DIACRITICS ){\n\n\t\tif( letter.toLowerCase() != letter && letter.toLowerCase() in DIACRITICS ){\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( DIACRITICS.hasOwnProperty(letter) ){\n\n\t\t\tvar replace = letter + DIACRITICS[letter];\n\t\t\tif( letter.toUpperCase() in DIACRITICS ){\n\t\t\t\treplace += letter.toUpperCase() + DIACRITICS[letter.toUpperCase()];\n\t\t\t}\n\n\t\t\tlist.push({let:letter,pat:'['+replace+']'});\n\t\t}\n\t}\n\n\treturn function(regex:string):string{\n\t\tlist.forEach((item)=>{\n\t\t\tregex = regex.replace( new RegExp(item.let,'g'),item.pat);\n\t\t});\n\t\treturn regex;\n\t}\n})();\n*/\n\nexport { asciifold, diacriticRegexPoints, generateDiacritics };\n//# sourceMappingURL=diacritics.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from './diacritics.js';\n\n// @ts-ignore\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nfunction getAttr(obj, name) {\n  if (!obj) return;\n  return obj[name];\n}\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nfunction getAttrNesting(obj, name) {\n  if (!obj) return;\n  var names = name.split(\".\");\n\n  while (names.length && (obj = obj[names.shift()]));\n\n  return obj;\n}\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n * @param {object} token\n * @return {number}\n */\n\nfunction scoreValue(value, token, weight) {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n}\nfunction escape_regex(str) {\n  return (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nfunction propToArray(obj, key) {\n  var value = obj[key];\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n}\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n * @param {array|object} object\n */\n\nfunction iterate(object, callback) {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n}\nfunction cmp(a, b) {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n}\n\nexport { cmp, escape_regex, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { escape_regex, iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nimport { diacriticRegexPoints, asciifold } from './diacritics.js';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\nclass Sifter {\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   * @constructor\n   * @param {array|object} items\n   * @param {object} items\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        regex = escape_regex(word);\n\n        if (this.settings.diacritics) {\n          regex = diacriticRegexPoints(regex);\n        }\n\n        if (respect_word_boundaries) regex = \"\\\\b\" + regex;\n        regex = new RegExp(regex, 'i');\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {function}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     * @param {TToken} token\n     * @param {object} data\n     * @return {number}\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field]);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var i = 0,\n            score,\n            sum = 0;\n\n        for (; i < token_count; i++) {\n          score = scoreObject(tokens[i], data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var i, n, sort_fld, sort_flds_count, multiplier, implicit_score;\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty || options.sort,\n          sort_flds = [],\n          multipliers = [];\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     * @param  {string} name\n     * @param  {object} result\n     * @return {string}\n     */\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (i = 0, n = sort.length; i < n; i++) {\n        if (search.query || sort[i].field !== '$score') {\n          sort_flds.push(sort[i]);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (i = 0, n = sort_flds.length; i < n; i++) {\n        if (sort_flds[i].field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      }\n    } else {\n      for (i = 0, n = sort_flds.length; i < n; i++) {\n        if (sort_flds[i].field === '$score') {\n          sort_flds.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    for (i = 0, n = sort_flds.length; i < n; i++) {\n      multipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n    } // build function\n\n\n    sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    } else if (sort_flds_count === 1) {\n      sort_fld = sort_flds[0].field;\n      multiplier = multipliers[0];\n      return function (a, b) {\n        return multiplier * cmp(get_field(sort_fld, a), get_field(sort_fld, b));\n      };\n    } else {\n      return function (a, b) {\n        var i, result, field;\n\n        for (i = 0; i < sort_flds_count; i++) {\n          field = sort_flds[i].field;\n          result = multipliers[i] * cmp(get_field(field, a), get_field(field, b));\n          if (result) return result;\n        }\n\n        return 0;\n      };\n    }\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n\n      if (Array.isArray(options.fields) && typeof options.fields[0] !== 'object') {\n        var fields = [];\n        options.fields.forEach(fld_name => {\n          fields.push({\n            field: fld_name\n          });\n        });\n        options.fields = fields;\n      }\n\n      options.fields.forEach(field_params => {\n        weights[field_params.field] = 'weight' in field_params ? field_params.weight : 1;\n      });\n    }\n\n    query = asciifold(query + '').toLowerCase().trim();\n    return {\n      options: options,\n      query: query,\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    var fn_sort;\n    var fn_score;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (item, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    fn_sort = self._getSortFunction(search);\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport default Sifter;\n//# sourceMappingURL=sifter.js.map\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nexport function highlight(element, regex) {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\tvar highlight = function(node) {\n\t\tvar skip = 0;\n\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\tif (node.nodeType === 3) {\n\t\t\tvar pos = node.data.search(regex);\n\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\tspannode.className = 'highlight';\n\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\tskip = 1;\n\n\t\t\t}\n\t\t}\n\t\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t\treturn skip;\n\t};\n\n\thighlight( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport function removeHighlight(el) {\n\tvar elements = document.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el, i){\n\t\tvar parent = el.parentNode;\n\t\tparent.replaceChild(el.firstChild, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport function hash_key(value:string):string|null {\n\tif (typeof value === 'undefined' || value === null) return null;\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport function escape_html(str:string):string {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport function loadDebounce(fn,delay:number){\n\tvar timeout: ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:() => void) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t}\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n}\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport function debounce_events( self:TomSelect, types:string[], fn:() => void ) {\n\tvar type;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport function getSelection(input:HTMLInputElement):{ start: number; length: number } {\n\treturn {\n\t\tstart\t: input.selectionStart,\n\t\tlength\t: input.selectionEnd - input.selectionStart,\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport function preventDefault(evt?:Event, stop:boolean=false):void{\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport function addEvent(target:EventTarget, type:string, callback:EventListener, options?:object):void{\n\ttarget.addEventListener(type,callback,options);\n}\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport function isKeyDown( key_name:keyof (KeyboardEvent|MouseEvent), evt:KeyboardEvent|MouseEvent ){\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport function getId(el:Element,id:string){\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n}\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport function addSlashes(str:string):string{\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n}\n","\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport function getDom( query:any ):HTMLElement{\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport function escapeQuery(query:string):string{\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport function triggerEvent( dom_el:HTMLElement, event_name:string ):void{\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport function applyCSS( dom_el:HTMLElement, css:{ [key: string]: string|number }):void{\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport function addClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export function removeClasses( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ){\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport function classesArray(args:string[]|string[][]):string[]{\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport function castAsArray(arg:any):Array<any>{\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport function parentMatch( target:HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void{\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * < 0 - left (first)\n *\n */\nexport function getTail( list:Array<any>|NodeList, direction:number ):any{\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport function isEmptyObject(obj:object):boolean{\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport function nodeIndex( el:Element, amongst?:string ):number{\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport function setAttr(el:Element,attrs:{ [key: string]: string }){\n\tfor( const attr in attrs ){\n\t\tel.setAttribute(attr, attrs[attr]);\n\t}\n}\n","\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from '@orchidjs/sifter/dist/esm/sifter.js';\nimport { escape_regex } from '@orchidjs/sifter/dist/esm/utils.js';\nimport { TomSettings } from './types/settings';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t: ReturnType<Sifter['search']> = null;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: HTMLElement = null;\n\tpublic activeItems\t\t\t\t: HTMLElement[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {'item':{[key:string]:HTMLElement},'option':{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof this.settings.hidePlaceholder !== 'boolean' ){\n\t\t\tthis.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\t\tthis.setup();\n\t}\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n\t/**\n\t * Creates all elements and sets up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\n\t\tvar self = this;\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar input\t\t\t\t\t= self.input;\n\t\tvar control_id: string;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId: string\t\t= self.inputId +'-ts-dropdown';\n\n\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\twrapper.append(control);\n\n\n\t\tdropdown\t\t\t= self.render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t\tdropdown_content\t= getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tdropdown.append(dropdown_content);\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\t\tsetAttr(control_input,{\n\t\t\trole:'combobox',\n\t\t\thaspopup:'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tcontrol_id = getId(control_input,self.inputId + '-tomselected');\n\n\t\tlet query = \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tlet label = document.querySelector(query);\n\t\tif( label ){\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tlet label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\n\t\tself.control\t\t\t= control;\n\t\tself.control_input\t\t= control_input;\n\t\tself.wrapper\t\t\t= wrapper;\n\t\tself.dropdown\t\t\t= dropdown;\n\t\tself.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick(evt as MouseEvent);\n\t\t});\n\n\n\t\t// retain focus by preventing native handling. if the\n\t\t// event target is the input it should not be modified.\n\t\t// otherwise, text selection within the input won't work.\n\t\taddEvent(control_input,'mousedown',\t(e) =>{\n\t\t\tif( control_input.value !== '' ){\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\n\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t(e) => self.onBlur(e as MouseEvent) );\n\t\taddEvent(control_input,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (e:MouseEvent) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tif( !wrapper.contains(e.target as HTMLElement) && !dropdown.contains(e.target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// clicking anywhere in the control should not blur the control_input & close the dropdown\n\t\t\tpreventDefault(e,true);\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown',doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tself._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tsetAttr(input,{\thidden:'hidden'});\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\n\t\tself.setValue(settings.items);\n\t\tdelete settings.items;\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':(data:TomOption,escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':(data:TomOption,escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown(e:MouseEvent|KeyboardEvent):void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.isOpen && self.activeOption) {\n\t\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.tab_key = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:HTMLElement ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self,value);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( value, options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:HTMLElement, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as HTMLElement;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:HTMLElement ){\n\n\t\tvar last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tif( this.activeItems.indexOf(item) == -1 ){\n\t\t\tthis.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:HTMLElement ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:HTMLElement ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tthis.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tthis.activeOption.removeAttribute('aria-selected');\n\t\t}\n\t\tthis.activeOption = null;\n\t\tthis.control_input.removeAttribute('aria-activedescendant');\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( self.settings.controlInput ) return;\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\taddClasses(self.wrapper,'input-hidden');\n\t\t}else{\n\t\t\tself.isInputHidden = false;\n\t\t\tremoveClasses(self.wrapper,'input-hidden');\n\t\t}\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur(null);\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar settings = self.settings;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif (settings.score) {\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif (settings.hideSelected) {\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html, has_create_option, active_value, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order\t\t\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= self.activeOption;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\t\tif( active_option ){\n\t\t\tactive_value = active_option.dataset.value;\n\t\t\tactive_group = active_option.closest('[data-group]');\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element, don't re-render if we\n\t\t\tlet option\t\t\t= self.options[results.items[i].id];\n\t\t\tlet opt_value\t\t= hash_key(option[self.settings.valueField]);\n\t\t\tlet option_el\t\t= self.getOption(opt_value);\n\t\t\tif( !option_el ){\n\t\t\t\toption_el = self.render('option', option);\n\t\t\t}\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// a child could only have one parent, so if you have more parents clone the child\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t\toption_el.removeAttribute('aria-selected');\n\t\t\t\t}\n\n\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\tif( active_value == opt_value && active_group && active_group.dataset.group === optgroup ){\n\t\t\t\t\tactive_option = option_el;\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tgroup_options.append(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\tgroup_options.append(groups[optgroup]);\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\thtml.append(group_html);\n\n\t\t\t} else {\n\t\t\t\thtml.append(groups[optgroup]);\n\t\t\t}\n\t\t}\n\n\t\tdropdown_content.innerHTML = '';\n\t\tdropdown_content.append(html);\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:string) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else{\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\n\t\tdata.$order\t\t\t= data.$order || ++this.order;\n\t\tdata.$id\t\t\t= this.inputId + '-opt-' + data.$order;\n\t\tthis.options[key]\t= data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tvalue\t\t\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\t\tconst option\t\t= self.getOption(value);\n\t\tconst item\t\t\t= self.getItem(value);\n\n\n\t\t// sanity checks\n\t\tif (value === null) return;\n\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\tdata.$order = data.$order || self.options[value].$order;\n\t\tdelete self.options[value];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\t\tself.uncacheValue(value,false);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self.render('option', data);\n\t\t\t\toption.parentNode.replaceChild(option_new, option);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self.render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\titem.parentNode.replaceChild(item_new, item);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tvar self = this;\n\t\tvalue = hash_key(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string, remove_node:boolean=true){\n\t\tconst self\t\t\t\t= this;\n\t\tconst cache_items\t\t= self.renderCache['item'];\n\t\tconst cache_options\t\t= self.renderCache['option'];\n\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tif( remove_node ){\n\t\t\tconst option_el\t\t\t= self.getOption(value);\n\t\t\tif( option_el ) option_el.remove();\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:string):HTMLElement {\n\t\tvalue = hash_key(value);\n\t\treturn this.rendered('option',value);\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|void{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(value:string):HTMLElement {\n\t\tvalue = hash_key(value);\n\t\tif( value ){\n\t\t\tvalue = addSlashes(value);\n\t\t\treturn this.control.querySelector(`[data-value=\"${value}\"]`);\n\t\t}\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\t\tself.buffer = document.createDocumentFragment();\n\n\t\tfor( const child of self.control.children ){\n\t\t\tself.buffer.appendChild(child);\n\t\t}\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\n\t\tvar control = self.control;\n\t\tcontrol.insertBefore(self.buffer, control.firstChild);\n\n\t\tself.buffer = null;\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item;\n\t\t\tvar self = this;\n\t\t\tvar inputMode = self.settings.mode;\n\t\t\tvar wasFull;\n\t\t\tvalue = hash_key(value);\n\n\t\t\tif( self.items.indexOf(value) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self.render('item', self.options[value]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(value);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', value, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( value:string, silent?:boolean ){\n\t\tvar i, idx, self = this;\n\n\t\tvar item\t= self.getItem(value);\n\n\t\tif( !item ) return;\n\n\t\tvalue\t\t= hash_key(item.dataset.value);\n\t\ti\t\t\t= self.items.indexOf(value);\n\n\t\tif (i !== -1) {\n\t\t\titem.remove();\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\t\tself.activeItems.splice(idx, 1);\n\t\t\t\tremoveClasses(item,'active');\n\t\t\t}\n\n\t\t\tself.items.splice(i, 1);\n\t\t\tself.lastQuery = null;\n\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\tself.removeOption(value, silent);\n\t\t\t}\n\n\t\t\tif (i < self.caretPos) {\n\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t}\n\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.positionDropdown();\n\t\t\tself.trigger('item_remove', value, item);\n\t\t}\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input?:string, triggerDropdown:boolean=true, callback?:TomCreateCallback ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (typeof callback !== 'function') callback = () => {};\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data:TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar i, value, option, option_el, label;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\toption_el.selected = true;\n\t\t\t\tsetAttr(option_el,{selected:'true'});\n\t\t\t\tself.input.prepend(option_el);\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// remove selected attribute from options whose values are not in self.items\n\t\t\tself.input.querySelectorAll('option[selected]').forEach((option_el:HTMLOptionElement) => {\n\t\t\t\tif( self.items.indexOf(option_el.value) == -1 ){\n\t\t\t\t\toption_el.removeAttribute('selected');\n\t\t\t\t\toption_el.selected = false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\tfor( i = self.items.length - 1; i >= 0; i-- ){\n\t\t\t\tvalue\t\t\t= self.items[i];\n\t\t\t\toption\t\t\t= self.options[value];\n\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t}\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' && !self.isRequired ){\n\t\t\t\toption_el = self.input.querySelector('option[value=\"\"]');\n\t\t\t\tAddSelected(option_el, \"\", \"\");\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #selectize.js#1164\n\t\t\t\tif( !self.tab_key ){\n\t\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\titem.remove();\n\t\t}\n\n\t\tself.items = [];\n\t\tself.lastQuery = null;\n\t\tself.setCaret(0);\n\t\tself.clearActiveItems();\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.showInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.buffer || self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, values, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tvalues = [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\tvalues.push( item.dataset.value );\n\t\t\t}\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\t\twhile (values.length) {\n\t\t\tself.removeItem(values.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if( self.isFocused && !self.activeItems.length ){\n\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t// move caret before or after selected items\n\t\t}else{\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():HTMLElement[]{\n\t\treturn Array.from( this.control.getElementsByClassName(this.settings.itemClass) ) as HTMLElement[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tself.input.removeAttribute('hidden');\n\t\tself.input.required = this.isRequired;\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:string, data?:any ):null|HTMLElement{\n\t\tvar value, id, html;\n\t\tvar self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue\t= hash_key(data[self.settings.valueField]);\n\t\t\thtml\t= self.rendered(templateName,value);\n\n\t\t\tif( html ){\n\t\t\t\treturn html;\n\t\t\t}\n\n\t\t}\n\n\t\tvar template = self.settings.render[templateName];\n\t\tif( typeof template !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = template.call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Return the previously rendered item or option\n\t *\n\t */\n\trendered( templateName:'item'|'option', value:string ):null|HTMLElement{\n\t\tif( this.renderCache[templateName].hasOwnProperty(value) ){\n\t\t\treturn this.renderCache[templateName][value];\n\t\t}\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ):void{\n\t\tvar self = this;\n\n\t\t// remove options from DOM\n\t\tif(templateName === void 0 || 'option' ){\n\t\t\tfor( let key in self.options){\n\t\t\t\tconst el = self.getOption(key);\n\t\t\t\tif( el ) el.remove();\n\t\t\t}\n\t\t}\n\n\t\tif( templateName === void 0 ){\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && input.length && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:()=>any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nexport default function MicroPlugin(Interface){\n\n\tInterface.plugins = {};\n\n\n\treturn class mixin extends Interface{\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name, fn){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\trequire(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomSettings } from './types/settings';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings\t\t\t\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element\t\t= {\n\t\t\t\t\t\t\t\t\t\tplaceholder\t: placeholder,\n\t\t\t\t\t\t\t\t\t\toptions\t\t: [],\n\t\t\t\t\t\t\t\t\t\toptgroups\t: [],\n\t\t\t\t\t\t\t\t\t\titems\t\t: [],\n\t\t\t\t\t\t\t\t\t\tmaxItems\t: null,\n\t\t\t\t\t\t\t\t\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el) => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif (!value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar option_data             = readData(option);\n\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\toptionsMap[value] = option_data;\n\t\t\toptions.push(option_data);\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tvar values, option;\n\n\t\tvar data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tvalues = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\toption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { getDom, setAttr } from '../../vanilla';\nimport { addEvent } from '../../utils';\n\n\nTomSelect.define('dropdown_input',function() {\n\tvar self = this;\n\n\tvar input = self.settings.controlInput || '<input type=\"text\" autocomplete=\"off\" class=\"dropdown-input\" />';\n\tinput = getDom( input );\n\n\tif (self.settings.placeholder) {\n\t\tsetAttr(input,{placeholder:self.settings.placeholder});\n\t}\n\n\tself.settings.controlInput = input;\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('after','setup',()=>{\n\n\t\t// set tabIndex on wrapper\n\t\tsetAttr(self.wrapper,{tabindex:self.input.disabled ? '-1' : self.tabIndex});\n\n\n\t\t// keyboard navigation\n\t\taddEvent(self.wrapper,'keypress',(evt:KeyboardEvent) => {\n\n\t\t\tif( self.control.contains(evt.target) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( self.dropdown.contains(evt.target) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// open dropdown on enter when wrapper is tab-focused\n\t\t\tswitch (evt.keyCode) {\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tself.onClick(evt);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t});\n\n\t\tlet div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.appendChild(input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_backspace_delete', function() {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\n\tthis.hook('instead','deleteSelection',function(){\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.apply(self, arguments);\n\t\t}\n\n\t\treturn false;\n\t});\n\n});\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\n\nTomSelect.define('remove_button',function(options) {\n\n\toptions = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, options);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = function(){\n\n\t\t\tvar rendered = getDom(orig_render_item.apply(self, arguments));\n\n\t\t\tvar close_button = getDom(html);\n\t\t\trendered.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\tvar value = rendered.dataset.value;\n\t\t\t\tself.removeItem(value);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t});\n\n\t\t\treturn rendered;\n\t\t};\n\n\t});\n\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext:(option:TomOption)=>string,\n};\n\nTomSelect.define('restore_on_backspace',function(options:TPluginOptions) {\n\tvar self = this;\n\n\toptions.text = options.text || function(option:TomOption){\n\t\treturn option[self.settings.labelField];\n\t};\n\n\tself.on('item_remove',function(value){\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n});\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","code_points","asciifold","str","normalize","replace","toLowerCase","diacritics","diacriticRegexPoints","regex","latin_convert","l·","ʼn","æ","ø","aʾ","dž","code_range","i","diacritic","String","fromCharCode","latin","toUpperCase","generateDiacritics","hasOwnProperty","RegExp","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","key","Array","isArray","iterate","object","cmp","a","b","Sifter","[object Object]","items","settings","query","respect_word_boundaries","weights","tokens","words","field_regex","Object","keys","map","join","word","field_match","field","match","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","_getSortFunction","sort_fld","sort_flds_count","multiplier","implicit_score","sort","sort_empty","sort_flds","multipliers","get_field","result","id","unshift","direction","optsUser","assign","fld_name","field_params","trim","tokenize","total","nesting","fn_sort","fn_score","item","filter","limit","slice","highlight","element","node","skip","nodeType","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","escape_html","debounce_events","types","fn","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","target","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","el","existing_id","getAttribute","setAttribute","getDom","jquery","HTMLElement","div","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","selector","wrapper","contains","matches","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","attr","instance_i","TomSelect","Interface","initializePlugins","queue","requested","loaded","require","loadPlugin","plugin","Error","MicroPlugin","input_arg","dir","control_input","dropdown","control","dropdown_content","order","input","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","tab_key","isOpen","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","activeOption","activeItems","userOptions","renderCache","tomselect","window","getComputedStyle","getPropertyValue","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","optionsMap","group_count","readData","dataset","json","JSON","parse","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","values","data_raw","opt","init_textbox","getSettings","required","setupOptions","setupCallbacks","setupTemplates","setup","inputMode","classes_plugins","control_id","passive_event","passive","listboxId","append","role","haspopup","escapeQuery","label","for","delay","timeout","width","multiple","load","Math","max","clearTimeout","setTimeout","call","onOptionSelect","target_match","onItemSelect","onClick","e","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","blur","inputState","win_scroll","removeEventListener","revertSettings","hidden","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","close","disable","onChange","registerOption","registerOptionGroup","templates","escape","callbacks","clearActiveItems","focus","onMouseDown","isFull","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","deactivate","setActiveItem","setCaret","parentElement","lastQuery","addItem","canLoad","loadCallback","bind","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scrollToOption","behavior","content","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scroll","scrollBehavior","removeAttribute","controlChildren","getScoreFunction","getSearchOptions","calculateScore","triggerDropdown","j","k","html","has_create_option","active_value","active_group","groups","groups_order","elements","results","active_option","show_dropdown","closest","min","opt_value","option_el","getOption","toggle","includes","createDocumentFragment","$id","$order","group_options","group_html","querySelectorAll","parent","tok","add_template","template","insertBefore","canCreate","active_index","selectable","dat","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","remove_node","cache_items","cache_options","rendered","all","buffer","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","checkValidity","invalid","opts","AddSelected","prepend","visibility","display","context","rect","scrollY","left","scrollX","selection","start","selectionStart","selectionEnd","onDelete","pop","adjacent","nextElementSibling","new_pos","from","getElementsByClassName","enable","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","define","tabindex","orig_deleteSelection","title","orig_render_item","close_button","text"],"mappings":"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"}