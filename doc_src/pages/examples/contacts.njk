---
title: Email Contacts Example
nav_title: Email Contacts
tags: demo
---



{% from "demo.njk" import demo %}

{% set label %}
<label class="h2 mb-3">
	Email Contacts
</label>
<p>An example showing how you might go about creating contact selector like those used in Email apps.</p>
{% endset %}

{% set html %}
<select id="select-to" class="contacts" placeholder="Pick some people..."></select>
{% endset %}

<script>
{% set script %}
var REGEX_EMAIL = '([a-z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&\'*+/=?^_`{|}~-]+)*@' +
                  '(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)';

var formatName = function(item) {
	return ((item.first_name || '') + ' ' + (item.last_name || '')).trim();
};

new TomSelect('#select-to',{
	persist: false,
	maxItems: null,
	valueField: 'email',
	labelField: 'name',
	searchField: ['first_name', 'last_name', 'email'],
	sortField: [
		{field: 'first_name', direction: 'asc'},
		{field: 'last_name', direction: 'asc'}
	],
	options: [
		{email: 'nikola@tesla.com', first_name: 'Nikola', last_name: 'Tesla'},
		{email: 'brian@thirdroute.com', first_name: 'Brian', last_name: 'Reavis'},
		{email: 'someone@gmail.com'}
	],
	render: {
		item: function(item, escape) {
			var name = formatName(item);
			return '<div>' +
				(name ? '<span class="name">' + escape(name) + '</span>' : '') +
				(item.email ? '<span class="email">' + escape(item.email) + '</span>' : '') +
			'</div>';
		},
		option: function(item, escape) {
			var name = formatName(item);
			var label = name || item.email;
			var caption = name ? item.email : null;
			return '<div>' +
				'<span class="label">' + escape(label) + '</span>' +
				(caption ? '<span class="caption">' + escape(caption) + '</span>' : '') +
			'</div>';
		}
	},
	createFilter: function(input) {
		var regexpA = new RegExp('^' + REGEX_EMAIL + '$', 'i');
		var regexpB = new RegExp('^([^<]*)\<' + REGEX_EMAIL + '\>$', 'i');
		return regexpA.test(input) || regexpB.test(input);
	},
	create: function(input) {
		if ((new RegExp('^' + REGEX_EMAIL + '$', 'i')).test(input)) {
			return {email: input};
		}
		var match = input.match(new RegExp('^([^<]*)\<' + REGEX_EMAIL + '\>$', 'i'));
		if (match) {
			var name       = match[1].trim();
			var pos_space  = name.indexOf(' ');
			var first_name = name.substring(0, pos_space);
			var last_name  = name.substring(pos_space + 1);

			return {
				email: match[2],
				first_name: first_name,
				last_name: last_name
			};
		}
		alert('Invalid email address.');
		return false;
	}
});
{% endset %}
</script>

<style>
{% set style %}
	.ts-control.contacts .ts-input > div {
		padding: 1px 10px;
		font-size: 13px;
		font-weight: normal;
		-webkit-font-smoothing: auto;
		color: #f7fbff;
		text-shadow: 0 1px 0 rgba(8,32,65,0.2);
		background: #2183f5;
		background: -moz-linear-gradient(top, #2183f5 0%, #1d77f3 100%);
		background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#2183f5), color-stop(100%,#1d77f3));
		background: -webkit-linear-gradient(top,  #2183f5 0%,#1d77f3 100%);
		background: -o-linear-gradient(top,  #2183f5 0%,#1d77f3 100%);
		background: -ms-linear-gradient(top,  #2183f5 0%,#1d77f3 100%);
		background: linear-gradient(to bottom,  #2183f5 0%,#1d77f3 100%);
		border: 1px solid #0f65d2;
		-webkit-border-radius: 999px;
		-moz-border-radius: 999px;
		border-radius: 999px;
		-webkit-box-shadow: 0 1px 1px rgba(0,0,0,0.15);
		-moz-box-shadow: 0 1px 1px rgba(0,0,0,0.15);
		box-shadow: 0 1px 1px rgba(0,0,0,0.15);
	}
	.ts-control.contacts .ts-input > div.active {
		background: #0059c7;
		background: -moz-linear-gradient(top, #0059c7 0%, #0051c1 100%);
		background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#0059c7), color-stop(100%,#0051c1));
		background: -webkit-linear-gradient(top,  #0059c7 0%,#0051c1 100%);
		background: -o-linear-gradient(top,  #0059c7 0%,#0051c1 100%);
		background: -ms-linear-gradient(top,  #0059c7 0%,#0051c1 100%);
		background: linear-gradient(to bottom,  #0059c7 0%,#0051c1 100%);
		border-color: #0051c1;
	}
	.ts-control.contacts .ts-input > div .email {
		opacity: 0.8;
	}
	.ts-control.contacts .ts-input > div .name + .email {
		margin-left: 5px;
	}
	.ts-control.contacts .ts-input > div .email:before {
		content: '<';
	}
	.ts-control.contacts .ts-input > div .email:after {
		content: '>';
	}
	.ts-control.contacts .ts-dropdown .caption {
		font-size: 12px;
		display: block;
		color: #a0a0a0;
	}
{% endset %}
</style>

{{ demo( label, html, script, style) }}
