---
title: Plugin Examples
nav_title: Plugins
tags: demo
script: <script src="/js/jqueryui.js"></script>

---


{% from "demo.njk" import demo %}


<p class="mt-5">
	Plugins are bundled in <code>tom-select.complete.js</code> but can also be loaded individually.
	Include <code>tom-select.base.js</code> and any combination of plugins of your choosing.
	The <a href="/docs/plugins">plugin documentation</a> has more information about custom bundles and plugin development.
</p>
{% highlight "html" %}
<script src="/js/tom-select.base.js"></script>
<script src="/js/plugins/change_listener.js"></script>
<script src="/js/plugins/drag_drop.js"></script>
<script src="/js/plugins/dropdown_header.js"></script>
<script src="/js/plugins/input_autogrow.js"></script>
<script src="/js/plugins/no_backspace_delete.js"></script>
<script src="/js/plugins/optgroup_columns.js"></script>
<script src="/js/plugins/remove_button.js"></script>
<script src="/js/plugins/restore_on_backspace.js"></script>
{% endhighlight %}



{% set label %}
<label class="h2 mb-3">
	remove_button
</label>
{% endset %}

{% set html %}
<input type="text" id="input-tags" value="awesome,neat" autocomplete="off">
{% endset %}

<script>
{% set script %}
new TomSelect('#input-tags',{
	plugins: ['remove_button'],
	persist: false,
	create: true,
	onDelete: function(values) {
		return confirm(values.length > 1 ? 'Are you sure you want to remove these ' + values.length + ' items?' : 'Are you sure you want to remove "' + values[0] + '"?');
	}
});
{% endset %}
</script>

{{ demo( label, html, script) }}








{% set label %}
<label class="h2 mb-3">
	remove_button (Single)
</label>
{% endset %}

{% set html %}
<select id="input-tags2" value="awesome" autocomplete="off">
	<option>awesome</option>
	<option>neat</option>
</select>
{% endset %}

<script>
{% set script %}
new TomSelect('#input-tags2',{
	plugins: ['remove_button'],
	persist: false,
	create: true,
	maxItems: 1,
});
{% endset %}
</script>

{{ demo( label, html, script) }}









{% set label %}
<label class="h2 mb-3">
	remove_button &amp; no_backspace_delete
</label>
{% endset %}

{% set html %}
<div id="disable-wrapper" style="position:relative">
<input type="text" id="disable-backspace" value="awesome,neat" autocomplete="off">
<input type="text" id="input-disable-control" class="form-control mt-2"  autocomplete="off" placeholder="How cool is this?" >
</div>
{% endset %}

<script>
{% set script %}
new TomSelect('#disable-backspace',{
	plugins: ['no_backspace_delete','remove_button',],
	persist: false,
	create: true,
	controlInput: '#input-disable-control',
	dropdownParent: '#disable-wrapper',
});
{% endset %}
</script>

{{ demo( label, html, script) }}




{% set label %}
<label class="h2 mb-3">
	dropdown_input
</label>
{% endset %}

{% set html %}
<input type="text" id="ex-dropdown-input" value="awesome,neat" autocomplete="off">
{% endset %}

<script>
{% set script %}
new TomSelect('#ex-dropdown-input',{
	plugins: ['dropdown_input'],
});
{% endset %}
</script>

{{ demo( label, html, script) }}






{% set label %}
<label class="h2 mb-3">
	restore_on_backspace
</label>
{% endset %}

{% set html %}
<input type="text" id="input-tags6" value="awesome,neat" autocomplete="off">
{% endset %}

<script>
{% set script %}
new TomSelect('#input-tags6',{
	plugins: ['restore_on_backspace'],
	persist: false,
	create: true
});
{% endset %}
</script>

{{ demo( label, html, script) }}





{% set label %}
<label class="h2 mb-3">
	drag_drop
</label>
<p>Drag 'n drop selected items. Requires jQuery + jQuery UI</p>
{% endset %}

{% set html %}
<input type="text" id="input-sortable" value="drag,these,items,around" autocomplete="off">
{% endset %}

<script>
{% set script %}
new TomSelect('#input-sortable',{
	plugins: ['drag_drop'],
	persist: false,
	create: true
});
{% endset %}
</script>

{{ demo( label, html, script,'',true) }}





{% set label %}
<label class="h2 mb-3">
	dropdown_header
</label>
{% endset %}

{% set html %}
<select id="select-code-language" class="demo-code-language" placeholder="Select a language..." autocomplete="off">
	<option value="txt">Text</option>
	<option value="md">Markdown</option>
	<option value="html">HTML</option>
	<option value="php">PHP</option>
	<option value="python">Python</option>
	<option value="java">Java</option>
	<option value="js" selected>JavaScript</option>
	<option value="c#">Ruby</option>
	<option value="c#">VHDL</option>
	<option value="c#">Verilog</option>
	<option value="c#">C#</option>
	<option value="c++">C/C++</option>
</select>
{% endset %}

<script>
{% set script %}
new TomSelect('#select-code-language',{
	sortField: 'text',
	hideSelected: false,
	plugins: {
		'dropdown_header': {
			title: 'Language'
		}
	}
});
{% endset %}
</script>

{{ demo( label, html, script) }}





{% set label %}
<label class="h2 mb-3">change_listener</label>
<p>Listen for 'change' events on the original input/select and update Tom Select accordingly</p>
{% endset %}

{% set html %}
<input type="text" id="input-change" value="original value" autocomplete="off">
<button type="button" class="btn btn-sm btn-success" id="change-input">Change original input</button>
{% endset %}

<script>
{% set script %}

var input = document.getElementById('input-change');
new TomSelect(input,{
	plugins: ['change_listener'],
});
document.getElementById('change-input').addEventListener('click',function(evt){
	evt.preventDefault();
	evt.stopPropagation();

	input.value = 'new value';
	var evt = document.createEvent('HTMLEvents');
	evt.initEvent('change', false, true);
	input.dispatchEvent(evt);
});
{% endset %}
</script>

{{ demo( label, html, script, true) }}





{% set label %}
<label class="h2 mb-3">
	input_autogrow
</label>
{% endset %}

{% set html %}
<input type="text" id="input-autogrow" value="awesome,neat" autocomplete="off" placeholder="How cool is this?">
{% endset %}

<script>
{% set script %}
new TomSelect('#input-autogrow',{
	plugins: ['input_autogrow'],
});
{% endset %}
</script>

{{ demo( label, html, script) }}
